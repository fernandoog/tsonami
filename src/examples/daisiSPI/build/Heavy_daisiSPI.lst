ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 2
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"Heavy_daisiSPI.cpp"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text._ZN12HeavyContext7getSizeEv,"axG",%progbits,_ZN12HeavyContext7getSizeEv,comdat
  19              		.align	1
  20              		.p2align 2,,3
  21              		.weak	_ZN12HeavyContext7getSizeEv
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	_ZN12HeavyContext7getSizeEv:
  27              	.LVL0:
  28              	.LFB965:
  29              		.file 1 "source/HeavyContext.hpp"
   1:source/HeavyContext.hpp **** /**
   2:source/HeavyContext.hpp ****  * Copyright (c) 2014-2018 Enzien Audio Ltd.
   3:source/HeavyContext.hpp ****  *
   4:source/HeavyContext.hpp ****  * Permission to use, copy, modify, and/or distribute this software for any
   5:source/HeavyContext.hpp ****  * purpose with or without fee is hereby granted, provided that the above
   6:source/HeavyContext.hpp ****  * copyright notice and this permission notice appear in all copies.
   7:source/HeavyContext.hpp ****  *
   8:source/HeavyContext.hpp ****  * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
   9:source/HeavyContext.hpp ****  * REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
  10:source/HeavyContext.hpp ****  * AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
  11:source/HeavyContext.hpp ****  * INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
  12:source/HeavyContext.hpp ****  * LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
  13:source/HeavyContext.hpp ****  * OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
  14:source/HeavyContext.hpp ****  * PERFORMANCE OF THIS SOFTWARE.
  15:source/HeavyContext.hpp ****  */
  16:source/HeavyContext.hpp **** 
  17:source/HeavyContext.hpp **** #ifndef _HEAVY_CONTEXT_H_
  18:source/HeavyContext.hpp **** #define _HEAVY_CONTEXT_H_
  19:source/HeavyContext.hpp **** 
  20:source/HeavyContext.hpp **** #include "HeavyContextInterface.hpp"
  21:source/HeavyContext.hpp **** #include "HvLightPipe.h"
  22:source/HeavyContext.hpp **** #include "HvMessageQueue.h"
  23:source/HeavyContext.hpp **** #include "HvMath.h"
  24:source/HeavyContext.hpp **** 
  25:source/HeavyContext.hpp **** struct HvTable;
  26:source/HeavyContext.hpp **** 
  27:source/HeavyContext.hpp **** class HeavyContext : public HeavyContextInterface {
  28:source/HeavyContext.hpp **** 
  29:source/HeavyContext.hpp ****  public:
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s 			page 2


  30:source/HeavyContext.hpp ****   HeavyContext(double sampleRate, int poolKb=10, int inQueueKb=2, int outQueueKb=0);
  31:source/HeavyContext.hpp ****   virtual ~HeavyContext();
  32:source/HeavyContext.hpp **** 
  33:source/HeavyContext.hpp ****   int getSize() override { return (int) numBytes; }
  30              		.loc 1 33 7 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              		.loc 1 33 28 view .LVU1
  36              		.loc 1 33 51 is_stmt 0 view .LVU2
  37 0000 4069     		ldr	r0, [r0, #20]
  38              	.LVL1:
  39              		.loc 1 33 51 view .LVU3
  40 0002 7047     		bx	lr
  41              		.cfi_endproc
  42              	.LFE965:
  44              		.section	.text._ZN12HeavyContext13getSampleRateEv,"axG",%progbits,_ZN12HeavyContext13getSampleRate
  45              		.align	1
  46              		.p2align 2,,3
  47              		.weak	_ZN12HeavyContext13getSampleRateEv
  48              		.syntax unified
  49              		.thumb
  50              		.thumb_func
  52              	_ZN12HeavyContext13getSampleRateEv:
  53              	.LVL2:
  54              	.LFB966:
  34:source/HeavyContext.hpp **** 
  35:source/HeavyContext.hpp ****   double getSampleRate() override { return sampleRate; }
  55              		.loc 1 35 10 is_stmt 1 view -0
  56              		.cfi_startproc
  57              		@ args = 0, pretend = 0, frame = 0
  58              		@ frame_needed = 0, uses_anonymous_args = 0
  59              		@ link register save eliminated.
  60              		.loc 1 35 37 view .LVU5
  61              		.loc 1 35 56 is_stmt 0 view .LVU6
  62 0000 90ED020B 		vldr.64	d0, [r0, #8]
  63 0004 7047     		bx	lr
  64              		.cfi_endproc
  65              	.LFE966:
  67 0006 00BF     		.section	.text._ZN12HeavyContext16getCurrentSampleEv,"axG",%progbits,_ZN12HeavyContext16getCurrent
  68              		.align	1
  69              		.p2align 2,,3
  70              		.weak	_ZN12HeavyContext16getCurrentSampleEv
  71              		.syntax unified
  72              		.thumb
  73              		.thumb_func
  75              	_ZN12HeavyContext16getCurrentSampleEv:
  76              	.LVL3:
  77              	.LFB967:
  36:source/HeavyContext.hpp **** 
  37:source/HeavyContext.hpp ****   hv_uint32_t getCurrentSample() override { return blockStartTimestamp; }
  78              		.loc 1 37 15 is_stmt 1 view -0
  79              		.cfi_startproc
  80              		@ args = 0, pretend = 0, frame = 0
  81              		@ frame_needed = 0, uses_anonymous_args = 0
  82              		@ link register save eliminated.
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s 			page 3


  83              		.loc 1 37 45 view .LVU8
  84              		.loc 1 37 73 is_stmt 0 view .LVU9
  85 0000 0069     		ldr	r0, [r0, #16]
  86              	.LVL4:
  87              		.loc 1 37 73 view .LVU10
  88 0002 7047     		bx	lr
  89              		.cfi_endproc
  90              	.LFE967:
  92              		.section	.text._ZN12HeavyContext21samplesToMillisecondsEm,"axG",%progbits,_ZN12HeavyContext21sampl
  93              		.align	1
  94              		.p2align 2,,3
  95              		.weak	_ZN12HeavyContext21samplesToMillisecondsEm
  96              		.syntax unified
  97              		.thumb
  98              		.thumb_func
 100              	_ZN12HeavyContext21samplesToMillisecondsEm:
 101              	.LVL5:
 102              	.LFB968:
  38:source/HeavyContext.hpp ****   float samplesToMilliseconds(hv_uint32_t numSamples) override { return (float) (1000.0*numSamples/
 103              		.loc 1 38 9 is_stmt 1 view -0
 104              		.cfi_startproc
 105              		@ args = 0, pretend = 0, frame = 0
 106              		@ frame_needed = 0, uses_anonymous_args = 0
 107              		@ link register save eliminated.
 108              		.loc 1 38 66 view .LVU12
 109              		.loc 1 38 88 is_stmt 0 view .LVU13
 110 0000 07EE901A 		vmov	s15, r1	@ int
 111 0004 9FED065B 		vldr.64	d5, .L6
 112 0008 B8EE677B 		vcvt.f64.u32	d7, s15
 113              		.loc 1 38 99 view .LVU14
 114 000c 90ED026B 		vldr.64	d6, [r0, #8]
 115              		.loc 1 38 88 view .LVU15
 116 0010 27EE057B 		vmul.f64	d7, d7, d5
 117              		.loc 1 38 99 view .LVU16
 118 0014 87EE060B 		vdiv.f64	d0, d7, d6
 119              		.loc 1 38 113 view .LVU17
 120 0018 B7EEC00B 		vcvt.f32.f64	s0, d0
 121 001c 7047     		bx	lr
 122              	.L7:
 123 001e 00BF     		.align	3
 124              	.L6:
 125 0020 00000000 		.word	0
 126 0024 00408F40 		.word	1083129856
 127              		.cfi_endproc
 128              	.LFE968:
 130              		.section	.text._ZN12HeavyContext11setUserDataEPv,"axG",%progbits,_ZN12HeavyContext11setUserDataEPv
 131              		.align	1
 132              		.p2align 2,,3
 133              		.weak	_ZN12HeavyContext11setUserDataEPv
 134              		.syntax unified
 135              		.thumb
 136              		.thumb_func
 138              	_ZN12HeavyContext11setUserDataEPv:
 139              	.LVL6:
 140              	.LFB970:
  39:source/HeavyContext.hpp ****   hv_uint32_t millisecondsToSamples(float ms) override { return (hv_uint32_t) (hv_max_f(0.0f,ms)*sa
  40:source/HeavyContext.hpp **** 
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s 			page 4


  41:source/HeavyContext.hpp ****   void setUserData(void *x) override { userData = x; }
 141              		.loc 1 41 8 is_stmt 1 view -0
 142              		.cfi_startproc
 143              		@ args = 0, pretend = 0, frame = 0
 144              		@ frame_needed = 0, uses_anonymous_args = 0
 145              		@ link register save eliminated.
 146              		.loc 1 41 40 view .LVU19
 147              		.loc 1 41 49 is_stmt 0 view .LVU20
 148 0000 8165     		str	r1, [r0, #88]
 149              		.loc 1 41 54 view .LVU21
 150 0002 7047     		bx	lr
 151              		.cfi_endproc
 152              	.LFE970:
 154              		.section	.text._ZN12HeavyContext11getUserDataEv,"axG",%progbits,_ZN12HeavyContext11getUserDataEv,c
 155              		.align	1
 156              		.p2align 2,,3
 157              		.weak	_ZN12HeavyContext11getUserDataEv
 158              		.syntax unified
 159              		.thumb
 160              		.thumb_func
 162              	_ZN12HeavyContext11getUserDataEv:
 163              	.LVL7:
 164              	.LFB971:
  42:source/HeavyContext.hpp ****   void *getUserData() override { return userData; }
 165              		.loc 1 42 9 is_stmt 1 view -0
 166              		.cfi_startproc
 167              		@ args = 0, pretend = 0, frame = 0
 168              		@ frame_needed = 0, uses_anonymous_args = 0
 169              		@ link register save eliminated.
 170              		.loc 1 42 34 view .LVU23
 171              		.loc 1 42 51 is_stmt 0 view .LVU24
 172 0000 806D     		ldr	r0, [r0, #88]
 173              	.LVL8:
 174              		.loc 1 42 51 view .LVU25
 175 0002 7047     		bx	lr
 176              		.cfi_endproc
 177              	.LFE971:
 179              		.section	.text._ZN12HeavyContext11setSendHookEPFvP21HeavyContextInterfacePKcmPK9HvMessageE,"axG",%
 180              		.align	1
 181              		.p2align 2,,3
 182              		.weak	_ZN12HeavyContext11setSendHookEPFvP21HeavyContextInterfacePKcmPK9HvMessageE
 183              		.syntax unified
 184              		.thumb
 185              		.thumb_func
 187              	_ZN12HeavyContext11setSendHookEPFvP21HeavyContextInterfacePKcmPK9HvMessageE:
 188              	.LVL9:
 189              	.LFB972:
  43:source/HeavyContext.hpp **** 
  44:source/HeavyContext.hpp ****   // hook management
  45:source/HeavyContext.hpp ****   void setSendHook(HvSendHook_t *f) override { sendHook = f; }
 190              		.loc 1 45 8 is_stmt 1 view -0
 191              		.cfi_startproc
 192              		@ args = 0, pretend = 0, frame = 0
 193              		@ frame_needed = 0, uses_anonymous_args = 0
 194              		@ link register save eliminated.
 195              		.loc 1 45 48 view .LVU27
 196              		.loc 1 45 57 is_stmt 0 view .LVU28
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s 			page 5


 197 0000 0165     		str	r1, [r0, #80]
 198              		.loc 1 45 62 view .LVU29
 199 0002 7047     		bx	lr
 200              		.cfi_endproc
 201              	.LFE972:
 203              		.section	.text._ZN12HeavyContext11getSendHookEv,"axG",%progbits,_ZN12HeavyContext11getSendHookEv,c
 204              		.align	1
 205              		.p2align 2,,3
 206              		.weak	_ZN12HeavyContext11getSendHookEv
 207              		.syntax unified
 208              		.thumb
 209              		.thumb_func
 211              	_ZN12HeavyContext11getSendHookEv:
 212              	.LVL10:
 213              	.LFB973:
  46:source/HeavyContext.hpp ****   HvSendHook_t *getSendHook() override { return sendHook; }
 214              		.loc 1 46 17 is_stmt 1 view -0
 215              		.cfi_startproc
 216              		@ args = 0, pretend = 0, frame = 0
 217              		@ frame_needed = 0, uses_anonymous_args = 0
 218              		@ link register save eliminated.
 219              		.loc 1 46 42 view .LVU31
 220              		.loc 1 46 59 is_stmt 0 view .LVU32
 221 0000 006D     		ldr	r0, [r0, #80]
 222              	.LVL11:
 223              		.loc 1 46 59 view .LVU33
 224 0002 7047     		bx	lr
 225              		.cfi_endproc
 226              	.LFE973:
 228              		.section	.text._ZN12HeavyContext12setPrintHookEPFvP21HeavyContextInterfacePKcS3_PK9HvMessageE,"axG
 229              		.align	1
 230              		.p2align 2,,3
 231              		.weak	_ZN12HeavyContext12setPrintHookEPFvP21HeavyContextInterfacePKcS3_PK9HvMessageE
 232              		.syntax unified
 233              		.thumb
 234              		.thumb_func
 236              	_ZN12HeavyContext12setPrintHookEPFvP21HeavyContextInterfacePKcS3_PK9HvMessageE:
 237              	.LVL12:
 238              	.LFB974:
  47:source/HeavyContext.hpp **** 
  48:source/HeavyContext.hpp ****   void setPrintHook(HvPrintHook_t *f) override { printHook = f; }
 239              		.loc 1 48 8 is_stmt 1 view -0
 240              		.cfi_startproc
 241              		@ args = 0, pretend = 0, frame = 0
 242              		@ frame_needed = 0, uses_anonymous_args = 0
 243              		@ link register save eliminated.
 244              		.loc 1 48 50 view .LVU35
 245              		.loc 1 48 60 is_stmt 0 view .LVU36
 246 0000 4165     		str	r1, [r0, #84]
 247              		.loc 1 48 65 view .LVU37
 248 0002 7047     		bx	lr
 249              		.cfi_endproc
 250              	.LFE974:
 252              		.section	.text._ZN12HeavyContext12getPrintHookEv,"axG",%progbits,_ZN12HeavyContext12getPrintHookEv
 253              		.align	1
 254              		.p2align 2,,3
 255              		.weak	_ZN12HeavyContext12getPrintHookEv
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s 			page 6


 256              		.syntax unified
 257              		.thumb
 258              		.thumb_func
 260              	_ZN12HeavyContext12getPrintHookEv:
 261              	.LVL13:
 262              	.LFB975:
  49:source/HeavyContext.hpp ****   HvPrintHook_t *getPrintHook() override { return printHook; }
 263              		.loc 1 49 18 is_stmt 1 view -0
 264              		.cfi_startproc
 265              		@ args = 0, pretend = 0, frame = 0
 266              		@ frame_needed = 0, uses_anonymous_args = 0
 267              		@ link register save eliminated.
 268              		.loc 1 49 44 view .LVU39
 269              		.loc 1 49 62 is_stmt 0 view .LVU40
 270 0000 406D     		ldr	r0, [r0, #84]
 271              	.LVL14:
 272              		.loc 1 49 62 view .LVU41
 273 0002 7047     		bx	lr
 274              		.cfi_endproc
 275              	.LFE975:
 277              		.section	.rodata._ZN14Heavy_daisiSPI7getNameEv.str1.4,"aMS",%progbits,1
 278              		.align	2
 279              	.LC0:
 280 0000 64616973 		.ascii	"daisiSPI\000"
 280      69535049 
 280      00
 281              		.section	.text._ZN14Heavy_daisiSPI7getNameEv,"axG",%progbits,_ZN14Heavy_daisiSPI7getNameEv,comdat
 282              		.align	1
 283              		.p2align 2,,3
 284              		.weak	_ZN14Heavy_daisiSPI7getNameEv
 285              		.syntax unified
 286              		.thumb
 287              		.thumb_func
 289              	_ZN14Heavy_daisiSPI7getNameEv:
 290              	.LVL15:
 291              	.LFB988:
 292              		.file 2 "source/Heavy_daisiSPI.hpp"
   1:source/Heavy_daisiSPI.hpp **** /**
   2:source/Heavy_daisiSPI.hpp ****  * Copyright (c) 2023 Enzien Audio, Ltd.
   3:source/Heavy_daisiSPI.hpp ****  * 
   4:source/Heavy_daisiSPI.hpp ****  * Redistribution and use in source and binary forms, with or without modification,
   5:source/Heavy_daisiSPI.hpp ****  * are permitted provided that the following conditions are met:
   6:source/Heavy_daisiSPI.hpp ****  * 
   7:source/Heavy_daisiSPI.hpp ****  * 1. Redistributions of source code must retain the above copyright notice,
   8:source/Heavy_daisiSPI.hpp ****  *    this list of conditions, and the following disclaimer.
   9:source/Heavy_daisiSPI.hpp ****  * 
  10:source/Heavy_daisiSPI.hpp ****  * 2. Redistributions in binary form must reproduce the phrase "powered by heavy",
  11:source/Heavy_daisiSPI.hpp ****  *    the heavy logo, and a hyperlink to https://enzienaudio.com, all in a visible
  12:source/Heavy_daisiSPI.hpp ****  *    form.
  13:source/Heavy_daisiSPI.hpp ****  * 
  14:source/Heavy_daisiSPI.hpp ****  *   2.1 If the Application is distributed in a store system (for example,
  15:source/Heavy_daisiSPI.hpp ****  *       the Apple "App Store" or "Google Play"), the phrase "powered by heavy"
  16:source/Heavy_daisiSPI.hpp ****  *       shall be included in the app description or the copyright text as well as
  17:source/Heavy_daisiSPI.hpp ****  *       the in the app itself. The heavy logo will shall be visible in the app
  18:source/Heavy_daisiSPI.hpp ****  *       itself as well.
  19:source/Heavy_daisiSPI.hpp ****  * 
  20:source/Heavy_daisiSPI.hpp ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s 			page 7


  21:source/Heavy_daisiSPI.hpp ****  * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
  22:source/Heavy_daisiSPI.hpp ****  * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  23:source/Heavy_daisiSPI.hpp ****  * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  24:source/Heavy_daisiSPI.hpp ****  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  25:source/Heavy_daisiSPI.hpp ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  26:source/Heavy_daisiSPI.hpp ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  27:source/Heavy_daisiSPI.hpp ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  28:source/Heavy_daisiSPI.hpp ****  * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
  29:source/Heavy_daisiSPI.hpp ****  * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  30:source/Heavy_daisiSPI.hpp ****  * 
  31:source/Heavy_daisiSPI.hpp ****  */
  32:source/Heavy_daisiSPI.hpp **** 
  33:source/Heavy_daisiSPI.hpp **** #ifndef _HEAVY_CONTEXT_DAISISPI_HPP_
  34:source/Heavy_daisiSPI.hpp **** #define _HEAVY_CONTEXT_DAISISPI_HPP_
  35:source/Heavy_daisiSPI.hpp **** 
  36:source/Heavy_daisiSPI.hpp **** // object includes
  37:source/Heavy_daisiSPI.hpp **** #include "HeavyContext.hpp"
  38:source/Heavy_daisiSPI.hpp **** #include "HvControlBinop.h"
  39:source/Heavy_daisiSPI.hpp **** #include "HvMath.h"
  40:source/Heavy_daisiSPI.hpp **** #include "HvSignalPhasor.h"
  41:source/Heavy_daisiSPI.hpp **** #include "HvSignalVar.h"
  42:source/Heavy_daisiSPI.hpp **** #include "HvControlVar.h"
  43:source/Heavy_daisiSPI.hpp **** 
  44:source/Heavy_daisiSPI.hpp **** class Heavy_daisiSPI : public HeavyContext {
  45:source/Heavy_daisiSPI.hpp **** 
  46:source/Heavy_daisiSPI.hpp ****  public:
  47:source/Heavy_daisiSPI.hpp ****   Heavy_daisiSPI(double sampleRate, int poolKb=10, int inQueueKb=2, int outQueueKb=0);
  48:source/Heavy_daisiSPI.hpp ****   ~Heavy_daisiSPI();
  49:source/Heavy_daisiSPI.hpp **** 
  50:source/Heavy_daisiSPI.hpp ****   const char *getName() override { return "daisiSPI"; }
 293              		.loc 2 50 15 is_stmt 1 view -0
 294              		.cfi_startproc
 295              		@ args = 0, pretend = 0, frame = 0
 296              		@ frame_needed = 0, uses_anonymous_args = 0
 297              		@ link register save eliminated.
 298              		.loc 2 50 36 view .LVU43
 299              		.loc 2 50 55 is_stmt 0 view .LVU44
 300 0000 0048     		ldr	r0, .L15
 301              	.LVL16:
 302              		.loc 2 50 55 view .LVU45
 303 0002 7047     		bx	lr
 304              	.L16:
 305              		.align	2
 306              	.L15:
 307 0004 00000000 		.word	.LC0
 308              		.cfi_endproc
 309              	.LFE988:
 311              		.section	.text._ZN14Heavy_daisiSPI19getNumInputChannelsEv,"axG",%progbits,_ZN14Heavy_daisiSPI19get
 312              		.align	1
 313              		.p2align 2,,3
 314              		.weak	_ZN14Heavy_daisiSPI19getNumInputChannelsEv
 315              		.syntax unified
 316              		.thumb
 317              		.thumb_func
 319              	_ZN14Heavy_daisiSPI19getNumInputChannelsEv:
 320              	.LVL17:
 321              	.LFB989:
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s 			page 8


  51:source/Heavy_daisiSPI.hpp ****   int getNumInputChannels() override { return 0; }
 322              		.loc 2 51 7 is_stmt 1 view -0
 323              		.cfi_startproc
 324              		@ args = 0, pretend = 0, frame = 0
 325              		@ frame_needed = 0, uses_anonymous_args = 0
 326              		@ link register save eliminated.
 327              		.loc 2 51 40 view .LVU47
 328              		.loc 2 51 50 is_stmt 0 view .LVU48
 329 0000 0020     		movs	r0, #0
 330              	.LVL18:
 331              		.loc 2 51 50 view .LVU49
 332 0002 7047     		bx	lr
 333              		.cfi_endproc
 334              	.LFE989:
 336              		.section	.text._ZN14Heavy_daisiSPI20getNumOutputChannelsEv,"axG",%progbits,_ZN14Heavy_daisiSPI20ge
 337              		.align	1
 338              		.p2align 2,,3
 339              		.weak	_ZN14Heavy_daisiSPI20getNumOutputChannelsEv
 340              		.syntax unified
 341              		.thumb
 342              		.thumb_func
 344              	_ZN14Heavy_daisiSPI20getNumOutputChannelsEv:
 345              	.LVL19:
 346              	.LFB990:
  52:source/Heavy_daisiSPI.hpp ****   int getNumOutputChannels() override { return 2; }
 347              		.loc 2 52 7 is_stmt 1 view -0
 348              		.cfi_startproc
 349              		@ args = 0, pretend = 0, frame = 0
 350              		@ frame_needed = 0, uses_anonymous_args = 0
 351              		@ link register save eliminated.
 352              		.loc 2 52 41 view .LVU51
 353              		.loc 2 52 51 is_stmt 0 view .LVU52
 354 0000 0220     		movs	r0, #2
 355              	.LVL20:
 356              		.loc 2 52 51 view .LVU53
 357 0002 7047     		bx	lr
 358              		.cfi_endproc
 359              	.LFE990:
 361              		.section	.text._ZN14Heavy_daisiSPI15getTableForHashEm,"ax",%progbits
 362              		.align	1
 363              		.p2align 2,,3
 364              		.global	_ZN14Heavy_daisiSPI15getTableForHashEm
 365              		.syntax unified
 366              		.thumb
 367              		.thumb_func
 369              	_ZN14Heavy_daisiSPI15getTableForHashEm:
 370              	.LVL21:
 371              	.LFB1000:
 372              		.file 3 "source/Heavy_daisiSPI.cpp"
   1:source/Heavy_daisiSPI.cpp **** /**
   2:source/Heavy_daisiSPI.cpp ****  * Copyright (c) 2023 Enzien Audio, Ltd.
   3:source/Heavy_daisiSPI.cpp ****  * 
   4:source/Heavy_daisiSPI.cpp ****  * Redistribution and use in source and binary forms, with or without modification,
   5:source/Heavy_daisiSPI.cpp ****  * are permitted provided that the following conditions are met:
   6:source/Heavy_daisiSPI.cpp ****  * 
   7:source/Heavy_daisiSPI.cpp ****  * 1. Redistributions of source code must retain the above copyright notice,
   8:source/Heavy_daisiSPI.cpp ****  *    this list of conditions, and the following disclaimer.
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s 			page 9


   9:source/Heavy_daisiSPI.cpp ****  * 
  10:source/Heavy_daisiSPI.cpp ****  * 2. Redistributions in binary form must reproduce the phrase "powered by heavy",
  11:source/Heavy_daisiSPI.cpp ****  *    the heavy logo, and a hyperlink to https://enzienaudio.com, all in a visible
  12:source/Heavy_daisiSPI.cpp ****  *    form.
  13:source/Heavy_daisiSPI.cpp ****  * 
  14:source/Heavy_daisiSPI.cpp ****  *   2.1 If the Application is distributed in a store system (for example,
  15:source/Heavy_daisiSPI.cpp ****  *       the Apple "App Store" or "Google Play"), the phrase "powered by heavy"
  16:source/Heavy_daisiSPI.cpp ****  *       shall be included in the app description or the copyright text as well as
  17:source/Heavy_daisiSPI.cpp ****  *       the in the app itself. The heavy logo will shall be visible in the app
  18:source/Heavy_daisiSPI.cpp ****  *       itself as well.
  19:source/Heavy_daisiSPI.cpp ****  * 
  20:source/Heavy_daisiSPI.cpp ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  21:source/Heavy_daisiSPI.cpp ****  * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
  22:source/Heavy_daisiSPI.cpp ****  * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  23:source/Heavy_daisiSPI.cpp ****  * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  24:source/Heavy_daisiSPI.cpp ****  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  25:source/Heavy_daisiSPI.cpp ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  26:source/Heavy_daisiSPI.cpp ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  27:source/Heavy_daisiSPI.cpp ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  28:source/Heavy_daisiSPI.cpp ****  * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
  29:source/Heavy_daisiSPI.cpp ****  * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  30:source/Heavy_daisiSPI.cpp ****  * 
  31:source/Heavy_daisiSPI.cpp ****  */
  32:source/Heavy_daisiSPI.cpp **** 
  33:source/Heavy_daisiSPI.cpp **** #include "Heavy_daisiSPI.hpp"
  34:source/Heavy_daisiSPI.cpp **** 
  35:source/Heavy_daisiSPI.cpp **** #define Context(_c) reinterpret_cast<Heavy_daisiSPI *>(_c)
  36:source/Heavy_daisiSPI.cpp **** 
  37:source/Heavy_daisiSPI.cpp **** 
  38:source/Heavy_daisiSPI.cpp **** 
  39:source/Heavy_daisiSPI.cpp **** /*
  40:source/Heavy_daisiSPI.cpp ****  * C Functions
  41:source/Heavy_daisiSPI.cpp ****  */
  42:source/Heavy_daisiSPI.cpp **** 
  43:source/Heavy_daisiSPI.cpp **** extern "C" {
  44:source/Heavy_daisiSPI.cpp ****   HV_EXPORT HeavyContextInterface *hv_daisiSPI_new(double sampleRate) {
  45:source/Heavy_daisiSPI.cpp ****     return new Heavy_daisiSPI(sampleRate);
  46:source/Heavy_daisiSPI.cpp ****   }
  47:source/Heavy_daisiSPI.cpp **** 
  48:source/Heavy_daisiSPI.cpp ****   HV_EXPORT HeavyContextInterface *hv_daisiSPI_new_with_options(double sampleRate,
  49:source/Heavy_daisiSPI.cpp ****       int poolKb, int inQueueKb, int outQueueKb) {
  50:source/Heavy_daisiSPI.cpp ****     return new Heavy_daisiSPI(sampleRate, poolKb, inQueueKb, outQueueKb);
  51:source/Heavy_daisiSPI.cpp ****   }
  52:source/Heavy_daisiSPI.cpp **** } // extern "C"
  53:source/Heavy_daisiSPI.cpp **** 
  54:source/Heavy_daisiSPI.cpp **** 
  55:source/Heavy_daisiSPI.cpp **** 
  56:source/Heavy_daisiSPI.cpp **** 
  57:source/Heavy_daisiSPI.cpp **** 
  58:source/Heavy_daisiSPI.cpp **** 
  59:source/Heavy_daisiSPI.cpp **** 
  60:source/Heavy_daisiSPI.cpp **** /*
  61:source/Heavy_daisiSPI.cpp ****  * Class Functions
  62:source/Heavy_daisiSPI.cpp ****  */
  63:source/Heavy_daisiSPI.cpp **** 
  64:source/Heavy_daisiSPI.cpp **** Heavy_daisiSPI::Heavy_daisiSPI(double sampleRate, int poolKb, int inQueueKb, int outQueueKb)
  65:source/Heavy_daisiSPI.cpp ****     : HeavyContext(sampleRate, poolKb, inQueueKb, outQueueKb) {
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s 			page 10


  66:source/Heavy_daisiSPI.cpp ****   numBytes += sPhasor_k_init(&sPhasor_RBvhg4gc, 440.0f, sampleRate);
  67:source/Heavy_daisiSPI.cpp ****   numBytes += cVar_init_f(&cVar_wlVKX9gk, 0.0f);
  68:source/Heavy_daisiSPI.cpp ****   numBytes += cBinop_init(&cBinop_BDSEPqyt, 1.0f); // __pow
  69:source/Heavy_daisiSPI.cpp ****   
  70:source/Heavy_daisiSPI.cpp **** }
  71:source/Heavy_daisiSPI.cpp **** 
  72:source/Heavy_daisiSPI.cpp **** Heavy_daisiSPI::~Heavy_daisiSPI() {
  73:source/Heavy_daisiSPI.cpp ****   // nothing to free
  74:source/Heavy_daisiSPI.cpp **** }
  75:source/Heavy_daisiSPI.cpp **** 
  76:source/Heavy_daisiSPI.cpp **** HvTable *Heavy_daisiSPI::getTableForHash(hv_uint32_t tableHash) {
 373              		.loc 3 76 65 is_stmt 1 view -0
 374              		.cfi_startproc
 375              		@ args = 0, pretend = 0, frame = 0
 376              		@ frame_needed = 0, uses_anonymous_args = 0
 377              		@ link register save eliminated.
  77:source/Heavy_daisiSPI.cpp ****   return nullptr;
 378              		.loc 3 77 3 view .LVU55
  78:source/Heavy_daisiSPI.cpp **** }
 379              		.loc 3 78 1 is_stmt 0 view .LVU56
 380 0000 0020     		movs	r0, #0
 381              	.LVL22:
 382              		.loc 3 78 1 view .LVU57
 383 0002 7047     		bx	lr
 384              		.cfi_endproc
 385              	.LFE1000:
 387              		.section	.text._ZN14Heavy_daisiSPI26scheduleMessageForReceiverEmP9HvMessage,"ax",%progbits
 388              		.align	1
 389              		.p2align 2,,3
 390              		.global	_ZN14Heavy_daisiSPI26scheduleMessageForReceiverEmP9HvMessage
 391              		.syntax unified
 392              		.thumb
 393              		.thumb_func
 395              	_ZN14Heavy_daisiSPI26scheduleMessageForReceiverEmP9HvMessage:
 396              	.LVL23:
 397              	.LFB1001:
  79:source/Heavy_daisiSPI.cpp **** 
  80:source/Heavy_daisiSPI.cpp **** void Heavy_daisiSPI::scheduleMessageForReceiver(hv_uint32_t receiverHash, HvMessage *m) {
 398              		.loc 3 80 89 is_stmt 1 view -0
 399              		.cfi_startproc
 400              		@ args = 0, pretend = 0, frame = 0
 401              		@ frame_needed = 0, uses_anonymous_args = 0
 402              		@ link register save eliminated.
  81:source/Heavy_daisiSPI.cpp ****   switch (receiverHash) {
 403              		.loc 3 81 3 view .LVU59
  82:source/Heavy_daisiSPI.cpp ****     default: return;
 404              		.loc 3 82 5 view .LVU60
 405              		.loc 3 82 14 view .LVU61
  83:source/Heavy_daisiSPI.cpp ****   }
  84:source/Heavy_daisiSPI.cpp **** }
 406              		.loc 3 84 1 is_stmt 0 view .LVU62
 407 0000 7047     		bx	lr
 408              		.cfi_endproc
 409              	.LFE1001:
 411 0002 00BF     		.section	.rodata._ZN14Heavy_daisiSPI16getParameterInfoEiP15HvParameterInfo.str1.4,"aMS",%progbits,
 412              		.align	2
 413              	.LC1:
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s 			page 11


 414 0000 696E7661 		.ascii	"invalid parameter index\000"
 414      6C696420 
 414      70617261 
 414      6D657465 
 414      7220696E 
 415              		.section	.text._ZN14Heavy_daisiSPI16getParameterInfoEiP15HvParameterInfo,"ax",%progbits
 416              		.align	1
 417              		.p2align 2,,3
 418              		.global	_ZN14Heavy_daisiSPI16getParameterInfoEiP15HvParameterInfo
 419              		.syntax unified
 420              		.thumb
 421              		.thumb_func
 423              	_ZN14Heavy_daisiSPI16getParameterInfoEiP15HvParameterInfo:
 424              	.LVL24:
 425              	.LFB1002:
  85:source/Heavy_daisiSPI.cpp **** 
  86:source/Heavy_daisiSPI.cpp **** int Heavy_daisiSPI::getParameterInfo(int index, HvParameterInfo *info) {
 426              		.loc 3 86 72 is_stmt 1 view -0
 427              		.cfi_startproc
 428              		@ args = 0, pretend = 0, frame = 0
 429              		@ frame_needed = 0, uses_anonymous_args = 0
 430              		@ link register save eliminated.
  87:source/Heavy_daisiSPI.cpp ****   if (info != nullptr) {
 431              		.loc 3 87 3 view .LVU64
 432 0000 42B1     		cbz	r2, .L22
  88:source/Heavy_daisiSPI.cpp ****     switch (index) {
 433              		.loc 3 88 5 view .LVU65
  89:source/Heavy_daisiSPI.cpp ****       default: {
 434              		.loc 3 89 7 view .LVU66
 435              		.loc 3 89 16 view .LVU67
  90:source/Heavy_daisiSPI.cpp ****         info->name = "invalid parameter index";
 436              		.loc 3 90 9 view .LVU68
  91:source/Heavy_daisiSPI.cpp ****         info->hash = 0;
  92:source/Heavy_daisiSPI.cpp ****         info->type = HvParameterType::HV_PARAM_TYPE_PARAMETER_IN;
  93:source/Heavy_daisiSPI.cpp ****         info->minVal = 0.0f;
 437              		.loc 3 93 22 is_stmt 0 view .LVU69
 438 0002 0023     		movs	r3, #0
  91:source/Heavy_daisiSPI.cpp ****         info->hash = 0;
 439              		.loc 3 91 20 view .LVU70
 440 0004 0021     		movs	r1, #0
 441              	.LVL25:
  90:source/Heavy_daisiSPI.cpp ****         info->name = "invalid parameter index";
 442              		.loc 3 90 20 view .LVU71
 443 0006 0448     		ldr	r0, .L26
 444              	.LVL26:
  91:source/Heavy_daisiSPI.cpp ****         info->hash = 0;
 445              		.loc 3 91 20 view .LVU72
 446 0008 5160     		str	r1, [r2, #4]
  92:source/Heavy_daisiSPI.cpp ****         info->minVal = 0.0f;
 447              		.loc 3 92 20 view .LVU73
 448 000a 1172     		strb	r1, [r2, #8]
  90:source/Heavy_daisiSPI.cpp ****         info->name = "invalid parameter index";
 449              		.loc 3 90 20 view .LVU74
 450 000c 1060     		str	r0, [r2]
  91:source/Heavy_daisiSPI.cpp ****         info->hash = 0;
 451              		.loc 3 91 9 is_stmt 1 view .LVU75
  92:source/Heavy_daisiSPI.cpp ****         info->minVal = 0.0f;
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s 			page 12


 452              		.loc 3 92 9 view .LVU76
 453              		.loc 3 93 9 view .LVU77
 454              		.loc 3 93 22 is_stmt 0 view .LVU78
 455 000e D360     		str	r3, [r2, #12]	@ float
  94:source/Heavy_daisiSPI.cpp ****         info->maxVal = 0.0f;
 456              		.loc 3 94 9 is_stmt 1 view .LVU79
 457              		.loc 3 94 22 is_stmt 0 view .LVU80
 458 0010 1361     		str	r3, [r2, #16]	@ float
  95:source/Heavy_daisiSPI.cpp ****         info->defaultVal = 0.0f;
 459              		.loc 3 95 9 is_stmt 1 view .LVU81
 460              		.loc 3 95 26 is_stmt 0 view .LVU82
 461 0012 5361     		str	r3, [r2, #20]	@ float
  96:source/Heavy_daisiSPI.cpp ****         break;
 462              		.loc 3 96 9 is_stmt 1 view .LVU83
 463              	.L22:
  97:source/Heavy_daisiSPI.cpp ****       }
  98:source/Heavy_daisiSPI.cpp ****     }
  99:source/Heavy_daisiSPI.cpp ****   }
 100:source/Heavy_daisiSPI.cpp ****   return 0;
 464              		.loc 3 100 3 view .LVU84
 101:source/Heavy_daisiSPI.cpp **** }
 465              		.loc 3 101 1 is_stmt 0 view .LVU85
 466 0014 0020     		movs	r0, #0
 467 0016 7047     		bx	lr
 468              	.L27:
 469              		.align	2
 470              	.L26:
 471 0018 00000000 		.word	.LC1
 472              		.cfi_endproc
 473              	.LFE1002:
 475              		.section	.text._ZN14Heavy_daisiSPID2Ev,"ax",%progbits
 476              		.align	1
 477              		.p2align 2,,3
 478              		.global	_ZN14Heavy_daisiSPID2Ev
 479              		.syntax unified
 480              		.thumb
 481              		.thumb_func
 483              	_ZN14Heavy_daisiSPID2Ev:
 484              	.LVL27:
 485              	.LFB997:
  72:source/Heavy_daisiSPI.cpp ****   // nothing to free
 486              		.loc 3 72 1 is_stmt 1 view -0
 487              		.cfi_startproc
 488              		@ args = 0, pretend = 0, frame = 0
 489              		@ frame_needed = 0, uses_anonymous_args = 0
 490              	.LBB67:
  72:source/Heavy_daisiSPI.cpp ****   // nothing to free
 491              		.loc 3 72 33 is_stmt 0 view .LVU87
 492 0000 034B     		ldr	r3, .L30
 493              	.LBE67:
  72:source/Heavy_daisiSPI.cpp ****   // nothing to free
 494              		.loc 3 72 1 view .LVU88
 495 0002 10B5     		push	{r4, lr}
 496              		.cfi_def_cfa_offset 8
 497              		.cfi_offset 4, -8
 498              		.cfi_offset 14, -4
  72:source/Heavy_daisiSPI.cpp ****   // nothing to free
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s 			page 13


 499              		.loc 3 72 1 view .LVU89
 500 0004 0446     		mov	r4, r0
 501              	.LBB68:
  72:source/Heavy_daisiSPI.cpp ****   // nothing to free
 502              		.loc 3 72 33 view .LVU90
 503 0006 0360     		str	r3, [r0]
 504 0008 FFF7FEFF 		bl	_ZN12HeavyContextD2Ev
 505              	.LVL28:
  72:source/Heavy_daisiSPI.cpp ****   // nothing to free
 506              		.loc 3 72 33 view .LVU91
 507              	.LBE68:
  74:source/Heavy_daisiSPI.cpp **** 
 508              		.loc 3 74 1 view .LVU92
 509 000c 2046     		mov	r0, r4
 510 000e 10BD     		pop	{r4, pc}
 511              	.LVL29:
 512              	.L31:
  74:source/Heavy_daisiSPI.cpp **** 
 513              		.loc 3 74 1 view .LVU93
 514              		.align	2
 515              	.L30:
 516 0010 08000000 		.word	.LANCHOR0+8
 517              		.cfi_endproc
 518              	.LFE997:
 520              		.global	_ZN14Heavy_daisiSPID1Ev
 521              		.thumb_set _ZN14Heavy_daisiSPID1Ev,_ZN14Heavy_daisiSPID2Ev
 522              		.section	.text._ZN14Heavy_daisiSPID0Ev,"ax",%progbits
 523              		.align	1
 524              		.p2align 2,,3
 525              		.global	_ZN14Heavy_daisiSPID0Ev
 526              		.syntax unified
 527              		.thumb
 528              		.thumb_func
 530              	_ZN14Heavy_daisiSPID0Ev:
 531              	.LVL30:
 532              	.LFB999:
  72:source/Heavy_daisiSPI.cpp ****   // nothing to free
 533              		.loc 3 72 1 is_stmt 1 view -0
 534              		.cfi_startproc
 535              		@ args = 0, pretend = 0, frame = 0
 536              		@ frame_needed = 0, uses_anonymous_args = 0
 537              	.LBB69:
 538              	.LBB70:
  72:source/Heavy_daisiSPI.cpp ****   // nothing to free
 539              		.loc 3 72 33 is_stmt 0 view .LVU95
 540 0000 054B     		ldr	r3, .L34
 541              	.LBE70:
 542              	.LBE69:
  72:source/Heavy_daisiSPI.cpp ****   // nothing to free
 543              		.loc 3 72 1 view .LVU96
 544 0002 10B5     		push	{r4, lr}
 545              		.cfi_def_cfa_offset 8
 546              		.cfi_offset 4, -8
 547              		.cfi_offset 14, -4
  72:source/Heavy_daisiSPI.cpp ****   // nothing to free
 548              		.loc 3 72 1 view .LVU97
 549 0004 0446     		mov	r4, r0
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s 			page 14


 550              	.LVL31:
 551              	.LBB72:
 552              	.LBI69:
  72:source/Heavy_daisiSPI.cpp ****   // nothing to free
 553              		.loc 3 72 1 is_stmt 1 view .LVU98
 554              	.LBB71:
  72:source/Heavy_daisiSPI.cpp ****   // nothing to free
 555              		.loc 3 72 33 is_stmt 0 view .LVU99
 556 0006 0360     		str	r3, [r0]
 557 0008 FFF7FEFF 		bl	_ZN12HeavyContextD2Ev
 558              	.LVL32:
  72:source/Heavy_daisiSPI.cpp ****   // nothing to free
 559              		.loc 3 72 33 view .LVU100
 560              	.LBE71:
 561              	.LBE72:
  74:source/Heavy_daisiSPI.cpp **** 
 562              		.loc 3 74 1 view .LVU101
 563 000c B821     		movs	r1, #184
 564 000e 2046     		mov	r0, r4
 565 0010 FFF7FEFF 		bl	_ZdlPvj
 566              	.LVL33:
 567 0014 2046     		mov	r0, r4
 568 0016 10BD     		pop	{r4, pc}
 569              	.LVL34:
 570              	.L35:
  74:source/Heavy_daisiSPI.cpp **** 
 571              		.loc 3 74 1 view .LVU102
 572              		.align	2
 573              	.L34:
 574 0018 08000000 		.word	.LANCHOR0+8
 575              		.cfi_endproc
 576              	.LFE999:
 578              		.section	.text._ZN14Heavy_daisiSPI27cBinop_JTMczcYU_sendMessageEP21HeavyContextInterfaceiPK9HvMess
 579              		.align	1
 580              		.p2align 2,,3
 581              		.global	_ZN14Heavy_daisiSPI27cBinop_JTMczcYU_sendMessageEP21HeavyContextInterfaceiPK9HvMessage
 582              		.syntax unified
 583              		.thumb
 584              		.thumb_func
 586              	_ZN14Heavy_daisiSPI27cBinop_JTMczcYU_sendMessageEP21HeavyContextInterfaceiPK9HvMessage:
 587              	.LVL35:
 588              	.LFB1005:
 102:source/Heavy_daisiSPI.cpp **** 
 103:source/Heavy_daisiSPI.cpp **** 
 104:source/Heavy_daisiSPI.cpp **** 
 105:source/Heavy_daisiSPI.cpp **** /*
 106:source/Heavy_daisiSPI.cpp ****  * Send Function Implementations
 107:source/Heavy_daisiSPI.cpp ****  */
 108:source/Heavy_daisiSPI.cpp **** 
 109:source/Heavy_daisiSPI.cpp **** 
 110:source/Heavy_daisiSPI.cpp **** void Heavy_daisiSPI::cVar_wlVKX9gk_sendMessage(HeavyContextInterface *_c, int letIn, const HvMessag
 111:source/Heavy_daisiSPI.cpp ****   cBinop_k_onMessage(_c, NULL, HV_BINOP_MULTIPLY, 2.0f, 0, m, &cBinop_sEn9bNjH_sendMessage);
 112:source/Heavy_daisiSPI.cpp **** }
 113:source/Heavy_daisiSPI.cpp **** 
 114:source/Heavy_daisiSPI.cpp **** void Heavy_daisiSPI::cBinop_FIChmvMr_sendMessage(HeavyContextInterface *_c, int letIn, const HvMess
 115:source/Heavy_daisiSPI.cpp ****   sPhasor_k_onMessage(_c, &Context(_c)->sPhasor_RBvhg4gc, 0, m);
 116:source/Heavy_daisiSPI.cpp **** }
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s 			page 15


 117:source/Heavy_daisiSPI.cpp **** 
 118:source/Heavy_daisiSPI.cpp **** void Heavy_daisiSPI::cBinop_JTMczcYU_sendMessage(HeavyContextInterface *_c, int letIn, const HvMess
 589              		.loc 3 118 108 is_stmt 1 view -0
 590              		.cfi_startproc
 591              		@ args = 0, pretend = 0, frame = 0
 592              		@ frame_needed = 0, uses_anonymous_args = 0
 119:source/Heavy_daisiSPI.cpp ****   cBinop_k_onMessage(_c, NULL, HV_BINOP_DIVIDE, 12.0f, 0, m, &cBinop_Jyn65ylg_sendMessage);
 593              		.loc 3 119 3 view .LVU104
 118:source/Heavy_daisiSPI.cpp ****   cBinop_k_onMessage(_c, NULL, HV_BINOP_DIVIDE, 12.0f, 0, m, &cBinop_Jyn65ylg_sendMessage);
 594              		.loc 3 118 108 is_stmt 0 view .LVU105
 595 0000 10B5     		push	{r4, lr}
 596              		.cfi_def_cfa_offset 8
 597              		.cfi_offset 4, -8
 598              		.cfi_offset 14, -4
 599 0002 1146     		mov	r1, r2
 600              	.LVL36:
 118:source/Heavy_daisiSPI.cpp ****   cBinop_k_onMessage(_c, NULL, HV_BINOP_DIVIDE, 12.0f, 0, m, &cBinop_Jyn65ylg_sendMessage);
 601              		.loc 3 118 108 view .LVU106
 602 0004 82B0     		sub	sp, sp, #8
 603              		.cfi_def_cfa_offset 16
 604              		.loc 3 119 21 view .LVU107
 605 0006 0023     		movs	r3, #0
 606 0008 054C     		ldr	r4, .L38
 607 000a B2EE080A 		vmov.f32	s0, #1.2e+1
 608 000e 0322     		movs	r2, #3
 609              	.LVL37:
 610              		.loc 3 119 21 view .LVU108
 611 0010 CDE90014 		strd	r1, r4, [sp]
 612 0014 1946     		mov	r1, r3
 613              	.LVL38:
 614              		.loc 3 119 21 view .LVU109
 615 0016 FFF7FEFF 		bl	cBinop_k_onMessage
 616              	.LVL39:
 120:source/Heavy_daisiSPI.cpp **** }
 617              		.loc 3 120 1 view .LVU110
 618 001a 02B0     		add	sp, sp, #8
 619              		.cfi_def_cfa_offset 8
 620              		@ sp needed
 621 001c 10BD     		pop	{r4, pc}
 622              	.L39:
 623 001e 00BF     		.align	2
 624              	.L38:
 625 0020 00000000 		.word	_ZN14Heavy_daisiSPI27cBinop_Jyn65ylg_sendMessageEP21HeavyContextInterfaceiPK9HvMessage
 626              		.cfi_endproc
 627              	.LFE1005:
 629              		.section	.text._ZN14Heavy_daisiSPI27cBinop_BDSEPqyt_sendMessageEP21HeavyContextInterfaceiPK9HvMess
 630              		.align	1
 631              		.p2align 2,,3
 632              		.global	_ZN14Heavy_daisiSPI27cBinop_BDSEPqyt_sendMessageEP21HeavyContextInterfaceiPK9HvMessage
 633              		.syntax unified
 634              		.thumb
 635              		.thumb_func
 637              	_ZN14Heavy_daisiSPI27cBinop_BDSEPqyt_sendMessageEP21HeavyContextInterfaceiPK9HvMessage:
 638              	.LVL40:
 639              	.LFB1007:
 121:source/Heavy_daisiSPI.cpp **** 
 122:source/Heavy_daisiSPI.cpp **** void Heavy_daisiSPI::cBinop_Jyn65ylg_sendMessage(HeavyContextInterface *_c, int letIn, const HvMess
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s 			page 16


 123:source/Heavy_daisiSPI.cpp ****   cBinop_onMessage(_c, &Context(_c)->cBinop_BDSEPqyt, HV_BINOP_POW, 1, m, &cBinop_BDSEPqyt_sendMess
 124:source/Heavy_daisiSPI.cpp ****   cMsg_syaTLOhI_sendMessage(_c, 0, m);
 125:source/Heavy_daisiSPI.cpp **** }
 126:source/Heavy_daisiSPI.cpp **** 
 127:source/Heavy_daisiSPI.cpp **** void Heavy_daisiSPI::cBinop_BDSEPqyt_sendMessage(HeavyContextInterface *_c, int letIn, const HvMess
 640              		.loc 3 127 108 is_stmt 1 view -0
 641              		.cfi_startproc
 642              		@ args = 0, pretend = 0, frame = 0
 643              		@ frame_needed = 0, uses_anonymous_args = 0
 128:source/Heavy_daisiSPI.cpp ****   cBinop_k_onMessage(_c, NULL, HV_BINOP_MULTIPLY, 440.0f, 0, m, &cBinop_FIChmvMr_sendMessage);
 644              		.loc 3 128 3 view .LVU112
 127:source/Heavy_daisiSPI.cpp ****   cBinop_k_onMessage(_c, NULL, HV_BINOP_MULTIPLY, 440.0f, 0, m, &cBinop_FIChmvMr_sendMessage);
 645              		.loc 3 127 108 is_stmt 0 view .LVU113
 646 0000 10B5     		push	{r4, lr}
 647              		.cfi_def_cfa_offset 8
 648              		.cfi_offset 4, -8
 649              		.cfi_offset 14, -4
 650 0002 1146     		mov	r1, r2
 651              	.LVL41:
 127:source/Heavy_daisiSPI.cpp ****   cBinop_k_onMessage(_c, NULL, HV_BINOP_MULTIPLY, 440.0f, 0, m, &cBinop_FIChmvMr_sendMessage);
 652              		.loc 3 127 108 view .LVU114
 653 0004 82B0     		sub	sp, sp, #8
 654              		.cfi_def_cfa_offset 16
 655              		.loc 3 128 21 view .LVU115
 656 0006 0023     		movs	r3, #0
 657 0008 054C     		ldr	r4, .L42
 658 000a 9FED060A 		vldr.32	s0, .L42+4
 659 000e 0222     		movs	r2, #2
 660              	.LVL42:
 661              		.loc 3 128 21 view .LVU116
 662 0010 CDE90014 		strd	r1, r4, [sp]
 663 0014 1946     		mov	r1, r3
 664              	.LVL43:
 665              		.loc 3 128 21 view .LVU117
 666 0016 FFF7FEFF 		bl	cBinop_k_onMessage
 667              	.LVL44:
 129:source/Heavy_daisiSPI.cpp **** }
 668              		.loc 3 129 1 view .LVU118
 669 001a 02B0     		add	sp, sp, #8
 670              		.cfi_def_cfa_offset 8
 671              		@ sp needed
 672 001c 10BD     		pop	{r4, pc}
 673              	.L43:
 674 001e 00BF     		.align	2
 675              	.L42:
 676 0020 00000000 		.word	_ZN14Heavy_daisiSPI27cBinop_FIChmvMr_sendMessageEP21HeavyContextInterfaceiPK9HvMessage
 677 0024 0000DC43 		.word	1138491392
 678              		.cfi_endproc
 679              	.LFE1007:
 681              		.section	.text._ZN14Heavy_daisiSPI27cBinop_PbjUu1XL_sendMessageEP21HeavyContextInterfaceiPK9HvMess
 682              		.align	1
 683              		.p2align 2,,3
 684              		.global	_ZN14Heavy_daisiSPI27cBinop_PbjUu1XL_sendMessageEP21HeavyContextInterfaceiPK9HvMessage
 685              		.syntax unified
 686              		.thumb
 687              		.thumb_func
 689              	_ZN14Heavy_daisiSPI27cBinop_PbjUu1XL_sendMessageEP21HeavyContextInterfaceiPK9HvMessage:
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s 			page 17


 690              	.LVL45:
 691              	.LFB1009:
 130:source/Heavy_daisiSPI.cpp **** 
 131:source/Heavy_daisiSPI.cpp **** void Heavy_daisiSPI::cMsg_syaTLOhI_sendMessage(HeavyContextInterface *_c, int letIn, const HvMessag
 132:source/Heavy_daisiSPI.cpp ****   HvMessage *m = nullptr;
 133:source/Heavy_daisiSPI.cpp ****   m = HV_MESSAGE_ON_STACK(1);
 134:source/Heavy_daisiSPI.cpp ****   msg_init(m, 1, msg_getTimestamp(n));
 135:source/Heavy_daisiSPI.cpp ****   msg_setFloat(m, 0, 2.0f);
 136:source/Heavy_daisiSPI.cpp ****   cBinop_onMessage(_c, &Context(_c)->cBinop_BDSEPqyt, HV_BINOP_POW, 0, m, &cBinop_BDSEPqyt_sendMess
 137:source/Heavy_daisiSPI.cpp **** }
 138:source/Heavy_daisiSPI.cpp **** 
 139:source/Heavy_daisiSPI.cpp **** void Heavy_daisiSPI::cBinop_PbjUu1XL_sendMessage(HeavyContextInterface *_c, int letIn, const HvMess
 692              		.loc 3 139 108 is_stmt 1 view -0
 693              		.cfi_startproc
 694              		@ args = 0, pretend = 0, frame = 0
 695              		@ frame_needed = 0, uses_anonymous_args = 0
 140:source/Heavy_daisiSPI.cpp ****   cBinop_k_onMessage(_c, NULL, HV_BINOP_SUBTRACT, 69.0f, 0, m, &cBinop_JTMczcYU_sendMessage);
 696              		.loc 3 140 3 view .LVU120
 139:source/Heavy_daisiSPI.cpp ****   cBinop_k_onMessage(_c, NULL, HV_BINOP_SUBTRACT, 69.0f, 0, m, &cBinop_JTMczcYU_sendMessage);
 697              		.loc 3 139 108 is_stmt 0 view .LVU121
 698 0000 10B5     		push	{r4, lr}
 699              		.cfi_def_cfa_offset 8
 700              		.cfi_offset 4, -8
 701              		.cfi_offset 14, -4
 702 0002 1146     		mov	r1, r2
 703              	.LVL46:
 139:source/Heavy_daisiSPI.cpp ****   cBinop_k_onMessage(_c, NULL, HV_BINOP_SUBTRACT, 69.0f, 0, m, &cBinop_JTMczcYU_sendMessage);
 704              		.loc 3 139 108 view .LVU122
 705 0004 82B0     		sub	sp, sp, #8
 706              		.cfi_def_cfa_offset 16
 707              		.loc 3 140 21 view .LVU123
 708 0006 0023     		movs	r3, #0
 709 0008 054C     		ldr	r4, .L46
 710 000a 9FED060A 		vldr.32	s0, .L46+4
 711 000e 0122     		movs	r2, #1
 712              	.LVL47:
 713              		.loc 3 140 21 view .LVU124
 714 0010 CDE90014 		strd	r1, r4, [sp]
 715 0014 1946     		mov	r1, r3
 716              	.LVL48:
 717              		.loc 3 140 21 view .LVU125
 718 0016 FFF7FEFF 		bl	cBinop_k_onMessage
 719              	.LVL49:
 141:source/Heavy_daisiSPI.cpp **** }
 720              		.loc 3 141 1 view .LVU126
 721 001a 02B0     		add	sp, sp, #8
 722              		.cfi_def_cfa_offset 8
 723              		@ sp needed
 724 001c 10BD     		pop	{r4, pc}
 725              	.L47:
 726 001e 00BF     		.align	2
 727              	.L46:
 728 0020 00000000 		.word	_ZN14Heavy_daisiSPI27cBinop_JTMczcYU_sendMessageEP21HeavyContextInterfaceiPK9HvMessage
 729 0024 00008A42 		.word	1116340224
 730              		.cfi_endproc
 731              	.LFE1009:
 733              		.section	.text._ZN14Heavy_daisiSPI27cBinop_sEn9bNjH_sendMessageEP21HeavyContextInterfaceiPK9HvMess
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s 			page 18


 734              		.align	1
 735              		.p2align 2,,3
 736              		.global	_ZN14Heavy_daisiSPI27cBinop_sEn9bNjH_sendMessageEP21HeavyContextInterfaceiPK9HvMessage
 737              		.syntax unified
 738              		.thumb
 739              		.thumb_func
 741              	_ZN14Heavy_daisiSPI27cBinop_sEn9bNjH_sendMessageEP21HeavyContextInterfaceiPK9HvMessage:
 742              	.LVL50:
 743              	.LFB1010:
 142:source/Heavy_daisiSPI.cpp **** 
 143:source/Heavy_daisiSPI.cpp **** void Heavy_daisiSPI::cBinop_sEn9bNjH_sendMessage(HeavyContextInterface *_c, int letIn, const HvMess
 744              		.loc 3 143 108 is_stmt 1 view -0
 745              		.cfi_startproc
 746              		@ args = 0, pretend = 0, frame = 0
 747              		@ frame_needed = 0, uses_anonymous_args = 0
 144:source/Heavy_daisiSPI.cpp ****   cBinop_k_onMessage(_c, NULL, HV_BINOP_ADD, 60.0f, 0, m, &cBinop_PbjUu1XL_sendMessage);
 748              		.loc 3 144 3 view .LVU128
 143:source/Heavy_daisiSPI.cpp ****   cBinop_k_onMessage(_c, NULL, HV_BINOP_ADD, 60.0f, 0, m, &cBinop_PbjUu1XL_sendMessage);
 749              		.loc 3 143 108 is_stmt 0 view .LVU129
 750 0000 10B5     		push	{r4, lr}
 751              		.cfi_def_cfa_offset 8
 752              		.cfi_offset 4, -8
 753              		.cfi_offset 14, -4
 754              		.loc 3 144 21 view .LVU130
 755 0002 0023     		movs	r3, #0
 143:source/Heavy_daisiSPI.cpp ****   cBinop_k_onMessage(_c, NULL, HV_BINOP_ADD, 60.0f, 0, m, &cBinop_PbjUu1XL_sendMessage);
 756              		.loc 3 143 108 view .LVU131
 757 0004 82B0     		sub	sp, sp, #8
 758              		.cfi_def_cfa_offset 16
 143:source/Heavy_daisiSPI.cpp ****   cBinop_k_onMessage(_c, NULL, HV_BINOP_ADD, 60.0f, 0, m, &cBinop_PbjUu1XL_sendMessage);
 759              		.loc 3 143 108 view .LVU132
 760 0006 1446     		mov	r4, r2
 761              		.loc 3 144 21 view .LVU133
 762 0008 0549     		ldr	r1, .L50
 763              	.LVL51:
 764              		.loc 3 144 21 view .LVU134
 765 000a 9FED060A 		vldr.32	s0, .L50+4
 766 000e 1A46     		mov	r2, r3
 767              	.LVL52:
 768              		.loc 3 144 21 view .LVU135
 769 0010 CDE90041 		strd	r4, r1, [sp]
 770 0014 1946     		mov	r1, r3
 771 0016 FFF7FEFF 		bl	cBinop_k_onMessage
 772              	.LVL53:
 145:source/Heavy_daisiSPI.cpp **** }
 773              		.loc 3 145 1 view .LVU136
 774 001a 02B0     		add	sp, sp, #8
 775              		.cfi_def_cfa_offset 8
 776              		@ sp needed
 777 001c 10BD     		pop	{r4, pc}
 778              	.LVL54:
 779              	.L51:
 780              		.loc 3 145 1 view .LVU137
 781 001e 00BF     		.align	2
 782              	.L50:
 783 0020 00000000 		.word	_ZN14Heavy_daisiSPI27cBinop_PbjUu1XL_sendMessageEP21HeavyContextInterfaceiPK9HvMessage
 784 0024 00007042 		.word	1114636288
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s 			page 19


 785              		.cfi_endproc
 786              	.LFE1010:
 788              		.section	.text._ZN14Heavy_daisiSPI27cBinop_FIChmvMr_sendMessageEP21HeavyContextInterfaceiPK9HvMess
 789              		.align	1
 790              		.p2align 2,,3
 791              		.global	_ZN14Heavy_daisiSPI27cBinop_FIChmvMr_sendMessageEP21HeavyContextInterfaceiPK9HvMessage
 792              		.syntax unified
 793              		.thumb
 794              		.thumb_func
 796              	_ZN14Heavy_daisiSPI27cBinop_FIChmvMr_sendMessageEP21HeavyContextInterfaceiPK9HvMessage:
 797              	.LVL55:
 798              	.LFB1004:
 114:source/Heavy_daisiSPI.cpp ****   sPhasor_k_onMessage(_c, &Context(_c)->sPhasor_RBvhg4gc, 0, m);
 799              		.loc 3 114 108 is_stmt 1 view -0
 800              		.cfi_startproc
 801              		@ args = 0, pretend = 0, frame = 0
 802              		@ frame_needed = 0, uses_anonymous_args = 0
 803              		@ link register save eliminated.
 115:source/Heavy_daisiSPI.cpp **** }
 804              		.loc 3 115 3 view .LVU139
 114:source/Heavy_daisiSPI.cpp ****   sPhasor_k_onMessage(_c, &Context(_c)->sPhasor_RBvhg4gc, 0, m);
 805              		.loc 3 114 108 is_stmt 0 view .LVU140
 806 0000 1346     		mov	r3, r2
 115:source/Heavy_daisiSPI.cpp **** }
 807              		.loc 3 115 22 view .LVU141
 808 0002 00F18801 		add	r1, r0, #136
 809              	.LVL56:
 115:source/Heavy_daisiSPI.cpp **** }
 810              		.loc 3 115 22 view .LVU142
 811 0006 0022     		movs	r2, #0
 812              	.LVL57:
 115:source/Heavy_daisiSPI.cpp **** }
 813              		.loc 3 115 22 view .LVU143
 814 0008 FFF7FEBF 		b	sPhasor_k_onMessage
 815              	.LVL58:
 115:source/Heavy_daisiSPI.cpp **** }
 816              		.loc 3 115 22 view .LVU144
 817              		.cfi_endproc
 818              	.LFE1004:
 820              		.section	.text._ZN14Heavy_daisiSPI13processInlineEPfS0_i,"ax",%progbits
 821              		.align	1
 822              		.p2align 2,,3
 823              		.global	_ZN14Heavy_daisiSPI13processInlineEPfS0_i
 824              		.syntax unified
 825              		.thumb
 826              		.thumb_func
 828              	_ZN14Heavy_daisiSPI13processInlineEPfS0_i:
 829              	.LVL59:
 830              	.LFB1012:
 146:source/Heavy_daisiSPI.cpp **** 
 147:source/Heavy_daisiSPI.cpp **** 
 148:source/Heavy_daisiSPI.cpp **** 
 149:source/Heavy_daisiSPI.cpp **** 
 150:source/Heavy_daisiSPI.cpp **** /*
 151:source/Heavy_daisiSPI.cpp ****  * Context Process Implementation
 152:source/Heavy_daisiSPI.cpp ****  */
 153:source/Heavy_daisiSPI.cpp **** 
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s 			page 20


 154:source/Heavy_daisiSPI.cpp **** int Heavy_daisiSPI::process(float **inputBuffers, float **outputBuffers, int n) {
 155:source/Heavy_daisiSPI.cpp ****   while (hLp_hasData(&inQueue)) {
 156:source/Heavy_daisiSPI.cpp ****     hv_uint32_t numBytes = 0;
 157:source/Heavy_daisiSPI.cpp ****     ReceiverMessagePair *p = reinterpret_cast<ReceiverMessagePair *>(hLp_getReadBuffer(&inQueue, &n
 158:source/Heavy_daisiSPI.cpp ****     hv_assert(numBytes >= sizeof(ReceiverMessagePair));
 159:source/Heavy_daisiSPI.cpp ****     scheduleMessageForReceiver(p->receiverHash, &p->msg);
 160:source/Heavy_daisiSPI.cpp ****     hLp_consume(&inQueue);
 161:source/Heavy_daisiSPI.cpp ****   }
 162:source/Heavy_daisiSPI.cpp ****   const int n4 = n & ~HV_N_SIMD_MASK; // ensure that the block size is a multiple of HV_N_SIMD
 163:source/Heavy_daisiSPI.cpp **** 
 164:source/Heavy_daisiSPI.cpp ****   // temporary signal vars
 165:source/Heavy_daisiSPI.cpp ****   hv_bufferf_t Bf0, Bf1, Bf2, Bf3, Bf4;
 166:source/Heavy_daisiSPI.cpp **** 
 167:source/Heavy_daisiSPI.cpp ****   // input and output vars
 168:source/Heavy_daisiSPI.cpp ****   hv_bufferf_t O0, O1;
 169:source/Heavy_daisiSPI.cpp **** 
 170:source/Heavy_daisiSPI.cpp ****   // declare and init the zero buffer
 171:source/Heavy_daisiSPI.cpp ****   hv_bufferf_t ZERO; __hv_zero_f(VOf(ZERO));
 172:source/Heavy_daisiSPI.cpp **** 
 173:source/Heavy_daisiSPI.cpp ****   hv_uint32_t nextBlock = blockStartTimestamp;
 174:source/Heavy_daisiSPI.cpp ****   for (int n = 0; n < n4; n += HV_N_SIMD) {
 175:source/Heavy_daisiSPI.cpp **** 
 176:source/Heavy_daisiSPI.cpp ****     // process all of the messages for this block
 177:source/Heavy_daisiSPI.cpp ****     nextBlock += HV_N_SIMD;
 178:source/Heavy_daisiSPI.cpp ****     while (mq_hasMessageBefore(&mq, nextBlock)) {
 179:source/Heavy_daisiSPI.cpp ****       MessageNode *const node = mq_peek(&mq);
 180:source/Heavy_daisiSPI.cpp ****       node->sendMessage(this, node->let, node->m);
 181:source/Heavy_daisiSPI.cpp ****       mq_pop(&mq);
 182:source/Heavy_daisiSPI.cpp ****     }
 183:source/Heavy_daisiSPI.cpp **** 
 184:source/Heavy_daisiSPI.cpp ****     
 185:source/Heavy_daisiSPI.cpp **** 
 186:source/Heavy_daisiSPI.cpp ****     // zero output buffers
 187:source/Heavy_daisiSPI.cpp ****     __hv_zero_f(VOf(O0));
 188:source/Heavy_daisiSPI.cpp ****     __hv_zero_f(VOf(O1));
 189:source/Heavy_daisiSPI.cpp **** 
 190:source/Heavy_daisiSPI.cpp ****     // process all signal functions
 191:source/Heavy_daisiSPI.cpp ****     __hv_phasor_k_f(&sPhasor_RBvhg4gc, VOf(Bf0));
 192:source/Heavy_daisiSPI.cpp ****     __hv_var_k_f(VOf(Bf1), 0.5f, 0.5f, 0.5f, 0.5f, 0.5f, 0.5f, 0.5f, 0.5f);
 193:source/Heavy_daisiSPI.cpp ****     __hv_sub_f(VIf(Bf0), VIf(Bf1), VOf(Bf1));
 194:source/Heavy_daisiSPI.cpp ****     __hv_abs_f(VIf(Bf1), VOf(Bf1));
 195:source/Heavy_daisiSPI.cpp ****     __hv_var_k_f(VOf(Bf0), 0.25f, 0.25f, 0.25f, 0.25f, 0.25f, 0.25f, 0.25f, 0.25f);
 196:source/Heavy_daisiSPI.cpp ****     __hv_sub_f(VIf(Bf1), VIf(Bf0), VOf(Bf0));
 197:source/Heavy_daisiSPI.cpp ****     __hv_var_k_f(VOf(Bf1), 6.283185307179586f, 6.283185307179586f, 6.283185307179586f, 6.2831853071
 198:source/Heavy_daisiSPI.cpp ****     __hv_mul_f(VIf(Bf0), VIf(Bf1), VOf(Bf1));
 199:source/Heavy_daisiSPI.cpp ****     __hv_mul_f(VIf(Bf1), VIf(Bf1), VOf(Bf0));
 200:source/Heavy_daisiSPI.cpp ****     __hv_mul_f(VIf(Bf1), VIf(Bf0), VOf(Bf2));
 201:source/Heavy_daisiSPI.cpp ****     __hv_mul_f(VIf(Bf2), VIf(Bf0), VOf(Bf0));
 202:source/Heavy_daisiSPI.cpp ****     __hv_var_k_f(VOf(Bf3), 0.007833333333333f, 0.007833333333333f, 0.007833333333333f, 0.0078333333
 203:source/Heavy_daisiSPI.cpp ****     __hv_var_k_f(VOf(Bf4), -0.166666666666667f, -0.166666666666667f, -0.166666666666667f, -0.166666
 204:source/Heavy_daisiSPI.cpp ****     __hv_fma_f(VIf(Bf2), VIf(Bf4), VIf(Bf1), VOf(Bf1));
 205:source/Heavy_daisiSPI.cpp ****     __hv_fma_f(VIf(Bf0), VIf(Bf3), VIf(Bf1), VOf(Bf1));
 206:source/Heavy_daisiSPI.cpp ****     __hv_add_f(VIf(Bf1), VIf(O1), VOf(O1));
 207:source/Heavy_daisiSPI.cpp ****     __hv_add_f(VIf(Bf1), VIf(O0), VOf(O0));
 208:source/Heavy_daisiSPI.cpp **** 
 209:source/Heavy_daisiSPI.cpp ****     // save output vars to output buffer
 210:source/Heavy_daisiSPI.cpp ****     __hv_store_f(outputBuffers[0]+n, VIf(O0));
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s 			page 21


 211:source/Heavy_daisiSPI.cpp ****     __hv_store_f(outputBuffers[1]+n, VIf(O1));
 212:source/Heavy_daisiSPI.cpp ****   }
 213:source/Heavy_daisiSPI.cpp **** 
 214:source/Heavy_daisiSPI.cpp ****   blockStartTimestamp = nextBlock;
 215:source/Heavy_daisiSPI.cpp **** 
 216:source/Heavy_daisiSPI.cpp ****   return n4; // return the number of frames processed
 217:source/Heavy_daisiSPI.cpp **** }
 218:source/Heavy_daisiSPI.cpp **** 
 219:source/Heavy_daisiSPI.cpp **** int Heavy_daisiSPI::processInline(float *inputBuffers, float *outputBuffers, int n4) {
 831              		.loc 3 219 86 is_stmt 1 view -0
 832              		.cfi_startproc
 833              		@ args = 0, pretend = 0, frame = 0
 834              		@ frame_needed = 1, uses_anonymous_args = 0
 220:source/Heavy_daisiSPI.cpp ****   hv_assert(!(n4 & HV_N_SIMD_MASK)); // ensure that n4 is a multiple of HV_N_SIMD
 835              		.loc 3 220 3 view .LVU146
 221:source/Heavy_daisiSPI.cpp **** 
 222:source/Heavy_daisiSPI.cpp ****   // define the heavy input buffer for 0 channel(s)
 223:source/Heavy_daisiSPI.cpp ****   float **const bIn = NULL;
 836              		.loc 3 223 3 view .LVU147
 224:source/Heavy_daisiSPI.cpp **** 
 225:source/Heavy_daisiSPI.cpp ****   // define the heavy output buffer for 2 channel(s)
 226:source/Heavy_daisiSPI.cpp ****   float **const bOut = reinterpret_cast<float **>(hv_alloca(2*sizeof(float *)));
 837              		.loc 3 226 3 view .LVU148
 219:source/Heavy_daisiSPI.cpp ****   hv_assert(!(n4 & HV_N_SIMD_MASK)); // ensure that n4 is a multiple of HV_N_SIMD
 838              		.loc 3 219 86 is_stmt 0 view .LVU149
 839 0000 B0B5     		push	{r4, r5, r7, lr}
 840              		.cfi_def_cfa_offset 16
 841              		.cfi_offset 4, -16
 842              		.cfi_offset 5, -12
 843              		.cfi_offset 7, -8
 844              		.cfi_offset 14, -4
 845 0002 1146     		mov	r1, r2
 846              	.LVL60:
 219:source/Heavy_daisiSPI.cpp ****   hv_assert(!(n4 & HV_N_SIMD_MASK)); // ensure that n4 is a multiple of HV_N_SIMD
 847              		.loc 3 219 86 view .LVU150
 848 0004 00AF     		add	r7, sp, #0
 849              		.cfi_def_cfa_register 7
 850              		.loc 3 226 51 view .LVU151
 851 0006 82B0     		sub	sp, sp, #8
 227:source/Heavy_daisiSPI.cpp ****   bOut[0] = outputBuffers+(0*n4);
 228:source/Heavy_daisiSPI.cpp ****   bOut[1] = outputBuffers+(1*n4);
 229:source/Heavy_daisiSPI.cpp **** 
 230:source/Heavy_daisiSPI.cpp ****   int n = process(bIn, bOut, n4);
 852              		.loc 3 230 32 view .LVU152
 853 0008 0568     		ldr	r5, [r0]
 228:source/Heavy_daisiSPI.cpp **** 
 854              		.loc 3 228 26 view .LVU153
 855 000a 01EB8304 		add	r4, r1, r3, lsl #2
 226:source/Heavy_daisiSPI.cpp ****   bOut[0] = outputBuffers+(0*n4);
 856              		.loc 3 226 51 view .LVU154
 857 000e 6A46     		mov	r2, sp
 858              	.LVL61:
 227:source/Heavy_daisiSPI.cpp ****   bOut[0] = outputBuffers+(0*n4);
 859              		.loc 3 227 3 is_stmt 1 view .LVU155
 860              		.loc 3 230 18 is_stmt 0 view .LVU156
 861 0010 2D6C     		ldr	r5, [r5, #64]
 228:source/Heavy_daisiSPI.cpp **** 
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s 			page 22


 862              		.loc 3 228 11 view .LVU157
 863 0012 C2E90014 		strd	r1, r4, [r2]
 864              		.loc 3 230 3 is_stmt 1 view .LVU158
 865              		.loc 3 230 18 is_stmt 0 view .LVU159
 866 0016 0021     		movs	r1, #0
 867              	.LVL62:
 868              		.loc 3 230 18 view .LVU160
 869 0018 A847     		blx	r5
 870              	.LVL63:
 231:source/Heavy_daisiSPI.cpp ****   return n;
 871              		.loc 3 231 3 is_stmt 1 view .LVU161
 232:source/Heavy_daisiSPI.cpp **** }
 872              		.loc 3 232 1 is_stmt 0 view .LVU162
 873 001a BD46     		mov	sp, r7
 874              		.cfi_def_cfa_register 13
 875              	.LVL64:
 876              		.loc 3 232 1 view .LVU163
 877              		@ sp needed
 878 001c B0BD     		pop	{r4, r5, r7, pc}
 879              		.cfi_endproc
 880              	.LFE1012:
 882 001e 00BF     		.section	.rodata._ZN14Heavy_daisiSPI24processInlineInterleavedEPfS0_i.str1.4,"aMS",%progbits,1
 883              		.align	2
 884              	.LC2:
 885 0000 6E342026 		.ascii	"n4 & ~(1-1)\000"
 885      207E2831 
 885      2D312900 
 886              		.align	2
 887              	.LC3:
 888 000c 76697274 		.ascii	"virtual int Heavy_daisiSPI::processInlineInterleave"
 888      75616C20 
 888      696E7420 
 888      48656176 
 888      795F6461 
 889 003f 6428666C 		.ascii	"d(float*, float*, int)\000"
 889      6F61742A 
 889      2C20666C 
 889      6F61742A 
 889      2C20696E 
 890 0056 0000     		.align	2
 891              	.LC4:
 892 0058 736F7572 		.ascii	"source/Heavy_daisiSPI.cpp\000"
 892      63652F48 
 892      65617679 
 892      5F646169 
 892      73695350 
 893              		.section	.text._ZN14Heavy_daisiSPI24processInlineInterleavedEPfS0_i,"ax",%progbits
 894              		.align	1
 895              		.p2align 2,,3
 896              		.global	_ZN14Heavy_daisiSPI24processInlineInterleavedEPfS0_i
 897              		.syntax unified
 898              		.thumb
 899              		.thumb_func
 901              	_ZN14Heavy_daisiSPI24processInlineInterleavedEPfS0_i:
 902              	.LVL65:
 903              	.LFB1013:
 233:source/Heavy_daisiSPI.cpp **** 
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s 			page 23


 234:source/Heavy_daisiSPI.cpp **** int Heavy_daisiSPI::processInlineInterleaved(float *inputBuffers, float *outputBuffers, int n4) {
 904              		.loc 3 234 97 is_stmt 1 view -0
 905              		.cfi_startproc
 906              		@ args = 0, pretend = 0, frame = 0
 907              		@ frame_needed = 1, uses_anonymous_args = 0
 235:source/Heavy_daisiSPI.cpp ****   hv_assert(n4 & ~HV_N_SIMD_MASK); // ensure that n4 is a multiple of HV_N_SIMD
 908              		.loc 3 235 3 view .LVU165
 234:source/Heavy_daisiSPI.cpp ****   hv_assert(n4 & ~HV_N_SIMD_MASK); // ensure that n4 is a multiple of HV_N_SIMD
 909              		.loc 3 234 97 is_stmt 0 view .LVU166
 910 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 911              		.cfi_def_cfa_offset 32
 912              		.cfi_offset 3, -32
 913              		.cfi_offset 4, -28
 914              		.cfi_offset 5, -24
 915              		.cfi_offset 6, -20
 916              		.cfi_offset 7, -16
 917              		.cfi_offset 8, -12
 918              		.cfi_offset 9, -8
 919              		.cfi_offset 14, -4
 920 0004 00AF     		add	r7, sp, #0
 921              		.cfi_def_cfa_register 7
 922              		.loc 3 235 3 view .LVU167
 923 0006 2BB3     		cbz	r3, .L63
 236:source/Heavy_daisiSPI.cpp **** 
 237:source/Heavy_daisiSPI.cpp ****   // define the heavy input buffer for 0 channel(s), uninterleave
 238:source/Heavy_daisiSPI.cpp ****   float *const bIn = NULL;
 924              		.loc 3 238 3 is_stmt 1 view .LVU168
 925              	.LVL66:
 239:source/Heavy_daisiSPI.cpp **** 
 240:source/Heavy_daisiSPI.cpp ****   // define the heavy output buffer for 2 channel(s)
 241:source/Heavy_daisiSPI.cpp ****   float *const bOut = reinterpret_cast<float *>(hv_alloca(2*n4*sizeof(float)));
 926              		.loc 3 241 3 view .LVU169
 927 0008 1646     		mov	r6, r2
 928              		.loc 3 241 49 is_stmt 0 view .LVU170
 929 000a 6A46     		mov	r2, sp
 930              	.LVL67:
 242:source/Heavy_daisiSPI.cpp **** 
 243:source/Heavy_daisiSPI.cpp ****   int n = processInline(bIn, bOut, n4);
 931              		.loc 3 243 24 view .LVU171
 932 000c 0021     		movs	r1, #0
 933              	.LVL68:
 934              		.loc 3 243 24 view .LVU172
 935 000e 1D46     		mov	r5, r3
 241:source/Heavy_daisiSPI.cpp **** 
 936              		.loc 3 241 49 view .LVU173
 937 0010 A2EBC302 		sub	r2, r2, r3, lsl #3
 938 0014 4FEA8509 		lsl	r9, r5, #2
 939 0018 9546     		mov	sp, r2
 940              		.loc 3 243 38 view .LVU174
 941 001a 0268     		ldr	r2, [r0]
 241:source/Heavy_daisiSPI.cpp **** 
 942              		.loc 3 241 49 view .LVU175
 943 001c E846     		mov	r8, sp
 944              	.LVL69:
 945              		.loc 3 243 3 is_stmt 1 view .LVU176
 946              		.loc 3 243 24 is_stmt 0 view .LVU177
 947 001e 546C     		ldr	r4, [r2, #68]
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s 			page 24


 948 0020 4246     		mov	r2, r8
 949 0022 A047     		blx	r4
 950              	.LVL70:
 951              		.loc 3 243 24 view .LVU178
 952 0024 0023     		movs	r3, #0
 953 0026 08EB8504 		add	r4, r8, r5, lsl #2
 954              	.LVL71:
 244:source/Heavy_daisiSPI.cpp **** 
 245:source/Heavy_daisiSPI.cpp ****   // interleave the heavy output into the output buffer
 246:source/Heavy_daisiSPI.cpp ****   #if HV_SIMD_AVX
 247:source/Heavy_daisiSPI.cpp ****   for (int i = 0, j = 0; j < n4; j += 8, i += 16) {
 248:source/Heavy_daisiSPI.cpp ****     __m256 x = _mm256_load_ps(bOut+j);    // LLLLLLLL
 249:source/Heavy_daisiSPI.cpp ****     __m256 y = _mm256_load_ps(bOut+n4+j); // RRRRRRRR
 250:source/Heavy_daisiSPI.cpp ****     __m256 a = _mm256_unpacklo_ps(x, y);  // LRLRLRLR
 251:source/Heavy_daisiSPI.cpp ****     __m256 b = _mm256_unpackhi_ps(x, y);  // LRLRLRLR
 252:source/Heavy_daisiSPI.cpp ****     _mm256_store_ps(outputBuffers+i, a);
 253:source/Heavy_daisiSPI.cpp ****     _mm256_store_ps(outputBuffers+8+i, b);
 254:source/Heavy_daisiSPI.cpp ****   }
 255:source/Heavy_daisiSPI.cpp ****   #elif HV_SIMD_SSE
 256:source/Heavy_daisiSPI.cpp ****   for (int i = 0, j = 0; j < n4; j += 4, i += 8) {
 257:source/Heavy_daisiSPI.cpp ****     __m128 x = _mm_load_ps(bOut+j);    // LLLL
 258:source/Heavy_daisiSPI.cpp ****     __m128 y = _mm_load_ps(bOut+n4+j); // RRRR
 259:source/Heavy_daisiSPI.cpp ****     __m128 a = _mm_unpacklo_ps(x, y);  // LRLR
 260:source/Heavy_daisiSPI.cpp ****     __m128 b = _mm_unpackhi_ps(x, y);  // LRLR
 261:source/Heavy_daisiSPI.cpp ****     _mm_store_ps(outputBuffers+i, a);
 262:source/Heavy_daisiSPI.cpp ****     _mm_store_ps(outputBuffers+4+i, b);
 263:source/Heavy_daisiSPI.cpp ****   }
 264:source/Heavy_daisiSPI.cpp ****   #elif HV_SIMD_NEON
 265:source/Heavy_daisiSPI.cpp ****   // https://community.arm.com/groups/processors/blog/2012/03/13/coding-for-neon--part-5-rearrangin
 266:source/Heavy_daisiSPI.cpp ****   for (int i = 0, j = 0; j < n4; j += 4, i += 8) {
 267:source/Heavy_daisiSPI.cpp ****     float32x4_t x = vld1q_f32(bOut+j);
 268:source/Heavy_daisiSPI.cpp ****     float32x4_t y = vld1q_f32(bOut+n4+j);
 269:source/Heavy_daisiSPI.cpp ****     float32x4x2_t z = {x, y};
 270:source/Heavy_daisiSPI.cpp ****     vst2q_f32(outputBuffers+i, z); // interleave and store
 271:source/Heavy_daisiSPI.cpp ****   }
 272:source/Heavy_daisiSPI.cpp ****   #else // HV_SIMD_NONE
 273:source/Heavy_daisiSPI.cpp ****   for (int i = 0; i < 2; ++i) {
 955              		.loc 3 273 3 is_stmt 1 view .LVU179
 956              	.LBB73:
 957              		.loc 3 273 21 view .LVU180
 958              		.loc 3 273 12 is_stmt 0 view .LVU181
 959 002a 1A46     		mov	r2, r3
 960              	.LVL72:
 961              	.L59:
 962              	.LBB74:
 274:source/Heavy_daisiSPI.cpp ****     for (int j = 0; j < n4; ++j) {
 963              		.loc 3 274 23 is_stmt 1 view .LVU182
 964 002c 002D     		cmp	r5, #0
 965 002e 09DD     		ble	.L57
 966 0030 08EB8301 		add	r1, r8, r3, lsl #2
 967 0034 06EB820C 		add	ip, r6, r2, lsl #2
 968              	.LVL73:
 969              	.L58:
 275:source/Heavy_daisiSPI.cpp ****       outputBuffers[i+2*j] = bOut[i*n4+j];
 970              		.loc 3 275 7 discriminator 2 view .LVU183
 971              		.loc 3 275 41 is_stmt 0 discriminator 2 view .LVU184
 972 0038 51F804EB 		ldr	lr, [r1], #4	@ float
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s 			page 25


 274:source/Heavy_daisiSPI.cpp ****     for (int j = 0; j < n4; ++j) {
 973              		.loc 3 274 23 discriminator 2 view .LVU185
 974 003c A142     		cmp	r1, r4
 975              		.loc 3 275 28 discriminator 2 view .LVU186
 976 003e 4CF808EB 		str	lr, [ip], #8	@ float
 274:source/Heavy_daisiSPI.cpp ****     for (int j = 0; j < n4; ++j) {
 977              		.loc 3 274 5 is_stmt 1 discriminator 2 view .LVU187
 274:source/Heavy_daisiSPI.cpp ****     for (int j = 0; j < n4; ++j) {
 978              		.loc 3 274 23 discriminator 2 view .LVU188
 979 0042 F9D1     		bne	.L58
 980              	.L57:
 274:source/Heavy_daisiSPI.cpp ****     for (int j = 0; j < n4; ++j) {
 981              		.loc 3 274 23 is_stmt 0 discriminator 2 view .LVU189
 982              	.LBE74:
 273:source/Heavy_daisiSPI.cpp ****     for (int j = 0; j < n4; ++j) {
 983              		.loc 3 273 3 is_stmt 1 view .LVU190
 984              	.LVL74:
 273:source/Heavy_daisiSPI.cpp ****     for (int j = 0; j < n4; ++j) {
 985              		.loc 3 273 21 view .LVU191
 986 0044 2B44     		add	r3, r3, r5
 987 0046 4C44     		add	r4, r4, r9
 988 0048 12B1     		cbz	r2, .L60
 989              	.LBE73:
 276:source/Heavy_daisiSPI.cpp ****     }
 277:source/Heavy_daisiSPI.cpp ****   }
 278:source/Heavy_daisiSPI.cpp ****   #endif
 279:source/Heavy_daisiSPI.cpp **** 
 280:source/Heavy_daisiSPI.cpp ****   return n;
 990              		.loc 3 280 3 view .LVU192
 281:source/Heavy_daisiSPI.cpp **** }
 991              		.loc 3 281 1 is_stmt 0 view .LVU193
 992 004a BD46     		mov	sp, r7
 993              		.cfi_remember_state
 994              		.cfi_def_cfa_register 13
 995              		@ sp needed
 996 004c BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 997              	.LVL75:
 998              	.L60:
 999              		.cfi_restore_state
 1000              	.LBB75:
 1001              		.loc 3 281 1 view .LVU194
 1002 0050 0122     		movs	r2, #1
 1003              	.LVL76:
 1004              		.loc 3 281 1 view .LVU195
 1005 0052 EBE7     		b	.L59
 1006              	.LVL77:
 1007              	.L63:
 1008              		.loc 3 281 1 view .LVU196
 1009              	.LBE75:
 235:source/Heavy_daisiSPI.cpp **** 
 1010              		.loc 3 235 3 discriminator 1 view .LVU197
 1011 0054 024B     		ldr	r3, .L64
 1012              	.LVL78:
 235:source/Heavy_daisiSPI.cpp **** 
 1013              		.loc 3 235 3 discriminator 1 view .LVU198
 1014 0056 EB21     		movs	r1, #235
 1015              	.LVL79:
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s 			page 26


 235:source/Heavy_daisiSPI.cpp **** 
 1016              		.loc 3 235 3 discriminator 1 view .LVU199
 1017 0058 024A     		ldr	r2, .L64+4
 1018              	.LVL80:
 235:source/Heavy_daisiSPI.cpp **** 
 1019              		.loc 3 235 3 discriminator 1 view .LVU200
 1020 005a 0348     		ldr	r0, .L64+8
 1021              	.LVL81:
 235:source/Heavy_daisiSPI.cpp **** 
 1022              		.loc 3 235 3 discriminator 1 view .LVU201
 1023 005c FFF7FEFF 		bl	__assert_func
 1024              	.LVL82:
 1025              	.L65:
 1026              		.align	2
 1027              	.L64:
 1028 0060 00000000 		.word	.LC2
 1029 0064 0C000000 		.word	.LC3
 1030 0068 58000000 		.word	.LC4
 1031              		.cfi_endproc
 1032              	.LFE1013:
 1034              		.section	.text._ZN12HeavyContext21millisecondsToSamplesEf,"axG",%progbits,_ZN12HeavyContext21milli
 1035              		.align	1
 1036              		.p2align 2,,3
 1037              		.weak	_ZN12HeavyContext21millisecondsToSamplesEf
 1038              		.syntax unified
 1039              		.thumb
 1040              		.thumb_func
 1042              	_ZN12HeavyContext21millisecondsToSamplesEf:
 1043              	.LVL83:
 1044              	.LFB969:
  39:source/HeavyContext.hpp **** 
 1045              		.loc 1 39 15 is_stmt 1 view -0
 1046              		.cfi_startproc
 1047              		@ args = 0, pretend = 0, frame = 0
 1048              		@ frame_needed = 0, uses_anonymous_args = 0
 1049              		@ link register save eliminated.
  39:source/HeavyContext.hpp **** 
 1050              		.loc 1 39 58 view .LVU203
  39:source/HeavyContext.hpp **** 
 1051              		.loc 1 39 80 is_stmt 0 view .LVU204
 1052 0000 DFED0B7A 		vldr.32	s15, .L67+8
  39:source/HeavyContext.hpp **** 
 1053              		.loc 1 39 97 view .LVU205
 1054 0004 90ED025B 		vldr.64	d5, [r0, #8]
  39:source/HeavyContext.hpp **** 
 1055              		.loc 1 39 80 view .LVU206
 1056 0008 87FE800A 		vmaxnm.f32	s0, s15, s0
 1057              	.LVL84:
  39:source/HeavyContext.hpp **** 
 1058              		.loc 1 39 80 view .LVU207
 1059 000c B7EEC00A 		vcvt.f64.f32	d0, s0
  39:source/HeavyContext.hpp **** 
 1060              		.loc 1 39 108 view .LVU208
 1061 0010 9FED056B 		vldr.64	d6, .L67
  39:source/HeavyContext.hpp **** 
 1062              		.loc 1 39 97 view .LVU209
 1063 0014 20EE050B 		vmul.f64	d0, d0, d5
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s 			page 27


  39:source/HeavyContext.hpp **** 
 1064              		.loc 1 39 108 view .LVU210
 1065 0018 80EE067B 		vdiv.f64	d7, d0, d6
  39:source/HeavyContext.hpp **** 
 1066              		.loc 1 39 118 view .LVU211
 1067 001c FCEEC77B 		vcvt.u32.f64	s15, d7
 1068 0020 17EE900A 		vmov	r0, s15	@ int
 1069              	.LVL85:
  39:source/HeavyContext.hpp **** 
 1070              		.loc 1 39 118 view .LVU212
 1071 0024 7047     		bx	lr
 1072              	.L68:
 1073 0026 00BF     		.align	3
 1074              	.L67:
 1075 0028 00000000 		.word	0
 1076 002c 00408F40 		.word	1083129856
 1077 0030 00000000 		.word	0
 1078              		.cfi_endproc
 1079              	.LFE969:
 1081              		.section	.rodata._ZN14Heavy_daisiSPI7processEPPfS1_i.str1.4,"aMS",%progbits,1
 1082              		.align	2
 1083              	.LC5:
 1084 0000 6E756D42 		.ascii	"numBytes >= sizeof(ReceiverMessagePair)\000"
 1084      79746573 
 1084      203E3D20 
 1084      73697A65 
 1084      6F662852 
 1085              		.align	2
 1086              	.LC6:
 1087 0028 76697274 		.ascii	"virtual int Heavy_daisiSPI::process(float**, float*"
 1087      75616C20 
 1087      696E7420 
 1087      48656176 
 1087      795F6461 
 1088 005b 2A2C2069 		.ascii	"*, int)\000"
 1088      6E742900 
 1089              		.section	.text._ZN14Heavy_daisiSPI7processEPPfS1_i,"ax",%progbits
 1090              		.align	1
 1091              		.p2align 2,,3
 1092              		.global	_ZN14Heavy_daisiSPI7processEPPfS1_i
 1093              		.syntax unified
 1094              		.thumb
 1095              		.thumb_func
 1097              	_ZN14Heavy_daisiSPI7processEPPfS1_i:
 1098              	.LVL86:
 1099              	.LFB1011:
 154:source/Heavy_daisiSPI.cpp ****   while (hLp_hasData(&inQueue)) {
 1100              		.loc 3 154 81 is_stmt 1 view -0
 1101              		.cfi_startproc
 1102              		@ args = 0, pretend = 0, frame = 8
 1103              		@ frame_needed = 0, uses_anonymous_args = 0
 154:source/Heavy_daisiSPI.cpp ****   while (hLp_hasData(&inQueue)) {
 1104              		.loc 3 154 81 is_stmt 0 view .LVU214
 1105 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 1106              		.cfi_def_cfa_offset 32
 1107              		.cfi_offset 4, -32
 1108              		.cfi_offset 5, -28
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s 			page 28


 1109              		.cfi_offset 6, -24
 1110              		.cfi_offset 7, -20
 1111              		.cfi_offset 8, -16
 1112              		.cfi_offset 9, -12
 1113              		.cfi_offset 10, -8
 1114              		.cfi_offset 14, -4
 1115 0004 0546     		mov	r5, r0
 1116 0006 82B0     		sub	sp, sp, #8
 1117              		.cfi_def_cfa_offset 40
 154:source/Heavy_daisiSPI.cpp ****   while (hLp_hasData(&inQueue)) {
 1118              		.loc 3 154 81 view .LVU215
 1119 0008 1646     		mov	r6, r2
 1120 000a 9A46     		mov	r10, r3
 155:source/Heavy_daisiSPI.cpp ****     hv_uint32_t numBytes = 0;
 1121              		.loc 3 155 21 view .LVU216
 1122 000c 00F15C08 		add	r8, r0, #92
 1123 0010 02E0     		b	.L73
 1124              	.LVL87:
 1125              	.L72:
 1126              	.LBB116:
 160:source/Heavy_daisiSPI.cpp ****   }
 1127              		.loc 3 160 5 is_stmt 1 discriminator 1 view .LVU217
 160:source/Heavy_daisiSPI.cpp ****   }
 1128              		.loc 3 160 16 is_stmt 0 discriminator 1 view .LVU218
 1129 0012 4046     		mov	r0, r8
 1130 0014 FFF7FEFF 		bl	hLp_consume
 1131              	.LVL88:
 1132              	.L73:
 160:source/Heavy_daisiSPI.cpp ****   }
 1133              		.loc 3 160 16 discriminator 1 view .LVU219
 1134              	.LBE116:
 155:source/Heavy_daisiSPI.cpp ****     hv_uint32_t numBytes = 0;
 1135              		.loc 3 155 3 is_stmt 1 view .LVU220
 155:source/Heavy_daisiSPI.cpp ****     hv_uint32_t numBytes = 0;
 1136              		.loc 3 155 21 view .LVU221
 1137 0018 4046     		mov	r0, r8
 1138 001a FFF7FEFF 		bl	hLp_hasData
 1139              	.LVL89:
 1140 001e 0446     		mov	r4, r0
 1141 0020 A0B1     		cbz	r0, .L70
 1142              	.LBB117:
 156:source/Heavy_daisiSPI.cpp ****     ReceiverMessagePair *p = reinterpret_cast<ReceiverMessagePair *>(hLp_getReadBuffer(&inQueue, &n
 1143              		.loc 3 156 5 view .LVU222
 156:source/Heavy_daisiSPI.cpp ****     ReceiverMessagePair *p = reinterpret_cast<ReceiverMessagePair *>(hLp_getReadBuffer(&inQueue, &n
 1144              		.loc 3 156 17 is_stmt 0 view .LVU223
 1145 0022 0023     		movs	r3, #0
 157:source/Heavy_daisiSPI.cpp ****     hv_assert(numBytes >= sizeof(ReceiverMessagePair));
 1146              		.loc 3 157 87 view .LVU224
 1147 0024 01A9     		add	r1, sp, #4
 1148 0026 4046     		mov	r0, r8
 156:source/Heavy_daisiSPI.cpp ****     ReceiverMessagePair *p = reinterpret_cast<ReceiverMessagePair *>(hLp_getReadBuffer(&inQueue, &n
 1149              		.loc 3 156 17 view .LVU225
 1150 0028 0193     		str	r3, [sp, #4]
 157:source/Heavy_daisiSPI.cpp ****     hv_assert(numBytes >= sizeof(ReceiverMessagePair));
 1151              		.loc 3 157 5 is_stmt 1 view .LVU226
 157:source/Heavy_daisiSPI.cpp ****     hv_assert(numBytes >= sizeof(ReceiverMessagePair));
 1152              		.loc 3 157 87 is_stmt 0 view .LVU227
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s 			page 29


 1153 002a FFF7FEFF 		bl	hLp_getReadBuffer
 1154              	.LVL90:
 158:source/Heavy_daisiSPI.cpp ****     scheduleMessageForReceiver(p->receiverHash, &p->msg);
 1155              		.loc 3 158 5 view .LVU228
 1156 002e 019B     		ldr	r3, [sp, #4]
 1157              	.LVL91:
 158:source/Heavy_daisiSPI.cpp ****     scheduleMessageForReceiver(p->receiverHash, &p->msg);
 1158              		.loc 3 158 5 is_stmt 1 view .LVU229
 1159 0030 132B     		cmp	r3, #19
 1160 0032 6ED9     		bls	.L82
 159:source/Heavy_daisiSPI.cpp ****     hLp_consume(&inQueue);
 1161              		.loc 3 159 5 discriminator 1 view .LVU230
 159:source/Heavy_daisiSPI.cpp ****     hLp_consume(&inQueue);
 1162              		.loc 3 159 56 is_stmt 0 discriminator 1 view .LVU231
 1163 0034 2B68     		ldr	r3, [r5]
 1164 0036 3A4A     		ldr	r2, .L83
 1165 0038 D3F89030 		ldr	r3, [r3, #144]
 1166 003c 9342     		cmp	r3, r2
 1167 003e E8D0     		beq	.L72
 159:source/Heavy_daisiSPI.cpp ****     hLp_consume(&inQueue);
 1168              		.loc 3 159 31 discriminator 1 view .LVU232
 1169 0040 0246     		mov	r2, r0
 1170 0042 2846     		mov	r0, r5
 1171              	.LVL92:
 159:source/Heavy_daisiSPI.cpp ****     hLp_consume(&inQueue);
 1172              		.loc 3 159 31 discriminator 1 view .LVU233
 1173 0044 52F8041B 		ldr	r1, [r2], #4
 1174              	.LVL93:
 159:source/Heavy_daisiSPI.cpp ****     hLp_consume(&inQueue);
 1175              		.loc 3 159 31 discriminator 1 view .LVU234
 1176 0048 9847     		blx	r3
 1177              	.LVL94:
 159:source/Heavy_daisiSPI.cpp ****     hLp_consume(&inQueue);
 1178              		.loc 3 159 31 discriminator 1 view .LVU235
 1179 004a E2E7     		b	.L72
 1180              	.L70:
 159:source/Heavy_daisiSPI.cpp ****     hLp_consume(&inQueue);
 1181              		.loc 3 159 31 discriminator 1 view .LVU236
 1182              	.LBE117:
 162:source/Heavy_daisiSPI.cpp **** 
 1183              		.loc 3 162 3 is_stmt 1 view .LVU237
 1184              	.LVL95:
 165:source/Heavy_daisiSPI.cpp **** 
 1185              		.loc 3 165 3 view .LVU238
 168:source/Heavy_daisiSPI.cpp **** 
 1186              		.loc 3 168 3 view .LVU239
 171:source/Heavy_daisiSPI.cpp **** 
 1187              		.loc 3 171 3 view .LVU240
 171:source/Heavy_daisiSPI.cpp **** 
 1188              		.loc 3 171 22 view .LVU241
 1189              		.file 4 "source/HvMath.h"
   1:source/HvMath.h **** /**
   2:source/HvMath.h ****  * Copyright (c) 2014-2018 Enzien Audio Ltd.
   3:source/HvMath.h ****  *
   4:source/HvMath.h ****  * Permission to use, copy, modify, and/or distribute this software for any
   5:source/HvMath.h ****  * purpose with or without fee is hereby granted, provided that the above
   6:source/HvMath.h ****  * copyright notice and this permission notice appear in all copies.
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s 			page 30


   7:source/HvMath.h ****  *
   8:source/HvMath.h ****  * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
   9:source/HvMath.h ****  * REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
  10:source/HvMath.h ****  * AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
  11:source/HvMath.h ****  * INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
  12:source/HvMath.h ****  * LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
  13:source/HvMath.h ****  * OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
  14:source/HvMath.h ****  * PERFORMANCE OF THIS SOFTWARE.
  15:source/HvMath.h ****  */
  16:source/HvMath.h **** 
  17:source/HvMath.h **** #ifndef _HEAVY_MATH_H_
  18:source/HvMath.h **** #define _HEAVY_MATH_H_
  19:source/HvMath.h **** 
  20:source/HvMath.h **** #include "HvUtils.h"
  21:source/HvMath.h **** 
  22:source/HvMath.h **** // https://software.intel.com/sites/landingpage/IntrinsicsGuide/
  23:source/HvMath.h **** // https://gcc.gnu.org/onlinedocs/gcc-4.8.1/gcc/ARM-NEON-Intrinsics.html
  24:source/HvMath.h **** // http://codesuppository.blogspot.co.uk/2015/02/sse2neonh-porting-guide-and-header-file.html
  25:source/HvMath.h **** 
  26:source/HvMath.h **** static inline void __hv_zero_f(hv_bOutf_t bOut) {
  27:source/HvMath.h **** #if HV_SIMD_AVX
  28:source/HvMath.h ****   *bOut = _mm256_setzero_ps();
  29:source/HvMath.h **** #elif HV_SIMD_SSE
  30:source/HvMath.h ****   *bOut = _mm_setzero_ps();
  31:source/HvMath.h **** #elif HV_SIMD_NEON
  32:source/HvMath.h ****   *bOut = vdupq_n_f32(0.0f);
  33:source/HvMath.h **** #else // HV_SIMD_NONE
  34:source/HvMath.h ****   *bOut = 0.0f;
 1190              		.loc 4 34 3 view .LVU242
 173:source/Heavy_daisiSPI.cpp ****   for (int n = 0; n < n4; n += HV_N_SIMD) {
 1191              		.loc 3 173 3 view .LVU243
 1192              	.LBB118:
 174:source/Heavy_daisiSPI.cpp **** 
 1193              		.loc 3 174 21 is_stmt 0 view .LVU244
 1194 004c BAF1000F 		cmp	r10, #0
 1195              	.LBE118:
 173:source/Heavy_daisiSPI.cpp ****   for (int n = 0; n < n4; n += HV_N_SIMD) {
 1196              		.loc 3 173 15 view .LVU245
 1197 0050 D5F81080 		ldr	r8, [r5, #16]
 1198              	.LVL96:
 174:source/Heavy_daisiSPI.cpp **** 
 1199              		.loc 3 174 3 is_stmt 1 view .LVU246
 1200              	.LBB216:
 174:source/Heavy_daisiSPI.cpp **** 
 1201              		.loc 3 174 21 view .LVU247
 1202 0054 56DD     		ble	.L78
 1203 0056 0AEB0809 		add	r9, r10, r8
 1204 005a A869     		ldr	r0, [r5, #24]
 1205              	.L76:
 1206              	.LBB119:
 177:source/Heavy_daisiSPI.cpp ****     while (mq_hasMessageBefore(&mq, nextBlock)) {
 1207              		.loc 3 177 5 view .LVU248
 177:source/Heavy_daisiSPI.cpp ****     while (mq_hasMessageBefore(&mq, nextBlock)) {
 1208              		.loc 3 177 15 is_stmt 0 view .LVU249
 1209 005c 08F10108 		add	r8, r8, #1
 1210              	.LVL97:
 178:source/Heavy_daisiSPI.cpp ****       MessageNode *const node = mq_peek(&mq);
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s 			page 31


 1211              		.loc 3 178 5 is_stmt 1 view .LVU250
 178:source/Heavy_daisiSPI.cpp ****       MessageNode *const node = mq_peek(&mq);
 1212              		.loc 3 178 31 view .LVU251
 1213              	.LBB120:
 1214              	.LBI120:
 1215              		.file 5 "source/HvMessageQueue.h"
   1:source/HvMessageQueue.h **** /**
   2:source/HvMessageQueue.h ****  * Copyright (c) 2014-2018 Enzien Audio Ltd.
   3:source/HvMessageQueue.h ****  *
   4:source/HvMessageQueue.h ****  * Permission to use, copy, modify, and/or distribute this software for any
   5:source/HvMessageQueue.h ****  * purpose with or without fee is hereby granted, provided that the above
   6:source/HvMessageQueue.h ****  * copyright notice and this permission notice appear in all copies.
   7:source/HvMessageQueue.h ****  *
   8:source/HvMessageQueue.h ****  * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
   9:source/HvMessageQueue.h ****  * REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
  10:source/HvMessageQueue.h ****  * AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
  11:source/HvMessageQueue.h ****  * INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
  12:source/HvMessageQueue.h ****  * LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
  13:source/HvMessageQueue.h ****  * OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
  14:source/HvMessageQueue.h ****  * PERFORMANCE OF THIS SOFTWARE.
  15:source/HvMessageQueue.h ****  */
  16:source/HvMessageQueue.h **** 
  17:source/HvMessageQueue.h **** #ifndef _MESSAGE_QUEUE_H_
  18:source/HvMessageQueue.h **** #define _MESSAGE_QUEUE_H_
  19:source/HvMessageQueue.h **** 
  20:source/HvMessageQueue.h **** #include "HvMessage.h"
  21:source/HvMessageQueue.h **** #include "HvMessagePool.h"
  22:source/HvMessageQueue.h **** 
  23:source/HvMessageQueue.h **** #ifdef __cplusplus
  24:source/HvMessageQueue.h **** extern "C" {
  25:source/HvMessageQueue.h **** #endif
  26:source/HvMessageQueue.h **** 
  27:source/HvMessageQueue.h **** #ifdef __cplusplus
  28:source/HvMessageQueue.h **** class HeavyContextInterface;
  29:source/HvMessageQueue.h **** #else
  30:source/HvMessageQueue.h **** typedef struct HeavyContextInterface HeavyContextInterface;
  31:source/HvMessageQueue.h **** #endif
  32:source/HvMessageQueue.h **** 
  33:source/HvMessageQueue.h **** typedef struct MessageNode {
  34:source/HvMessageQueue.h ****   struct MessageNode *prev; // doubly linked list
  35:source/HvMessageQueue.h ****   struct MessageNode *next;
  36:source/HvMessageQueue.h ****   HvMessage *m;
  37:source/HvMessageQueue.h ****   void (*sendMessage)(HeavyContextInterface *, int, const HvMessage *);
  38:source/HvMessageQueue.h ****   int let;
  39:source/HvMessageQueue.h **** } MessageNode;
  40:source/HvMessageQueue.h **** 
  41:source/HvMessageQueue.h **** /** A doubly linked list containing scheduled messages. */
  42:source/HvMessageQueue.h **** typedef struct HvMessageQueue {
  43:source/HvMessageQueue.h ****   MessageNode *head; // the head of the queue
  44:source/HvMessageQueue.h ****   MessageNode *tail; // the tail of the queue
  45:source/HvMessageQueue.h ****   MessageNode *pool; // the head of the reserve pool
  46:source/HvMessageQueue.h ****   HvMessagePool mp;
  47:source/HvMessageQueue.h **** } HvMessageQueue;
  48:source/HvMessageQueue.h **** 
  49:source/HvMessageQueue.h **** hv_size_t mq_initWithPoolSize(HvMessageQueue *q, hv_size_t poolSizeKB);
  50:source/HvMessageQueue.h **** 
  51:source/HvMessageQueue.h **** void mq_free(HvMessageQueue *q);
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s 			page 32


  52:source/HvMessageQueue.h **** 
  53:source/HvMessageQueue.h **** int mq_size(HvMessageQueue *q);
  54:source/HvMessageQueue.h **** 
  55:source/HvMessageQueue.h **** static inline HvMessage *mq_node_getMessage(MessageNode *n) {
  56:source/HvMessageQueue.h ****   return n->m;
  57:source/HvMessageQueue.h **** }
  58:source/HvMessageQueue.h **** 
  59:source/HvMessageQueue.h **** static inline int mq_node_getLet(MessageNode *n) {
  60:source/HvMessageQueue.h ****   return n->let;
  61:source/HvMessageQueue.h **** }
  62:source/HvMessageQueue.h **** 
  63:source/HvMessageQueue.h **** static inline bool mq_hasMessage(HvMessageQueue *q) {
  64:source/HvMessageQueue.h ****   return (q->head != NULL);
  65:source/HvMessageQueue.h **** }
  66:source/HvMessageQueue.h **** 
  67:source/HvMessageQueue.h **** // true if there is a message and it occurs before (<) timestamp
  68:source/HvMessageQueue.h **** static inline bool mq_hasMessageBefore(HvMessageQueue *const q, const hv_uint32_t timestamp) {
 1216              		.loc 5 68 20 view .LVU252
 1217              	.LBB121:
  69:source/HvMessageQueue.h ****   return mq_hasMessage(q) && (msg_getTimestamp(mq_node_getMessage(q->head)) < timestamp);
 1218              		.loc 5 69 3 view .LVU253
 1219              	.LBB122:
 1220              	.LBI122:
  63:source/HvMessageQueue.h ****   return (q->head != NULL);
 1221              		.loc 5 63 20 view .LVU254
 1222              	.LBB123:
  64:source/HvMessageQueue.h **** }
 1223              		.loc 5 64 3 view .LVU255
  64:source/HvMessageQueue.h **** }
 1224              		.loc 5 64 3 is_stmt 0 view .LVU256
 1225              	.LBE123:
 1226              	.LBE122:
 1227              		.loc 5 69 27 view .LVU257
 1228 0060 70B1     		cbz	r0, .L77
 1229              	.LVL98:
 1230              	.L75:
 1231              	.LBB125:
 1232              	.LBI125:
  55:source/HvMessageQueue.h ****   return n->m;
 1233              		.loc 5 55 26 is_stmt 1 view .LVU258
 1234              	.LBB126:
  56:source/HvMessageQueue.h **** }
 1235              		.loc 5 56 3 view .LVU259
  56:source/HvMessageQueue.h **** }
 1236              		.loc 5 56 13 is_stmt 0 view .LVU260
 1237 0062 8268     		ldr	r2, [r0, #8]
 1238              	.LVL99:
  56:source/HvMessageQueue.h **** }
 1239              		.loc 5 56 13 view .LVU261
 1240              	.LBE126:
 1241              	.LBE125:
 1242              	.LBB127:
 1243              	.LBI127:
 1244              		.file 6 "source/HvMessage.h"
   1:source/HvMessage.h **** /**
   2:source/HvMessage.h ****  * Copyright (c) 2014-2018 Enzien Audio Ltd.
   3:source/HvMessage.h ****  *
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s 			page 33


   4:source/HvMessage.h ****  * Permission to use, copy, modify, and/or distribute this software for any
   5:source/HvMessage.h ****  * purpose with or without fee is hereby granted, provided that the above
   6:source/HvMessage.h ****  * copyright notice and this permission notice appear in all copies.
   7:source/HvMessage.h ****  *
   8:source/HvMessage.h ****  * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
   9:source/HvMessage.h ****  * REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
  10:source/HvMessage.h ****  * AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
  11:source/HvMessage.h ****  * INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
  12:source/HvMessage.h ****  * LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
  13:source/HvMessage.h ****  * OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
  14:source/HvMessage.h ****  * PERFORMANCE OF THIS SOFTWARE.
  15:source/HvMessage.h ****  */
  16:source/HvMessage.h **** 
  17:source/HvMessage.h **** #ifndef _HEAVY_MESSAGE_H_
  18:source/HvMessage.h **** #define _HEAVY_MESSAGE_H_
  19:source/HvMessage.h **** 
  20:source/HvMessage.h **** #include "HvUtils.h"
  21:source/HvMessage.h **** 
  22:source/HvMessage.h **** #ifdef __cplusplus
  23:source/HvMessage.h **** extern "C" {
  24:source/HvMessage.h **** #endif
  25:source/HvMessage.h **** 
  26:source/HvMessage.h **** typedef enum ElementType {
  27:source/HvMessage.h ****   HV_MSG_BANG = 0,
  28:source/HvMessage.h ****   HV_MSG_FLOAT = 1,
  29:source/HvMessage.h ****   HV_MSG_SYMBOL = 2,
  30:source/HvMessage.h ****   HV_MSG_HASH = 3
  31:source/HvMessage.h **** } ElementType;
  32:source/HvMessage.h **** 
  33:source/HvMessage.h **** typedef struct Element {
  34:source/HvMessage.h ****   ElementType type;
  35:source/HvMessage.h ****   union {
  36:source/HvMessage.h ****     float f; // float
  37:source/HvMessage.h ****     const char *s; // symbol
  38:source/HvMessage.h ****     hv_uint32_t h; // hash
  39:source/HvMessage.h ****   } data;
  40:source/HvMessage.h **** } Element;
  41:source/HvMessage.h **** 
  42:source/HvMessage.h **** typedef struct HvMessage {
  43:source/HvMessage.h ****   hv_uint32_t timestamp; // the sample at which this message should be processed
  44:source/HvMessage.h ****   hv_uint16_t numElements;
  45:source/HvMessage.h ****   hv_uint16_t numBytes; // the total number of bytes that this message occupies in memory, includin
  46:source/HvMessage.h ****   Element elem;
  47:source/HvMessage.h **** } HvMessage;
  48:source/HvMessage.h **** 
  49:source/HvMessage.h **** typedef struct ReceiverMessagePair {
  50:source/HvMessage.h ****   hv_uint32_t receiverHash;
  51:source/HvMessage.h ****   HvMessage msg;
  52:source/HvMessage.h **** } ReceiverMessagePair;
  53:source/HvMessage.h **** 
  54:source/HvMessage.h **** #define HV_MESSAGE_ON_STACK(_x) (HvMessage *) hv_alloca(msg_getCoreSize(_x))
  55:source/HvMessage.h **** 
  56:source/HvMessage.h **** /** Returns the number of bytes that this message consumes in memory, not including strings. */
  57:source/HvMessage.h **** static inline hv_size_t msg_getCoreSize(hv_size_t numElements) {
  58:source/HvMessage.h ****   hv_assert(numElements > 0);
  59:source/HvMessage.h ****   return sizeof(HvMessage) + ((numElements-1) * sizeof(Element));
  60:source/HvMessage.h **** }
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s 			page 34


  61:source/HvMessage.h **** 
  62:source/HvMessage.h **** HvMessage *msg_copy(const HvMessage *m);
  63:source/HvMessage.h **** 
  64:source/HvMessage.h **** /** Copies the message into the given buffer. The buffer must be at least as large as msg_getNumHea
  65:source/HvMessage.h **** void msg_copyToBuffer(const HvMessage *m, char *buffer, hv_size_t len);
  66:source/HvMessage.h **** 
  67:source/HvMessage.h **** void msg_setElementToFrom(HvMessage *n, int indexN, const HvMessage *const m, int indexM);
  68:source/HvMessage.h **** 
  69:source/HvMessage.h **** /** Frees a message on the heap. Does nothing if argument is NULL. */
  70:source/HvMessage.h **** void msg_free(HvMessage *m);
  71:source/HvMessage.h **** 
  72:source/HvMessage.h **** HvMessage *msg_init(HvMessage *m, hv_size_t numElements, hv_uint32_t timestamp);
  73:source/HvMessage.h **** 
  74:source/HvMessage.h **** HvMessage *msg_initWithFloat(HvMessage *m, hv_uint32_t timestamp, float f);
  75:source/HvMessage.h **** 
  76:source/HvMessage.h **** HvMessage *msg_initWithBang(HvMessage *m, hv_uint32_t timestamp);
  77:source/HvMessage.h **** 
  78:source/HvMessage.h **** HvMessage *msg_initWithSymbol(HvMessage *m, hv_uint32_t timestamp, const char *s);
  79:source/HvMessage.h **** 
  80:source/HvMessage.h **** HvMessage *msg_initWithHash(HvMessage *m, hv_uint32_t timestamp, hv_uint32_t h);
  81:source/HvMessage.h **** 
  82:source/HvMessage.h **** static inline hv_uint32_t msg_getTimestamp(const HvMessage *m) {
 1245              		.loc 6 82 27 is_stmt 1 view .LVU262
 1246              	.LBB128:
  83:source/HvMessage.h ****   return m->timestamp;
 1247              		.loc 6 83 3 view .LVU263
 1248              		.loc 6 83 3 is_stmt 0 view .LVU264
 1249              	.LBE128:
 1250              	.LBE127:
 1251              		.loc 5 69 27 view .LVU265
 1252 0064 1368     		ldr	r3, [r2]
 1253 0066 9845     		cmp	r8, r3
 1254 0068 0AD9     		bls	.L77
 1255              	.LVL100:
 1256              		.loc 5 69 27 view .LVU266
 1257              	.LBE121:
 1258              	.LBE120:
 1259              	.LBB131:
 179:source/Heavy_daisiSPI.cpp ****       node->sendMessage(this, node->let, node->m);
 1260              		.loc 3 179 7 is_stmt 1 view .LVU267
 179:source/Heavy_daisiSPI.cpp ****       node->sendMessage(this, node->let, node->m);
 1261              		.loc 3 179 7 is_stmt 0 view .LVU268
 1262              	.LBE131:
 1263              	.LBE119:
 1264              	.LBE216:
  70:source/HvMessageQueue.h **** }
  71:source/HvMessageQueue.h **** 
  72:source/HvMessageQueue.h **** static inline MessageNode *mq_peek(HvMessageQueue *q) {
  73:source/HvMessageQueue.h ****   return q->head;
 1265              		.loc 5 73 3 is_stmt 1 view .LVU269
 1266              	.LBB217:
 1267              	.LBB210:
 1268              	.LBB132:
 180:source/Heavy_daisiSPI.cpp ****       mq_pop(&mq);
 1269              		.loc 3 180 7 view .LVU270
 180:source/Heavy_daisiSPI.cpp ****       mq_pop(&mq);
 1270              		.loc 3 180 24 is_stmt 0 view .LVU271
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s 			page 35


 1271 006a D0E90331 		ldrd	r3, r1, [r0, #12]
 1272 006e 2846     		mov	r0, r5
 1273              	.LVL101:
 180:source/Heavy_daisiSPI.cpp ****       mq_pop(&mq);
 1274              		.loc 3 180 24 view .LVU272
 1275 0070 9847     		blx	r3
 1276              	.LVL102:
 181:source/Heavy_daisiSPI.cpp ****     }
 1277              		.loc 3 181 7 is_stmt 1 view .LVU273
 181:source/Heavy_daisiSPI.cpp ****     }
 1278              		.loc 3 181 13 is_stmt 0 view .LVU274
 1279 0072 05F11800 		add	r0, r5, #24
 1280 0076 FFF7FEFF 		bl	mq_pop
 1281              	.LVL103:
 1282              	.LBE132:
 178:source/Heavy_daisiSPI.cpp ****       MessageNode *const node = mq_peek(&mq);
 1283              		.loc 3 178 5 is_stmt 1 view .LVU275
 178:source/Heavy_daisiSPI.cpp ****       MessageNode *const node = mq_peek(&mq);
 1284              		.loc 3 178 31 view .LVU276
 1285              	.LBB133:
  68:source/HvMessageQueue.h ****   return mq_hasMessage(q) && (msg_getTimestamp(mq_node_getMessage(q->head)) < timestamp);
 1286              		.loc 5 68 20 view .LVU277
 1287              	.LBB130:
  69:source/HvMessageQueue.h **** }
 1288              		.loc 5 69 3 view .LVU278
 1289              	.LBB129:
  63:source/HvMessageQueue.h ****   return (q->head != NULL);
 1290              		.loc 5 63 20 view .LVU279
 1291              	.LBB124:
  64:source/HvMessageQueue.h **** }
 1292              		.loc 5 64 3 view .LVU280
  64:source/HvMessageQueue.h **** }
 1293              		.loc 5 64 14 is_stmt 0 view .LVU281
 1294 007a A869     		ldr	r0, [r5, #24]
 1295              	.LVL104:
  64:source/HvMessageQueue.h **** }
 1296              		.loc 5 64 14 view .LVU282
 1297              	.LBE124:
 1298              	.LBE129:
  69:source/HvMessageQueue.h **** }
 1299              		.loc 5 69 27 view .LVU283
 1300 007c 0028     		cmp	r0, #0
 1301 007e F0D1     		bne	.L75
 1302              	.LVL105:
 1303              	.L77:
  69:source/HvMessageQueue.h **** }
 1304              		.loc 5 69 27 view .LVU284
 1305              	.LBE130:
 1306              	.LBE133:
 187:source/Heavy_daisiSPI.cpp ****     __hv_zero_f(VOf(O1));
 1307              		.loc 3 187 5 is_stmt 1 view .LVU285
 187:source/Heavy_daisiSPI.cpp ****     __hv_zero_f(VOf(O1));
 1308              		.loc 3 187 5 is_stmt 0 view .LVU286
 1309              	.LBE210:
 1310              	.LBE217:
 1311              		.loc 4 34 3 is_stmt 1 view .LVU287
 1312              	.LBB218:
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s 			page 36


 1313              	.LBB211:
 188:source/Heavy_daisiSPI.cpp **** 
 1314              		.loc 3 188 5 view .LVU288
 188:source/Heavy_daisiSPI.cpp **** 
 1315              		.loc 3 188 5 is_stmt 0 view .LVU289
 1316              	.LBE211:
 1317              	.LBE218:
 1318              		.loc 4 34 3 is_stmt 1 view .LVU290
 1319              	.LBB219:
 1320              	.LBB212:
 191:source/Heavy_daisiSPI.cpp ****     __hv_var_k_f(VOf(Bf1), 0.5f, 0.5f, 0.5f, 0.5f, 0.5f, 0.5f, 0.5f, 0.5f);
 1321              		.loc 3 191 5 view .LVU291
 1322              	.LBB134:
 1323              	.LBI134:
 1324              		.file 7 "source/HvSignalPhasor.h"
   1:source/HvSignalPhasor.h **** /**
   2:source/HvSignalPhasor.h ****  * Copyright (c) 2014-2018 Enzien Audio Ltd.
   3:source/HvSignalPhasor.h ****  *
   4:source/HvSignalPhasor.h ****  * Permission to use, copy, modify, and/or distribute this software for any
   5:source/HvSignalPhasor.h ****  * purpose with or without fee is hereby granted, provided that the above
   6:source/HvSignalPhasor.h ****  * copyright notice and this permission notice appear in all copies.
   7:source/HvSignalPhasor.h ****  *
   8:source/HvSignalPhasor.h ****  * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
   9:source/HvSignalPhasor.h ****  * REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
  10:source/HvSignalPhasor.h ****  * AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
  11:source/HvSignalPhasor.h ****  * INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
  12:source/HvSignalPhasor.h ****  * LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
  13:source/HvSignalPhasor.h ****  * OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
  14:source/HvSignalPhasor.h ****  * PERFORMANCE OF THIS SOFTWARE.
  15:source/HvSignalPhasor.h ****  */
  16:source/HvSignalPhasor.h **** 
  17:source/HvSignalPhasor.h **** #ifndef _HEAVY_SIGNAL_PHASOR_H_
  18:source/HvSignalPhasor.h **** #define _HEAVY_SIGNAL_PHASOR_H_
  19:source/HvSignalPhasor.h **** 
  20:source/HvSignalPhasor.h **** #include "HvHeavyInternal.h"
  21:source/HvSignalPhasor.h **** 
  22:source/HvSignalPhasor.h **** #ifdef __cplusplus
  23:source/HvSignalPhasor.h **** extern "C" {
  24:source/HvSignalPhasor.h **** #endif
  25:source/HvSignalPhasor.h **** 
  26:source/HvSignalPhasor.h **** typedef struct SignalPhasor {
  27:source/HvSignalPhasor.h **** #if HV_SIMD_AVX
  28:source/HvSignalPhasor.h ****   __m256 phase; // current phase
  29:source/HvSignalPhasor.h ****   __m256 inc;   // phase increment
  30:source/HvSignalPhasor.h **** #elif HV_SIMD_SSE
  31:source/HvSignalPhasor.h ****   __m128i phase;
  32:source/HvSignalPhasor.h ****   __m128i inc;
  33:source/HvSignalPhasor.h **** #elif HV_SIMD_NEON
  34:source/HvSignalPhasor.h ****   uint32x4_t phase;
  35:source/HvSignalPhasor.h ****   int32x4_t inc;
  36:source/HvSignalPhasor.h **** #else // HV_SIMD_NONE
  37:source/HvSignalPhasor.h ****   hv_uint32_t phase;
  38:source/HvSignalPhasor.h ****   hv_int32_t inc;
  39:source/HvSignalPhasor.h **** #endif
  40:source/HvSignalPhasor.h ****   union {
  41:source/HvSignalPhasor.h ****     float f2sc; // float to step conversion (used for __phasor~f)
  42:source/HvSignalPhasor.h ****     hv_int32_t s; // step value (used for __phasor_k~f)
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s 			page 37


  43:source/HvSignalPhasor.h ****   } step;
  44:source/HvSignalPhasor.h **** } SignalPhasor;
  45:source/HvSignalPhasor.h **** 
  46:source/HvSignalPhasor.h **** hv_size_t sPhasor_init(SignalPhasor *o, double samplerate);
  47:source/HvSignalPhasor.h **** 
  48:source/HvSignalPhasor.h **** hv_size_t sPhasor_k_init(SignalPhasor *o, float frequency, double samplerate);
  49:source/HvSignalPhasor.h **** 
  50:source/HvSignalPhasor.h **** void sPhasor_k_onMessage(HeavyContextInterface *_c, SignalPhasor *o, int letIn, const HvMessage *m)
  51:source/HvSignalPhasor.h **** 
  52:source/HvSignalPhasor.h **** void sPhasor_onMessage(HeavyContextInterface *_c, SignalPhasor *o, int letIn, const HvMessage *m);
  53:source/HvSignalPhasor.h **** 
  54:source/HvSignalPhasor.h **** static inline void __hv_phasor_f(SignalPhasor *o, hv_bInf_t bIn, hv_bOutf_t bOut) {
  55:source/HvSignalPhasor.h **** #if HV_SIMD_AVX
  56:source/HvSignalPhasor.h ****   __m256 p = _mm256_mul_ps(bIn, _mm256_set1_ps(o->step.f2sc)); // a b c d e f g h
  57:source/HvSignalPhasor.h **** 
  58:source/HvSignalPhasor.h ****   __m256 z = _mm256_setzero_ps();
  59:source/HvSignalPhasor.h **** 
  60:source/HvSignalPhasor.h ****   // http://stackoverflow.com/questions/11906814/how-to-rotate-an-sse-avx-vector
  61:source/HvSignalPhasor.h ****   __m256 a = _mm256_permute_ps(p, _MM_SHUFFLE(2,1,0,3)); // d a b c h e f g
  62:source/HvSignalPhasor.h ****   __m256 b = _mm256_permute2f128_ps(a, a, 0x01);         // h e f g d a b c
  63:source/HvSignalPhasor.h ****   __m256 c = _mm256_blend_ps(a, b, 0x10);                // d a b c d e f g
  64:source/HvSignalPhasor.h ****   __m256 d = _mm256_blend_ps(c, z, 0x01);                // 0 a b c d e f g
  65:source/HvSignalPhasor.h ****   __m256 e = _mm256_add_ps(p, d); // a (a+b) (b+c) (c+d) (d+e) (e+f) (f+g) (g+h)
  66:source/HvSignalPhasor.h **** 
  67:source/HvSignalPhasor.h ****   __m256 f = _mm256_permute_ps(e, _MM_SHUFFLE(1,0,3,2)); // (b+c) (c+d) a (a+b) (f+g) (g+h) (d+e) (
  68:source/HvSignalPhasor.h ****   __m256 g = _mm256_permute2f128_ps(f, f, 0x01);         // (f+g) (g+h) (d+e) (e+f) (b+c) (c+d) a (
  69:source/HvSignalPhasor.h ****   __m256 h = _mm256_blend_ps(f, g, 0x33);                // (b+c) (c+d) a (a+b) (b+c) (c+d) (d+e) (
  70:source/HvSignalPhasor.h ****   __m256 i = _mm256_blend_ps(h, z, 0x03);                // 0 0 a (a+b) (b+c) (c+d) (d+e) (e+f)
  71:source/HvSignalPhasor.h ****   __m256 j = _mm256_add_ps(e, i); // a (a+b) (a+b+c) (a+b+c+d) (b+c+d+e) (c+d+e+f) (d+e+f+g) (e+f+g
  72:source/HvSignalPhasor.h **** 
  73:source/HvSignalPhasor.h ****   __m256 k = _mm256_permute2f128_ps(j, z, 0x02);         // 0 0 0 0 a (a+b) (a+b+c) (a+b+c+d) (b+c+
  74:source/HvSignalPhasor.h ****   __m256 m = _mm256_add_ps(j, k); // a (a+b) (a+b+c) (a+b+c+d) (a+b+c+d+e) (a+b+c+d+e+f) (a+b+c+d+e
  75:source/HvSignalPhasor.h **** 
  76:source/HvSignalPhasor.h ****   __m256 n = _mm256_or_ps(_mm256_andnot_ps(
  77:source/HvSignalPhasor.h ****       _mm256_set1_ps(-INFINITY),
  78:source/HvSignalPhasor.h ****       _mm256_add_ps(o->phase, m)),
  79:source/HvSignalPhasor.h ****       _mm256_set1_ps(1.0f));
  80:source/HvSignalPhasor.h **** 
  81:source/HvSignalPhasor.h ****   *bOut = _mm256_sub_ps(n, _mm256_set1_ps(1.0f));
  82:source/HvSignalPhasor.h **** 
  83:source/HvSignalPhasor.h ****   __m256 x = _mm256_permute_ps(n, _MM_SHUFFLE(3,3,3,3));
  84:source/HvSignalPhasor.h ****   o->phase = _mm256_permute2f128_ps(x, x, 0x11);
  85:source/HvSignalPhasor.h **** #elif HV_SIMD_SSE
  86:source/HvSignalPhasor.h ****   __m128i p = _mm_cvtps_epi32(_mm_mul_ps(bIn, _mm_set1_ps(o->step.f2sc))); // convert frequency to 
  87:source/HvSignalPhasor.h ****   p = _mm_add_epi32(p, _mm_slli_si128(p, 4)); // add incremental steps to phase (prefix sum)
  88:source/HvSignalPhasor.h ****   p = _mm_add_epi32(p, _mm_slli_si128(p, 8)); // http://stackoverflow.com/questions/10587598/simd-p
  89:source/HvSignalPhasor.h ****   p = _mm_add_epi32(o->phase, p);
  90:source/HvSignalPhasor.h ****   *bOut = _mm_sub_ps(_mm_castsi128_ps(
  91:source/HvSignalPhasor.h ****       _mm_or_si128(_mm_srli_epi32(p, 9),
  92:source/HvSignalPhasor.h ****       _mm_set_epi32(0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000))),
  93:source/HvSignalPhasor.h ****       _mm_set1_ps(1.0f));
  94:source/HvSignalPhasor.h ****   o->phase = _mm_shuffle_epi32(p, _MM_SHUFFLE(3,3,3,3));
  95:source/HvSignalPhasor.h **** #elif HV_SIMD_NEON
  96:source/HvSignalPhasor.h ****   int32x4_t p = vcvtq_s32_f32(vmulq_n_f32(bIn, o->step.f2sc));
  97:source/HvSignalPhasor.h ****   p = vaddq_s32(p, vextq_s32(vdupq_n_s32(0), p, 3)); // http://stackoverflow.com/questions/11259596
  98:source/HvSignalPhasor.h ****   p = vaddq_s32(p, vextq_s32(vdupq_n_s32(0), p, 2));
  99:source/HvSignalPhasor.h ****   uint32x4_t pp = vaddq_u32(o->phase, vreinterpretq_u32_s32(p));
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s 			page 38


 100:source/HvSignalPhasor.h ****   *bOut = vsubq_f32(vreinterpretq_f32_u32(vorrq_u32(vshrq_n_u32(pp, 9), vdupq_n_u32(0x3F800000))), 
 101:source/HvSignalPhasor.h ****   o->phase = vdupq_n_u32(pp[3]);
 102:source/HvSignalPhasor.h **** #else // HV_SIMD_NONE
 103:source/HvSignalPhasor.h ****   const hv_uint32_t p = (o->phase >> 9) | 0x3F800000;
 104:source/HvSignalPhasor.h ****   *bOut = *((float *) (&p)) - 1.0f;
 105:source/HvSignalPhasor.h ****   o->phase += ((int) (bIn * o->step.f2sc));
 106:source/HvSignalPhasor.h **** #endif
 107:source/HvSignalPhasor.h **** }
 108:source/HvSignalPhasor.h **** 
 109:source/HvSignalPhasor.h **** static inline void __hv_phasor_k_f(SignalPhasor *o, hv_bOutf_t bOut) {
 1325              		.loc 7 109 20 view .LVU292
 1326              	.LBB135:
 110:source/HvSignalPhasor.h **** #if HV_SIMD_AVX
 111:source/HvSignalPhasor.h ****   *bOut = _mm256_sub_ps(o->phase, _mm256_set1_ps(1.0f));
 112:source/HvSignalPhasor.h ****   o->phase = _mm256_or_ps(_mm256_andnot_ps(
 113:source/HvSignalPhasor.h ****       _mm256_set1_ps(-INFINITY),
 114:source/HvSignalPhasor.h ****       _mm256_add_ps(o->phase, o->inc)),
 115:source/HvSignalPhasor.h ****       _mm256_set1_ps(1.0f));
 116:source/HvSignalPhasor.h **** #elif HV_SIMD_SSE
 117:source/HvSignalPhasor.h ****   *bOut = _mm_sub_ps(_mm_castsi128_ps(
 118:source/HvSignalPhasor.h ****       _mm_or_si128(_mm_srli_epi32(o->phase, 9),
 119:source/HvSignalPhasor.h ****       _mm_set_epi32(0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000))),
 120:source/HvSignalPhasor.h ****       _mm_set1_ps(1.0f));
 121:source/HvSignalPhasor.h ****   o->phase = _mm_add_epi32(o->phase, o->inc);
 122:source/HvSignalPhasor.h **** #elif HV_SIMD_NEON
 123:source/HvSignalPhasor.h ****   *bOut = vsubq_f32(vreinterpretq_f32_u32(
 124:source/HvSignalPhasor.h ****       vorrq_u32(vshrq_n_u32(o->phase, 9),
 125:source/HvSignalPhasor.h ****       vdupq_n_u32(0x3F800000))),
 126:source/HvSignalPhasor.h ****       vdupq_n_f32(1.0f));
 127:source/HvSignalPhasor.h ****   o->phase = vaddq_u32(o->phase, vreinterpretq_u32_s32(o->inc));
 128:source/HvSignalPhasor.h **** #else // HV_SIMD_NONE
 129:source/HvSignalPhasor.h ****   const hv_uint32_t p = (o->phase >> 9) | 0x3F800000;
 1327              		.loc 7 129 3 view .LVU293
 1328              		.loc 7 129 29 is_stmt 0 view .LVU294
 1329 0080 D5F88820 		ldr	r2, [r5, #136]
 1330              	.LVL106:
 130:source/HvSignalPhasor.h ****   *bOut = *((float *) (&p)) - 1.0f;
 1331              		.loc 7 130 3 is_stmt 1 view .LVU295
 131:source/HvSignalPhasor.h ****   o->phase += o->inc;
 1332              		.loc 7 131 3 view .LVU296
 130:source/HvSignalPhasor.h ****   *bOut = *((float *) (&p)) - 1.0f;
 1333              		.loc 7 130 29 is_stmt 0 view .LVU297
 1334 0084 B7EE004A 		vmov.f32	s8, #1.0e+0
 1335              	.LBE135:
 1336              	.LBE134:
 1337              	.LBB142:
 1338              	.LBB143:
  35:source/HvMath.h **** #endif
  36:source/HvMath.h **** }
  37:source/HvMath.h **** 
  38:source/HvMath.h **** static inline void __hv_zero_i(hv_bOuti_t bOut) {
  39:source/HvMath.h **** #if HV_SIMD_AVX
  40:source/HvMath.h ****   *bOut = _mm256_setzero_si256();
  41:source/HvMath.h **** #elif HV_SIMD_SSE
  42:source/HvMath.h ****   *bOut = _mm_setzero_si128();
  43:source/HvMath.h **** #elif HV_SIMD_NEON
  44:source/HvMath.h ****   *bOut = vdupq_n_s32(0);
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s 			page 39


  45:source/HvMath.h **** #else // HV_SIMD_NONE
  46:source/HvMath.h ****   *bOut = 0;
  47:source/HvMath.h **** #endif
  48:source/HvMath.h **** }
  49:source/HvMath.h **** 
  50:source/HvMath.h **** static inline void __hv_load_f(float *bIn, hv_bOutf_t bOut) {
  51:source/HvMath.h **** #if HV_SIMD_AVX
  52:source/HvMath.h ****   *bOut = _mm256_load_ps(bIn);
  53:source/HvMath.h **** #elif HV_SIMD_SSE
  54:source/HvMath.h ****   *bOut = _mm_load_ps(bIn);
  55:source/HvMath.h **** #elif HV_SIMD_NEON
  56:source/HvMath.h ****   *bOut = vld1q_f32(bIn);
  57:source/HvMath.h **** #else // HV_SIMD_NONE
  58:source/HvMath.h ****   *bOut = *bIn;
  59:source/HvMath.h **** #endif
  60:source/HvMath.h **** }
  61:source/HvMath.h **** 
  62:source/HvMath.h **** static inline void __hv_store_f(float *bOut, hv_bInf_t bIn) {
  63:source/HvMath.h **** #if HV_SIMD_AVX
  64:source/HvMath.h ****   _mm256_store_ps(bOut, bIn);
  65:source/HvMath.h **** #elif HV_SIMD_SSE
  66:source/HvMath.h ****   _mm_store_ps(bOut, bIn);
  67:source/HvMath.h **** #elif HV_SIMD_NEON
  68:source/HvMath.h ****   vst1q_f32(bOut, bIn);
  69:source/HvMath.h **** #else // HV_SIMD_NONE
  70:source/HvMath.h ****   *bOut = bIn;
  71:source/HvMath.h **** #endif
  72:source/HvMath.h **** }
  73:source/HvMath.h **** 
  74:source/HvMath.h **** static inline void __hv_log2_f(hv_bInf_t bIn, hv_bOutf_t bOut) {
  75:source/HvMath.h **** #if HV_SIMD_AVX
  76:source/HvMath.h ****   hv_assert(0); // __hv_log2_f() not implemented
  77:source/HvMath.h **** #elif HV_SIMD_SSE
  78:source/HvMath.h ****   // https://en.wikipedia.org/wiki/Fast_inverse_square_root
  79:source/HvMath.h ****   __m128i a = _mm_castps_si128(bIn);
  80:source/HvMath.h ****   __m128i b = _mm_srli_epi32(a, 23);
  81:source/HvMath.h ****   __m128i c = _mm_sub_epi32(b, _mm_set1_epi32(127)); // exponent (int)
  82:source/HvMath.h ****   __m128 d = _mm_cvtepi32_ps(c); // exponent (float)
  83:source/HvMath.h ****   __m128i e = _mm_or_si128(_mm_andnot_si128(_mm_set1_epi32(0xFF800000), a), _mm_set1_epi32(0x3F8000
  84:source/HvMath.h ****   __m128 f = _mm_castsi128_ps(e); // 1+m (float)
  85:source/HvMath.h ****   __m128 g = _mm_add_ps(d, f); // e + 1 + m
  86:source/HvMath.h ****   __m128 h = _mm_add_ps(g, _mm_set1_ps(-0.9569643f)); // e + 1 + m + (sigma-1)
  87:source/HvMath.h ****   *bOut = h;
  88:source/HvMath.h **** #elif HV_SIMD_NEON
  89:source/HvMath.h ****   int32x4_t a = vreinterpretq_s32_f32(bIn);
  90:source/HvMath.h ****   int32x4_t b = vshrq_n_s32(a, 23);
  91:source/HvMath.h ****   int32x4_t c = vsubq_s32(b, vdupq_n_s32(127));
  92:source/HvMath.h ****   float32x4_t d = vcvtq_f32_s32(c);
  93:source/HvMath.h ****   int32x4_t e = vorrq_s32(vbicq_s32(a, vdupq_n_s32(0xFF800000)), vdupq_n_s32(0x3F800000));
  94:source/HvMath.h ****   float32x4_t f = vreinterpretq_f32_s32(e);
  95:source/HvMath.h ****   float32x4_t g = vaddq_f32(d, f);
  96:source/HvMath.h ****   float32x4_t h = vaddq_f32(g, vdupq_n_f32(-0.9569643f));
  97:source/HvMath.h ****   *bOut = h;
  98:source/HvMath.h **** #else // HV_SIMD_NONE
  99:source/HvMath.h ****   *bOut = 1.442695040888963f * hv_log_f(bIn);
 100:source/HvMath.h **** #endif
 101:source/HvMath.h **** }
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s 			page 40


 102:source/HvMath.h **** 
 103:source/HvMath.h **** // NOTE(mhroth): this is a pretty ghetto implementation
 104:source/HvMath.h **** static inline void __hv_cos_f(hv_bInf_t bIn, hv_bOutf_t bOut) {
 105:source/HvMath.h **** #if HV_SIMD_AVX
 106:source/HvMath.h ****   *bOut = _mm256_set_ps(
 107:source/HvMath.h ****       hv_cos_f(bIn[7]), hv_cos_f(bIn[6]), hv_cos_f(bIn[5]), hv_cos_f(bIn[4]),
 108:source/HvMath.h ****       hv_cos_f(bIn[3]), hv_cos_f(bIn[2]), hv_cos_f(bIn[1]), hv_cos_f(bIn[0]));
 109:source/HvMath.h **** #elif HV_SIMD_SSE
 110:source/HvMath.h ****   const float *const b = (float *) &bIn;
 111:source/HvMath.h ****   *bOut = _mm_set_ps(hv_cos_f(b[3]), hv_cos_f(b[2]), hv_cos_f(b[1]), hv_cos_f(b[0]));
 112:source/HvMath.h **** #elif HV_SIMD_NEON
 113:source/HvMath.h ****   *bOut = (float32x4_t) {hv_cos_f(bIn[0]), hv_cos_f(bIn[1]), hv_cos_f(bIn[2]), hv_cos_f(bIn[3])};
 114:source/HvMath.h **** #else // HV_SIMD_NONE
 115:source/HvMath.h ****   *bOut = hv_cos_f(bIn);
 116:source/HvMath.h **** #endif
 117:source/HvMath.h **** }
 118:source/HvMath.h **** 
 119:source/HvMath.h **** static inline void __hv_acos_f(hv_bInf_t bIn, hv_bOutf_t bOut) {
 120:source/HvMath.h **** #if HV_SIMD_AVX
 121:source/HvMath.h ****   hv_assert(0); // __hv_acos_f() not implemented
 122:source/HvMath.h **** #elif HV_SIMD_SSE
 123:source/HvMath.h ****   hv_assert(0); // __hv_acos_f() not implemented
 124:source/HvMath.h **** #elif HV_SIMD_NEON
 125:source/HvMath.h ****   hv_assert(0); // __hv_acos_f() not implemented
 126:source/HvMath.h **** #else // HV_SIMD_NONE
 127:source/HvMath.h ****   *bOut = hv_acos_f(bIn);
 128:source/HvMath.h **** #endif
 129:source/HvMath.h **** }
 130:source/HvMath.h **** 
 131:source/HvMath.h **** static inline void __hv_cosh_f(hv_bInf_t bIn, hv_bOutf_t bOut) {
 132:source/HvMath.h **** #if HV_SIMD_AVX
 133:source/HvMath.h ****   hv_assert(0); // __hv_cosh_f() not implemented
 134:source/HvMath.h **** #elif HV_SIMD_SSE
 135:source/HvMath.h ****   hv_assert(0); // __hv_cosh_f() not implemented
 136:source/HvMath.h **** #elif HV_SIMD_NEON
 137:source/HvMath.h ****   hv_assert(0); // __hv_cosh_f() not implemented
 138:source/HvMath.h **** #else // HV_SIMD_NONE
 139:source/HvMath.h ****   *bOut = hv_cosh_f(bIn);
 140:source/HvMath.h **** #endif
 141:source/HvMath.h **** }
 142:source/HvMath.h **** 
 143:source/HvMath.h **** static inline void __hv_acosh_f(hv_bInf_t bIn, hv_bOutf_t bOut) {
 144:source/HvMath.h **** #if HV_SIMD_AVX
 145:source/HvMath.h ****   hv_assert(0); // __hv_acosh_f() not implemented
 146:source/HvMath.h **** #elif HV_SIMD_SSE
 147:source/HvMath.h ****   hv_assert(0); // __hv_acosh_f() not implemented
 148:source/HvMath.h **** #elif HV_SIMD_NEON
 149:source/HvMath.h ****   hv_assert(0); // __hv_acosh_f() not implemented
 150:source/HvMath.h **** #else // HV_SIMD_NONE
 151:source/HvMath.h ****   *bOut = hv_acosh_f(bIn);
 152:source/HvMath.h **** #endif
 153:source/HvMath.h **** }
 154:source/HvMath.h **** 
 155:source/HvMath.h **** static inline void __hv_sin_f(hv_bInf_t bIn, hv_bOutf_t bOut) {
 156:source/HvMath.h **** #if HV_SIMD_AVX
 157:source/HvMath.h ****   hv_assert(0); // __hv_sin_f() not implemented
 158:source/HvMath.h **** #elif HV_SIMD_SSE
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s 			page 41


 159:source/HvMath.h ****   hv_assert(0); // __hv_sin_f() not implemented
 160:source/HvMath.h **** #elif HV_SIMD_NEON
 161:source/HvMath.h ****   hv_assert(0); // __hv_sin_f() not implemented
 162:source/HvMath.h **** #else // HV_SIMD_NONE
 163:source/HvMath.h ****   *bOut = hv_sin_f(bIn);
 164:source/HvMath.h **** #endif
 165:source/HvMath.h **** }
 166:source/HvMath.h **** 
 167:source/HvMath.h **** static inline void __hv_asin_f(hv_bInf_t bIn, hv_bOutf_t bOut) {
 168:source/HvMath.h **** #if HV_SIMD_AVX
 169:source/HvMath.h ****   hv_assert(0); // __hv_asin_f() not implemented
 170:source/HvMath.h **** #elif HV_SIMD_SSE
 171:source/HvMath.h ****   hv_assert(0); // __hv_asin_f() not implemented
 172:source/HvMath.h **** #elif HV_SIMD_NEON
 173:source/HvMath.h ****   hv_assert(0); // __hv_asin_f() not implemented
 174:source/HvMath.h **** #else // HV_SIMD_NONE
 175:source/HvMath.h ****   *bOut = hv_asin_f(bIn);
 176:source/HvMath.h **** #endif
 177:source/HvMath.h **** }
 178:source/HvMath.h **** 
 179:source/HvMath.h **** static inline void __hv_sinh_f(hv_bInf_t bIn, hv_bOutf_t bOut) {
 180:source/HvMath.h **** #if HV_SIMD_AVX
 181:source/HvMath.h ****   hv_assert(0); // __hv_sinh_f() not implemented
 182:source/HvMath.h **** #elif HV_SIMD_SSE
 183:source/HvMath.h ****   hv_assert(0); // __hv_sinh_f() not implemented
 184:source/HvMath.h **** #elif HV_SIMD_NEON
 185:source/HvMath.h ****   hv_assert(0); // __hv_sinh_f() not implemented
 186:source/HvMath.h **** #else // HV_SIMD_NONE
 187:source/HvMath.h ****   *bOut = hv_sinh_f(bIn);
 188:source/HvMath.h **** #endif
 189:source/HvMath.h **** }
 190:source/HvMath.h **** 
 191:source/HvMath.h **** static inline void __hv_asinh_f(hv_bInf_t bIn, hv_bOutf_t bOut) {
 192:source/HvMath.h **** #if HV_SIMD_AVX
 193:source/HvMath.h ****   hv_assert(0); // __hv_asinh_f() not implemented
 194:source/HvMath.h **** #elif HV_SIMD_SSE
 195:source/HvMath.h ****   hv_assert(0); // __hv_asinh_f() not implemented
 196:source/HvMath.h **** #elif HV_SIMD_NEON
 197:source/HvMath.h ****   hv_assert(0); // __hv_asinh_f() not implemented
 198:source/HvMath.h **** #else // HV_SIMD_NONE
 199:source/HvMath.h ****   *bOut = hv_asinh_f(bIn);
 200:source/HvMath.h **** #endif
 201:source/HvMath.h **** }
 202:source/HvMath.h **** 
 203:source/HvMath.h **** static inline void __hv_tan_f(hv_bInf_t bIn, hv_bOutf_t bOut) {
 204:source/HvMath.h **** #if HV_SIMD_AVX
 205:source/HvMath.h ****   hv_assert(0); // __hv_tan_f() not implemented
 206:source/HvMath.h **** #elif HV_SIMD_SSE
 207:source/HvMath.h ****   hv_assert(0); // __hv_tan_f() not implemented
 208:source/HvMath.h **** #elif HV_SIMD_NEON
 209:source/HvMath.h ****   hv_assert(0); // __hv_tan_f() not implemented
 210:source/HvMath.h **** #else // HV_SIMD_NONE
 211:source/HvMath.h ****   *bOut = hv_tan_f(bIn);
 212:source/HvMath.h **** #endif
 213:source/HvMath.h **** }
 214:source/HvMath.h **** 
 215:source/HvMath.h **** static inline void __hv_atan_f(hv_bInf_t bIn, hv_bOutf_t bOut) {
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s 			page 42


 216:source/HvMath.h **** #if HV_SIMD_AVX
 217:source/HvMath.h ****   hv_assert(0); // __hv_atan_f() not implemented
 218:source/HvMath.h **** #elif HV_SIMD_SSE
 219:source/HvMath.h ****   hv_assert(0); // __hv_atan_f() not implemented
 220:source/HvMath.h **** #elif HV_SIMD_NEON
 221:source/HvMath.h ****   hv_assert(0); // __hv_atan_f() not implemented
 222:source/HvMath.h **** #else // HV_SIMD_NONE
 223:source/HvMath.h ****   *bOut = hv_atan_f(bIn);
 224:source/HvMath.h **** #endif
 225:source/HvMath.h **** }
 226:source/HvMath.h **** 
 227:source/HvMath.h **** static inline void __hv_atan2_f(hv_bInf_t bIn0, hv_bInf_t bIn1, hv_bOutf_t bOut) {
 228:source/HvMath.h **** #if HV_SIMD_AVX
 229:source/HvMath.h ****   hv_assert(0); // __hv_atan2_f() not implemented
 230:source/HvMath.h **** #elif HV_SIMD_SSE
 231:source/HvMath.h ****   hv_assert(0); // __hv_atan2_f() not implemented
 232:source/HvMath.h **** #elif HV_SIMD_NEON
 233:source/HvMath.h ****   hv_assert(0); // __hv_atan2_f() not implemented
 234:source/HvMath.h **** #else // HV_SIMD_NONE
 235:source/HvMath.h ****   *bOut = hv_atan2_f(bIn0, bIn1);
 236:source/HvMath.h **** #endif
 237:source/HvMath.h **** }
 238:source/HvMath.h **** 
 239:source/HvMath.h **** static inline void __hv_tanh_f(hv_bInf_t bIn, hv_bOutf_t bOut) {
 240:source/HvMath.h **** #if HV_SIMD_AVX
 241:source/HvMath.h ****   hv_assert(0); // __hv_tanh_f() not implemented
 242:source/HvMath.h **** #elif HV_SIMD_SSE
 243:source/HvMath.h ****   hv_assert(0); // __hv_tanh_f() not implemented
 244:source/HvMath.h **** #elif HV_SIMD_NEON
 245:source/HvMath.h ****   hv_assert(0); // __hv_tanh_f() not implemented
 246:source/HvMath.h **** #else // HV_SIMD_NONE
 247:source/HvMath.h ****   *bOut = hv_tanh_f(bIn);
 248:source/HvMath.h **** #endif
 249:source/HvMath.h **** }
 250:source/HvMath.h **** 
 251:source/HvMath.h **** static inline void __hv_atanh_f(hv_bInf_t bIn, hv_bOutf_t bOut) {
 252:source/HvMath.h **** #if HV_SIMD_AVX
 253:source/HvMath.h ****   hv_assert(0); // __hv_atanh_f() not implemented
 254:source/HvMath.h **** #elif HV_SIMD_SSE
 255:source/HvMath.h ****   hv_assert(0); // __hv_atanh_f() not implemented
 256:source/HvMath.h **** #elif HV_SIMD_NEON
 257:source/HvMath.h ****   hv_assert(0); // __hv_atanh_f() not implemented
 258:source/HvMath.h **** #else // HV_SIMD_NONE
 259:source/HvMath.h ****   *bOut = hv_atanh_f(bIn);
 260:source/HvMath.h **** #endif
 261:source/HvMath.h **** }
 262:source/HvMath.h **** 
 263:source/HvMath.h **** static inline void __hv_sqrt_f(hv_bInf_t bIn, hv_bOutf_t bOut) {
 264:source/HvMath.h **** #if HV_SIMD_AVX
 265:source/HvMath.h ****   *bOut = _mm256_sqrt_ps(bIn);
 266:source/HvMath.h **** #elif HV_SIMD_SSE
 267:source/HvMath.h ****   *bOut = _mm_sqrt_ps(bIn);
 268:source/HvMath.h **** #elif HV_SIMD_NEON
 269:source/HvMath.h ****   const float32x4_t y = vrsqrteq_f32(bIn);
 270:source/HvMath.h ****   *bOut = vmulq_f32(bIn, vmulq_f32(vrsqrtsq_f32(vmulq_f32(bIn, y), y), y)); // numerical results ma
 271:source/HvMath.h **** #else // HV_SIMD_NONE
 272:source/HvMath.h ****   *bOut = hv_sqrt_f(bIn);
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s 			page 43


 273:source/HvMath.h **** #endif
 274:source/HvMath.h **** }
 275:source/HvMath.h **** 
 276:source/HvMath.h **** static inline void __hv_rsqrt_f(hv_bInf_t bIn, hv_bOutf_t bOut) {
 277:source/HvMath.h **** #if HV_SIMD_AVX
 278:source/HvMath.h ****   *bOut = _mm256_rsqrt_ps(bIn);
 279:source/HvMath.h **** #elif HV_SIMD_SSE
 280:source/HvMath.h ****   *bOut = _mm_rsqrt_ps(bIn);
 281:source/HvMath.h **** #elif HV_SIMD_NEON
 282:source/HvMath.h ****   const float32x4_t y = vrsqrteq_f32(bIn);
 283:source/HvMath.h ****   *bOut = vmulq_f32(vrsqrtsq_f32(vmulq_f32(bIn, y), y), y); // numerical results may be inexact
 284:source/HvMath.h **** #else // HV_SIMD_NONE
 285:source/HvMath.h ****   *bOut = 1.0f/hv_sqrt_f(bIn);
 286:source/HvMath.h **** #endif
 287:source/HvMath.h **** }
 288:source/HvMath.h **** 
 289:source/HvMath.h **** static inline void __hv_abs_f(hv_bInf_t bIn, hv_bOutf_t bOut) {
 290:source/HvMath.h **** #if HV_SIMD_AVX
 291:source/HvMath.h ****   *bOut = _mm256_andnot_ps(_mm256_set1_ps(-0.0f), bIn);
 292:source/HvMath.h **** #elif HV_SIMD_SSE
 293:source/HvMath.h ****   *bOut = _mm_andnot_ps(_mm_set1_ps(-0.0f), bIn); // == 1 << 31
 294:source/HvMath.h **** #elif HV_SIMD_NEON
 295:source/HvMath.h ****   *bOut = vabsq_f32(bIn);
 296:source/HvMath.h **** #else // HV_SIMD_NONE
 297:source/HvMath.h ****   *bOut = hv_abs_f(bIn);
 298:source/HvMath.h **** #endif
 299:source/HvMath.h **** }
 300:source/HvMath.h **** 
 301:source/HvMath.h **** static inline void __hv_neg_f(hv_bInf_t bIn, hv_bOutf_t bOut) {
 302:source/HvMath.h **** #if HV_SIMD_AVX
 303:source/HvMath.h ****   *bOut = _mm256_xor_ps(bIn, _mm256_set1_ps(-0.0f));
 304:source/HvMath.h **** #elif HV_SIMD_SSE
 305:source/HvMath.h ****   *bOut = _mm_xor_ps(bIn, _mm_set1_ps(-0.0f));
 306:source/HvMath.h **** #elif HV_SIMD_NEON
 307:source/HvMath.h ****   *bOut = vnegq_f32(bIn);
 308:source/HvMath.h **** #else // HV_SIMD_NONE
 309:source/HvMath.h ****   *bOut = bIn * -1.0f;
 310:source/HvMath.h **** #endif
 311:source/HvMath.h **** }
 312:source/HvMath.h **** 
 313:source/HvMath.h **** static inline void __hv_exp_f(hv_bInf_t bIn, hv_bOutf_t bOut) {
 314:source/HvMath.h **** #if HV_SIMD_AVX
 315:source/HvMath.h ****   float *const b = (float *) hv_alloca(HV_N_SIMD*sizeof(float));
 316:source/HvMath.h ****   _mm256_store_ps(b, bIn);
 317:source/HvMath.h ****   *bOut = _mm256_set_ps(
 318:source/HvMath.h ****       hv_exp_f(b[7]), hv_exp_f(b[6]), hv_exp_f(b[5]), hv_exp_f(b[4]),
 319:source/HvMath.h ****       hv_exp_f(b[3]), hv_exp_f(b[2]), hv_exp_f(b[1]), hv_exp_f(b[0]));
 320:source/HvMath.h **** #elif HV_SIMD_SSE
 321:source/HvMath.h ****   float *const b = (float *) hv_alloca(HV_N_SIMD*sizeof(float));
 322:source/HvMath.h ****   _mm_store_ps(b, bIn);
 323:source/HvMath.h ****   *bOut = _mm_set_ps(hv_exp_f(b[3]), hv_exp_f(b[2]), hv_exp_f(b[1]), hv_exp_f(b[0]));
 324:source/HvMath.h **** #elif HV_SIMD_NEON
 325:source/HvMath.h ****   *bOut = (float32x4_t) {
 326:source/HvMath.h ****     hv_exp_f(bIn[0]),
 327:source/HvMath.h ****     hv_exp_f(bIn[1]),
 328:source/HvMath.h ****     hv_exp_f(bIn[2]),
 329:source/HvMath.h ****     hv_exp_f(bIn[3])};
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s 			page 44


 330:source/HvMath.h **** #else // HV_SIMD_NONE
 331:source/HvMath.h ****   *bOut = hv_exp_f(bIn);
 332:source/HvMath.h **** #endif
 333:source/HvMath.h **** }
 334:source/HvMath.h **** 
 335:source/HvMath.h **** static inline void __hv_ceil_f(hv_bInf_t bIn, hv_bOutf_t bOut) {
 336:source/HvMath.h **** #if HV_SIMD_AVX
 337:source/HvMath.h ****   *bOut = _mm256_ceil_ps(bIn);
 338:source/HvMath.h **** #elif HV_SIMD_SSE
 339:source/HvMath.h ****   *bOut = _mm_ceil_ps(bIn);
 340:source/HvMath.h **** #elif HV_SIMD_NEON
 341:source/HvMath.h **** #if __ARM_ARCH >= 8
 342:source/HvMath.h ****   *bOut = vrndpq_f32(bIn);
 343:source/HvMath.h **** #else
 344:source/HvMath.h ****   // A slow NEON implementation of __hv_ceil_f() is being used because
 345:source/HvMath.h ****   // the necessary intrinsic cannot be found. It is only available in ARMv8.
 346:source/HvMath.h ****   *bOut = (float32x4_t) {hv_ceil_f(bIn[0]), hv_ceil_f(bIn[1]), hv_ceil_f(bIn[2]), hv_ceil_f(bIn[3])
 347:source/HvMath.h **** #endif // vrndpq_f32
 348:source/HvMath.h **** #else // HV_SIMD_NONE
 349:source/HvMath.h ****   *bOut = hv_ceil_f(bIn);
 350:source/HvMath.h **** #endif
 351:source/HvMath.h **** }
 352:source/HvMath.h **** 
 353:source/HvMath.h **** static inline void __hv_floor_f(hv_bInf_t bIn, hv_bOutf_t bOut) {
 354:source/HvMath.h **** #if HV_SIMD_AVX
 355:source/HvMath.h ****   *bOut = _mm256_floor_ps(bIn);
 356:source/HvMath.h **** #elif HV_SIMD_SSE
 357:source/HvMath.h ****   *bOut = _mm_floor_ps(bIn);
 358:source/HvMath.h **** #elif HV_SIMD_NEON
 359:source/HvMath.h **** #if __ARM_ARCH >= 8
 360:source/HvMath.h ****   *bOut = vrndmq_f32(bIn);
 361:source/HvMath.h **** #else
 362:source/HvMath.h ****   // A slow implementation of __hv_floor_f() is being used because
 363:source/HvMath.h ****   // the necessary intrinsic cannot be found. It is only available from ARMv8.
 364:source/HvMath.h ****   *bOut = (float32x4_t) {hv_floor_f(bIn[0]), hv_floor_f(bIn[1]), hv_floor_f(bIn[2]), hv_floor_f(bIn
 365:source/HvMath.h **** #endif // vrndmq_f32
 366:source/HvMath.h **** #else // HV_SIMD_NONE
 367:source/HvMath.h ****   *bOut = hv_floor_f(bIn);
 368:source/HvMath.h **** #endif
 369:source/HvMath.h **** }
 370:source/HvMath.h **** 
 371:source/HvMath.h **** // __add~f
 372:source/HvMath.h **** static inline void __hv_add_f(hv_bInf_t bIn0, hv_bInf_t bIn1, hv_bOutf_t bOut) {
 373:source/HvMath.h **** #if HV_SIMD_AVX
 374:source/HvMath.h ****   *bOut = _mm256_add_ps(bIn0, bIn1);
 375:source/HvMath.h **** #elif HV_SIMD_SSE
 376:source/HvMath.h ****   *bOut = _mm_add_ps(bIn0, bIn1);
 377:source/HvMath.h **** #elif HV_SIMD_NEON
 378:source/HvMath.h ****   *bOut = vaddq_f32(bIn0, bIn1);
 379:source/HvMath.h **** #else // HV_SIMD_NONE
 380:source/HvMath.h ****   *bOut = bIn0 + bIn1;
 381:source/HvMath.h **** #endif
 382:source/HvMath.h **** }
 383:source/HvMath.h **** 
 384:source/HvMath.h **** // __add~i
 385:source/HvMath.h **** static inline void __hv_add_i(hv_bIni_t bIn0, hv_bIni_t bIn1, hv_bOuti_t bOut) {
 386:source/HvMath.h **** #if HV_SIMD_AVX
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s 			page 45


 387:source/HvMath.h ****   __m128i x = _mm_add_epi32(_mm256_castsi256_si128(bIn0), _mm256_castsi256_si128(bIn1));
 388:source/HvMath.h ****   __m128i y = _mm_add_epi32(_mm256_extractf128_si256(bIn0, 1), _mm256_extractf128_si256(bIn1, 1));
 389:source/HvMath.h ****   *bOut = _mm256_insertf128_si256(_mm256_castsi128_si256(x), y, 1);
 390:source/HvMath.h **** #elif HV_SIMD_SSE
 391:source/HvMath.h ****   *bOut = _mm_add_epi32(bIn0, bIn1);
 392:source/HvMath.h **** #elif HV_SIMD_NEON
 393:source/HvMath.h ****   *bOut = vaddq_s32(bIn0, bIn1);
 394:source/HvMath.h **** #else // HV_SIMD_NONE
 395:source/HvMath.h ****   *bOut = bIn0 + bIn1;
 396:source/HvMath.h **** #endif
 397:source/HvMath.h **** }
 398:source/HvMath.h **** 
 399:source/HvMath.h **** // __sub~f
 400:source/HvMath.h **** static inline void __hv_sub_f(hv_bInf_t bIn0, hv_bInf_t bIn1, hv_bOutf_t bOut) {
 401:source/HvMath.h **** #if HV_SIMD_AVX
 402:source/HvMath.h ****   *bOut = _mm256_sub_ps(bIn0, bIn1);
 403:source/HvMath.h **** #elif HV_SIMD_SSE
 404:source/HvMath.h ****   *bOut = _mm_sub_ps(bIn0, bIn1);
 405:source/HvMath.h **** #elif HV_SIMD_NEON
 406:source/HvMath.h ****   *bOut = vsubq_f32(bIn0, bIn1);
 407:source/HvMath.h **** #else // HV_SIMD_NONE
 408:source/HvMath.h ****   *bOut = bIn0 - bIn1;
 1339              		.loc 4 408 16 view .LVU298
 1340 0088 F6EE004A 		vmov.f32	s9, #5.0e-1
 1341              	.LBE143:
 1342              	.LBE142:
 1343              	.LBB146:
 1344              	.LBB147:
 409:source/HvMath.h **** #endif
 410:source/HvMath.h **** }
 411:source/HvMath.h **** 
 412:source/HvMath.h **** // __mul~f
 413:source/HvMath.h **** static inline void __hv_mul_f(hv_bInf_t bIn0, hv_bInf_t bIn1, hv_bOutf_t bOut) {
 414:source/HvMath.h **** #if HV_SIMD_AVX
 415:source/HvMath.h ****   *bOut = _mm256_mul_ps(bIn0, bIn1);
 416:source/HvMath.h **** #elif HV_SIMD_SSE
 417:source/HvMath.h ****   *bOut = _mm_mul_ps(bIn0, bIn1);
 418:source/HvMath.h **** #elif HV_SIMD_NEON
 419:source/HvMath.h ****   *bOut = vmulq_f32(bIn0, bIn1);
 420:source/HvMath.h **** #else // HV_SIMD_NONE
 421:source/HvMath.h ****   *bOut = bIn0 * bIn1;
 1345              		.loc 4 421 16 view .LVU299
 1346 008c 9FED257A 		vldr.32	s14, .L83+4
 1347              	.LBE147:
 1348              	.LBE146:
 1349              	.LBB150:
 1350              	.LBB136:
 129:source/HvSignalPhasor.h ****   *bOut = *((float *) (&p)) - 1.0f;
 1351              		.loc 7 129 35 view .LVU300
 1352 0090 510A     		lsrs	r1, r2, #9
 1353              	.LBE136:
 1354              	.LBE150:
 1355              	.LBB151:
 1356              	.LBB152:
 408:source/HvMath.h **** #endif
 1357              		.loc 4 408 16 view .LVU301
 1358 0092 F5EE006A 		vmov.f32	s13, #2.5e-1
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s 			page 46


 1359              	.LBE152:
 1360              	.LBE151:
 1361              	.LBB155:
 1362              	.LBB156:
 422:source/HvMath.h **** #endif
 423:source/HvMath.h **** }
 424:source/HvMath.h **** 
 425:source/HvMath.h **** // __*~i
 426:source/HvMath.h **** static inline void __hv_mul_i(hv_bIni_t bIn0, hv_bIni_t bIn1, hv_bOuti_t bOut) {
 427:source/HvMath.h **** #if HV_SIMD_AVX
 428:source/HvMath.h ****   __m128i x = _mm_mullo_epi32(_mm256_castsi256_si128(bIn0), _mm256_castsi256_si128(bIn1));
 429:source/HvMath.h ****   __m128i y = _mm_mullo_epi32(_mm256_extractf128_si256(bIn0, 1), _mm256_extractf128_si256(bIn1, 1))
 430:source/HvMath.h ****   *bOut = _mm256_insertf128_si256(_mm256_castsi128_si256(x), y, 1);
 431:source/HvMath.h **** #elif HV_SIMD_SSE
 432:source/HvMath.h ****   *bOut = _mm_mullo_epi32(bIn0, bIn1);
 433:source/HvMath.h **** #elif HV_SIMD_NEON
 434:source/HvMath.h ****   *bOut = vmulq_s32(bIn0, bIn1);
 435:source/HvMath.h **** #else // HV_SIMD_NONE
 436:source/HvMath.h ****   *bOut = bIn0 * bIn1;
 437:source/HvMath.h **** #endif
 438:source/HvMath.h **** }
 439:source/HvMath.h **** 
 440:source/HvMath.h **** // __cast~if
 441:source/HvMath.h **** static inline void __hv_cast_if(hv_bIni_t bIn, hv_bOutf_t bOut) {
 442:source/HvMath.h **** #if HV_SIMD_AVX
 443:source/HvMath.h ****   *bOut = _mm256_cvtepi32_ps(bIn);
 444:source/HvMath.h **** #elif HV_SIMD_SSE
 445:source/HvMath.h ****   *bOut = _mm_cvtepi32_ps(bIn);
 446:source/HvMath.h **** #elif HV_SIMD_NEON
 447:source/HvMath.h ****   *bOut = vcvtq_f32_s32(bIn);
 448:source/HvMath.h **** #else // HV_SIMD_NONE
 449:source/HvMath.h ****   *bOut = (float) bIn;
 450:source/HvMath.h **** #endif
 451:source/HvMath.h **** }
 452:source/HvMath.h **** 
 453:source/HvMath.h **** // __cast~fi
 454:source/HvMath.h **** static inline void __hv_cast_fi(hv_bInf_t bIn, hv_bOuti_t bOut) {
 455:source/HvMath.h **** #if HV_SIMD_AVX
 456:source/HvMath.h ****   *bOut = _mm256_cvtps_epi32(bIn);
 457:source/HvMath.h **** #elif HV_SIMD_SSE
 458:source/HvMath.h ****   *bOut = _mm_cvtps_epi32(bIn);
 459:source/HvMath.h **** #elif HV_SIMD_NEON
 460:source/HvMath.h ****   *bOut = vcvtq_s32_f32(bIn);
 461:source/HvMath.h **** #else // HV_SIMD_NONE
 462:source/HvMath.h ****   *bOut = (int) bIn;
 463:source/HvMath.h **** #endif
 464:source/HvMath.h **** }
 465:source/HvMath.h **** 
 466:source/HvMath.h **** static inline void __hv_div_f(hv_bInf_t bIn0, hv_bInf_t bIn1, hv_bOutf_t bOut) {
 467:source/HvMath.h **** #if HV_SIMD_AVX
 468:source/HvMath.h ****   __m256 a = _mm256_cmp_ps(bIn1, _mm256_setzero_ps(), _CMP_EQ_OQ);
 469:source/HvMath.h ****   __m256 b = _mm256_div_ps(bIn0, bIn1);
 470:source/HvMath.h ****   *bOut = _mm256_andnot_ps(a, b);
 471:source/HvMath.h **** #elif HV_SIMD_SSE
 472:source/HvMath.h ****   __m128 a = _mm_cmpeq_ps(bIn1, _mm_setzero_ps());
 473:source/HvMath.h ****   __m128 b = _mm_div_ps(bIn0, bIn1);
 474:source/HvMath.h ****   *bOut = _mm_andnot_ps(a, b);
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s 			page 47


 475:source/HvMath.h **** #elif HV_SIMD_NEON
 476:source/HvMath.h ****   uint32x4_t a = vceqq_f32(bIn1, vdupq_n_f32(0.0f));
 477:source/HvMath.h ****   float32x4_t b = vmulq_f32(bIn0, vrecpeq_f32(bIn1)); // NOTE(mhroth): numerical results may be ine
 478:source/HvMath.h ****   *bOut = vreinterpretq_f32_u32(vbicq_u32(vreinterpretq_u32_f32(b), a));
 479:source/HvMath.h **** #else // HV_SIMD_NONE
 480:source/HvMath.h ****   *bOut = (bIn1 != 0.0f) ? (bIn0 / bIn1) : 0.0f;
 481:source/HvMath.h **** #endif
 482:source/HvMath.h **** }
 483:source/HvMath.h **** 
 484:source/HvMath.h **** static inline void __hv_min_f(hv_bInf_t bIn0, hv_bInf_t bIn1, hv_bOutf_t bOut) {
 485:source/HvMath.h **** #if HV_SIMD_AVX
 486:source/HvMath.h ****   *bOut = _mm256_min_ps(bIn0, bIn1);
 487:source/HvMath.h **** #elif HV_SIMD_SSE
 488:source/HvMath.h ****   *bOut = _mm_min_ps(bIn0, bIn1);
 489:source/HvMath.h **** #elif HV_SIMD_NEON
 490:source/HvMath.h ****   *bOut = vminq_f32(bIn0, bIn1);
 491:source/HvMath.h **** #else // HV_SIMD_NONE
 492:source/HvMath.h ****   *bOut = hv_min_f(bIn0, bIn1);
 493:source/HvMath.h **** #endif
 494:source/HvMath.h **** }
 495:source/HvMath.h **** 
 496:source/HvMath.h **** static inline void __hv_min_i(hv_bIni_t bIn0, hv_bIni_t bIn1, hv_bOuti_t bOut) {
 497:source/HvMath.h **** #if HV_SIMD_AVX
 498:source/HvMath.h ****   __m128i x = _mm_min_epi32(_mm256_castsi256_si128(bIn0), _mm256_castsi256_si128(bIn1));
 499:source/HvMath.h ****   __m128i y = _mm_min_epi32(_mm256_extractf128_si256(bIn0, 1), _mm256_extractf128_si256(bIn1, 1));
 500:source/HvMath.h ****   *bOut = _mm256_insertf128_si256(_mm256_castsi128_si256(x), y, 1);
 501:source/HvMath.h **** #elif HV_SIMD_SSE
 502:source/HvMath.h ****   *bOut = _mm_min_epi32(bIn0, bIn1);
 503:source/HvMath.h **** #elif HV_SIMD_NEON
 504:source/HvMath.h ****   *bOut = vminq_s32(bIn0, bIn1);
 505:source/HvMath.h **** #else // HV_SIMD_NONE
 506:source/HvMath.h ****   *bOut = hv_min_i(bIn0, bIn1);
 507:source/HvMath.h **** #endif
 508:source/HvMath.h **** }
 509:source/HvMath.h **** 
 510:source/HvMath.h **** static inline void __hv_max_f(hv_bInf_t bIn0, hv_bInf_t bIn1, hv_bOutf_t bOut) {
 511:source/HvMath.h **** #if HV_SIMD_AVX
 512:source/HvMath.h ****   *bOut = _mm256_max_ps(bIn0, bIn1);
 513:source/HvMath.h **** #elif HV_SIMD_SSE
 514:source/HvMath.h ****   *bOut = _mm_max_ps(bIn0, bIn1);
 515:source/HvMath.h **** #elif HV_SIMD_NEON
 516:source/HvMath.h ****   *bOut = vmaxq_f32(bIn0, bIn1);
 517:source/HvMath.h **** #else // HV_SIMD_NONE
 518:source/HvMath.h ****   *bOut = hv_max_f(bIn0, bIn1);
 519:source/HvMath.h **** #endif
 520:source/HvMath.h **** }
 521:source/HvMath.h **** 
 522:source/HvMath.h **** static inline void __hv_max_i(hv_bIni_t bIn0, hv_bIni_t bIn1, hv_bOuti_t bOut) {
 523:source/HvMath.h **** #if HV_SIMD_AVX
 524:source/HvMath.h ****   __m128i x = _mm_max_epi32(_mm256_castsi256_si128(bIn0), _mm256_castsi256_si128(bIn1));
 525:source/HvMath.h ****   __m128i y = _mm_max_epi32(_mm256_extractf128_si256(bIn0, 1), _mm256_extractf128_si256(bIn1, 1));
 526:source/HvMath.h ****   *bOut = _mm256_insertf128_si256(_mm256_castsi128_si256(x), y, 1);
 527:source/HvMath.h **** #elif HV_SIMD_SSE
 528:source/HvMath.h ****   *bOut = _mm_max_epi32(bIn0, bIn1);
 529:source/HvMath.h **** #elif HV_SIMD_NEON
 530:source/HvMath.h ****   *bOut = vmaxq_s32(bIn0, bIn1);
 531:source/HvMath.h **** #else // HV_SIMD_NONE
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s 			page 48


 532:source/HvMath.h ****   *bOut = hv_max_i(bIn0, bIn1);
 533:source/HvMath.h **** #endif
 534:source/HvMath.h **** }
 535:source/HvMath.h **** 
 536:source/HvMath.h **** static inline void __hv_pow_f(hv_bInf_t bIn0, hv_bInf_t bIn1, hv_bOutf_t bOut) {
 537:source/HvMath.h **** #if HV_SIMD_AVX
 538:source/HvMath.h ****   float *b = (float *) hv_alloca(16*sizeof(float));
 539:source/HvMath.h ****   _mm256_store_ps(b, bIn0);
 540:source/HvMath.h ****   _mm256_store_ps(b+8, bIn1);
 541:source/HvMath.h ****   *bOut = _mm256_set_ps(
 542:source/HvMath.h ****       hv_pow_f(b[7], b[7]),
 543:source/HvMath.h ****       hv_pow_f(b[6], b[6]),
 544:source/HvMath.h ****       hv_pow_f(b[5], b[5]),
 545:source/HvMath.h ****       hv_pow_f(b[4], b[4]),
 546:source/HvMath.h ****       hv_pow_f(b[3], b[3]),
 547:source/HvMath.h ****       hv_pow_f(b[2], b[2]),
 548:source/HvMath.h ****       hv_pow_f(b[1], b[1]),
 549:source/HvMath.h ****       hv_pow_f(b[0], b[0]));
 550:source/HvMath.h **** #elif HV_SIMD_SSE
 551:source/HvMath.h ****   float *b = (float *) hv_alloca(8*sizeof(float));
 552:source/HvMath.h ****   _mm_store_ps(b, bIn0);
 553:source/HvMath.h ****   _mm_store_ps(b+4, bIn1);
 554:source/HvMath.h ****   *bOut = _mm_set_ps(
 555:source/HvMath.h ****       hv_pow_f(b[3], b[7]),
 556:source/HvMath.h ****       hv_pow_f(b[2], b[6]),
 557:source/HvMath.h ****       hv_pow_f(b[1], b[5]),
 558:source/HvMath.h ****       hv_pow_f(b[0], b[4]));
 559:source/HvMath.h **** #elif HV_SIMD_NEON
 560:source/HvMath.h ****   *bOut = (float32x4_t) {
 561:source/HvMath.h ****       hv_pow_f(bIn0[0], bIn1[0]),
 562:source/HvMath.h ****       hv_pow_f(bIn0[1], bIn1[1]),
 563:source/HvMath.h ****       hv_pow_f(bIn0[2], bIn1[2]),
 564:source/HvMath.h ****       hv_pow_f(bIn0[3], bIn1[3])};
 565:source/HvMath.h **** #else // HV_SIMD_NONE
 566:source/HvMath.h ****   *bOut = hv_pow_f(bIn0, bIn1);
 567:source/HvMath.h **** #endif
 568:source/HvMath.h **** }
 569:source/HvMath.h **** 
 570:source/HvMath.h **** static inline void __hv_gt_f(hv_bInf_t bIn0, hv_bInf_t bIn1, hv_bOutf_t bOut) {
 571:source/HvMath.h **** #if HV_SIMD_AVX
 572:source/HvMath.h ****   *bOut = _mm256_cmp_ps(bIn0, bIn1, _CMP_GT_OQ);
 573:source/HvMath.h **** #elif HV_SIMD_SSE
 574:source/HvMath.h ****   *bOut = _mm_cmpgt_ps(bIn0, bIn1);
 575:source/HvMath.h **** #elif HV_SIMD_NEON
 576:source/HvMath.h ****   *bOut = vreinterpretq_f32_u32(vcgtq_f32(bIn0, bIn1));
 577:source/HvMath.h **** #else // HV_SIMD_NONE
 578:source/HvMath.h ****   *bOut = (bIn0 > bIn1) ? 1.0f : 0.0f;
 579:source/HvMath.h **** #endif
 580:source/HvMath.h **** }
 581:source/HvMath.h **** 
 582:source/HvMath.h **** static inline void __hv_gte_f(hv_bInf_t bIn0, hv_bInf_t bIn1, hv_bOutf_t bOut) {
 583:source/HvMath.h **** #if HV_SIMD_AVX
 584:source/HvMath.h ****   *bOut = _mm256_cmp_ps(bIn0, bIn1, _CMP_GE_OQ);
 585:source/HvMath.h **** #elif HV_SIMD_SSE
 586:source/HvMath.h ****   *bOut = _mm_cmpge_ps(bIn0, bIn1);
 587:source/HvMath.h **** #elif HV_SIMD_NEON
 588:source/HvMath.h ****   *bOut = vreinterpretq_f32_u32(vcgeq_f32(bIn0, bIn1));
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s 			page 49


 589:source/HvMath.h **** #else // HV_SIMD_NONE
 590:source/HvMath.h ****   *bOut = (bIn0 >= bIn1) ? 1.0f : 0.0f;
 591:source/HvMath.h **** #endif
 592:source/HvMath.h **** }
 593:source/HvMath.h **** 
 594:source/HvMath.h **** static inline void __hv_lt_f(hv_bInf_t bIn0, hv_bInf_t bIn1, hv_bOutf_t bOut) {
 595:source/HvMath.h **** #if HV_SIMD_AVX
 596:source/HvMath.h ****   *bOut = _mm256_cmp_ps(bIn0, bIn1, _CMP_LT_OQ);
 597:source/HvMath.h **** #elif HV_SIMD_SSE
 598:source/HvMath.h ****   *bOut = _mm_cmplt_ps(bIn0, bIn1);
 599:source/HvMath.h **** #elif HV_SIMD_NEON
 600:source/HvMath.h ****   *bOut = vreinterpretq_f32_u32(vcltq_f32(bIn0, bIn1));
 601:source/HvMath.h **** #else // HV_SIMD_NONE
 602:source/HvMath.h ****   *bOut = (bIn0 < bIn1) ? 1.0f : 0.0f;
 603:source/HvMath.h **** #endif
 604:source/HvMath.h **** }
 605:source/HvMath.h **** 
 606:source/HvMath.h **** static inline void __hv_lte_f(hv_bInf_t bIn0, hv_bInf_t bIn1, hv_bOutf_t bOut) {
 607:source/HvMath.h **** #if HV_SIMD_AVX
 608:source/HvMath.h ****   *bOut = _mm256_cmp_ps(bIn0, bIn1, _CMP_LE_OQ);
 609:source/HvMath.h **** #elif HV_SIMD_SSE
 610:source/HvMath.h ****   *bOut = _mm_cmple_ps(bIn0, bIn1);
 611:source/HvMath.h **** #elif HV_SIMD_NEON
 612:source/HvMath.h ****   *bOut = vreinterpretq_f32_u32(vcleq_f32(bIn0, bIn1));
 613:source/HvMath.h **** #else // HV_SIMD_NONE
 614:source/HvMath.h ****   *bOut = (bIn0 <= bIn1) ? 1.0f : 0.0f;
 615:source/HvMath.h **** #endif
 616:source/HvMath.h **** }
 617:source/HvMath.h **** 
 618:source/HvMath.h **** static inline void __hv_neq_f(hv_bInf_t bIn0, hv_bInf_t bIn1, hv_bOutf_t bOut) {
 619:source/HvMath.h **** #if HV_SIMD_AVX
 620:source/HvMath.h ****   *bOut = _mm256_cmp_ps(bIn0, bIn1, _CMP_NEQ_OQ);
 621:source/HvMath.h **** #elif HV_SIMD_SSE
 622:source/HvMath.h ****   *bOut = _mm_cmpneq_ps(bIn0, bIn1);
 623:source/HvMath.h **** #elif HV_SIMD_NEON
 624:source/HvMath.h ****   *bOut = vreinterpretq_f32_u32(vmvnq_u32(vceqq_f32(bIn0, bIn1)));
 625:source/HvMath.h **** #else // HV_SIMD_NONE
 626:source/HvMath.h ****   *bOut = (bIn0 != bIn1) ? 1.0f : 0.0f;
 627:source/HvMath.h **** #endif
 628:source/HvMath.h **** }
 629:source/HvMath.h **** 
 630:source/HvMath.h **** static inline void __hv_or_f(hv_bInf_t bIn0, hv_bInf_t bIn1, hv_bOutf_t bOut) {
 631:source/HvMath.h **** #if HV_SIMD_AVX
 632:source/HvMath.h ****   *bOut = _mm256_or_ps(bIn1, bIn0);
 633:source/HvMath.h **** #elif HV_SIMD_SSE
 634:source/HvMath.h ****   *bOut = _mm_or_ps(bIn1, bIn0);
 635:source/HvMath.h **** #elif HV_SIMD_NEON
 636:source/HvMath.h ****   *bOut = vreinterpretq_f32_u32(vorrq_u32(vreinterpretq_u32_f32(bIn1), vreinterpretq_u32_f32(bIn0))
 637:source/HvMath.h **** #else // HV_SIMD_NONE
 638:source/HvMath.h ****   if (bIn0 == 0.0f && bIn1 == 0.0f) *bOut = 0.0f;
 639:source/HvMath.h ****   else if (bIn0 == 0.0f) *bOut = bIn1;
 640:source/HvMath.h ****   else if (bIn1 == 0.0f) *bOut = bIn0;
 641:source/HvMath.h ****   else hv_assert(0);
 642:source/HvMath.h **** #endif
 643:source/HvMath.h **** }
 644:source/HvMath.h **** 
 645:source/HvMath.h **** static inline void __hv_and_f(hv_bInf_t bIn0, hv_bInf_t bIn1, hv_bOutf_t bOut) {
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s 			page 50


 646:source/HvMath.h **** #if HV_SIMD_AVX
 647:source/HvMath.h ****   *bOut = _mm256_and_ps(bIn1, bIn0);
 648:source/HvMath.h **** #elif HV_SIMD_SSE
 649:source/HvMath.h ****   *bOut = _mm_and_ps(bIn1, bIn0);
 650:source/HvMath.h **** #elif HV_SIMD_NEON
 651:source/HvMath.h ****   *bOut = vreinterpretq_f32_u32(vandq_u32(vreinterpretq_u32_f32(bIn1), vreinterpretq_u32_f32(bIn0))
 652:source/HvMath.h **** #else // HV_SIMD_NONE
 653:source/HvMath.h ****   if (bIn0 == 0.0f || bIn1 == 0.0f) *bOut = 0.0f;
 654:source/HvMath.h ****   else if (bIn0 == 1.0f) *bOut = bIn1;
 655:source/HvMath.h ****   else if (bIn1 == 1.0f) *bOut = bIn0;
 656:source/HvMath.h ****   else hv_assert(0);
 657:source/HvMath.h **** #endif
 658:source/HvMath.h **** }
 659:source/HvMath.h **** 
 660:source/HvMath.h **** static inline void __hv_andnot_f(hv_bInf_t bIn0_mask, hv_bInf_t bIn1, hv_bOutf_t bOut) {
 661:source/HvMath.h **** #if HV_SIMD_AVX
 662:source/HvMath.h ****   *bOut = _mm256_andnot_ps(bIn0_mask, bIn1);
 663:source/HvMath.h **** #elif HV_SIMD_SSE
 664:source/HvMath.h ****   *bOut = _mm_andnot_ps(bIn0_mask, bIn1);
 665:source/HvMath.h **** #elif HV_SIMD_NEON
 666:source/HvMath.h ****   *bOut = vreinterpretq_f32_s32(vbicq_s32(vreinterpretq_s32_f32(bIn1), vreinterpretq_s32_f32(bIn0_m
 667:source/HvMath.h **** #else // HV_SIMD_NONE
 668:source/HvMath.h ****   *bOut = (bIn0_mask == 0.0f) ? bIn1 : 0.0f;
 669:source/HvMath.h **** #endif
 670:source/HvMath.h **** }
 671:source/HvMath.h **** 
 672:source/HvMath.h **** // bOut = (bIn0 * bIn1) + bIn2
 673:source/HvMath.h **** static inline void __hv_fma_f(hv_bInf_t bIn0, hv_bInf_t bIn1, hv_bInf_t bIn2, hv_bOutf_t bOut) {
 674:source/HvMath.h **** #if HV_SIMD_AVX
 675:source/HvMath.h **** #if HV_SIMD_FMA
 676:source/HvMath.h ****   *bOut = _mm256_fmadd_ps(bIn0, bIn1, bIn2);
 677:source/HvMath.h **** #else
 678:source/HvMath.h ****   *bOut = _mm256_add_ps(_mm256_mul_ps(bIn0, bIn1), bIn2);
 679:source/HvMath.h **** #endif // HV_SIMD_FMA
 680:source/HvMath.h **** #elif HV_SIMD_SSE
 681:source/HvMath.h **** #if HV_SIMD_FMA
 682:source/HvMath.h ****   *bOut = _mm_fmadd_ps(bIn0, bIn1, bIn2);
 683:source/HvMath.h **** #else
 684:source/HvMath.h ****   *bOut = _mm_add_ps(_mm_mul_ps(bIn0, bIn1), bIn2);
 685:source/HvMath.h **** #endif // HV_SIMD_FMA
 686:source/HvMath.h **** #elif HV_SIMD_NEON
 687:source/HvMath.h **** #if __ARM_ARCH >= 8
 688:source/HvMath.h ****   *bOut = vfmaq_f32(bIn2, bIn0, bIn1);
 689:source/HvMath.h **** #else
 690:source/HvMath.h ****   // NOTE(mhroth): it turns out, fma SUUUUCKS on lesser ARM architectures
 691:source/HvMath.h ****   *bOut = vaddq_f32(vmulq_f32(bIn0, bIn1), bIn2);
 692:source/HvMath.h **** #endif
 693:source/HvMath.h **** #else // HV_SIMD_NONE
 694:source/HvMath.h ****   *bOut = hv_fma_f(bIn0, bIn1, bIn2);
 1363              		.loc 4 694 11 view .LVU302
 1364 0096 9FED245A 		vldr.32	s10, .L83+8
 1365              	.LBE156:
 1366              	.LBE155:
 1367              	.LBE212:
 174:source/Heavy_daisiSPI.cpp **** 
 1368              		.loc 3 174 21 view .LVU303
 1369 009a C845     		cmp	r8, r9
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s 			page 51


 1370              	.LBB213:
 1371              	.LBB158:
 1372              	.LBB137:
 129:source/HvSignalPhasor.h ****   *bOut = *((float *) (&p)) - 1.0f;
 1373              		.loc 7 129 41 view .LVU304
 1374 009c 41F07E53 		orr	r3, r1, #1065353216
 1375              	.LVL107:
 129:source/HvSignalPhasor.h ****   *bOut = *((float *) (&p)) - 1.0f;
 1376              		.loc 7 129 41 view .LVU305
 1377              	.LBE137:
 1378              	.LBE158:
 1379              	.LBB159:
 1380              	.LBB160:
 1381              		.loc 4 694 11 view .LVU306
 1382 00a0 DFED225A 		vldr.32	s11, .L83+12
 1383              	.LBE160:
 1384              	.LBE159:
 1385              	.LBB163:
 1386              	.LBB164:
 380:source/HvMath.h **** #endif
 1387              		.loc 4 380 16 view .LVU307
 1388 00a4 9FED226A 		vldr.32	s12, .L83+16
 1389              	.LBE164:
 1390              	.LBE163:
 1391              	.LBB166:
 1392              	.LBB138:
 129:source/HvSignalPhasor.h ****   *bOut = *((float *) (&p)) - 1.0f;
 1393              		.loc 7 129 41 view .LVU308
 1394 00a8 07EE903A 		vmov	s15, r3	@ int
 1395              	.LBE138:
 1396              	.LBE166:
 1397              	.LBB167:
 1398              	.LBB168:
  70:source/HvMath.h **** #endif
 1399              		.loc 4 70 9 view .LVU309
 1400 00ac 7168     		ldr	r1, [r6, #4]
 1401              	.LBE168:
 1402              	.LBE167:
 1403              	.LBB173:
 1404              	.LBB174:
 1405 00ae 3368     		ldr	r3, [r6]
 1406              	.LVL108:
  70:source/HvMath.h **** #endif
 1407              		.loc 4 70 9 view .LVU310
 1408              	.LBE174:
 1409              	.LBE173:
 1410              	.LBB178:
 1411              	.LBB139:
 130:source/HvSignalPhasor.h ****   o->phase += o->inc;
 1412              		.loc 7 130 29 view .LVU311
 1413 00b0 77EEC47A 		vsub.f32	s15, s15, s8
 1414              	.LVL109:
 1415              		.loc 7 131 12 view .LVU312
 1416 00b4 D5F88C70 		ldr	r7, [r5, #140]
 1417              	.LBE139:
 1418              	.LBE178:
 1419              	.LBB179:
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s 			page 52


 1420              	.LBB175:
  70:source/HvMath.h **** #endif
 1421              		.loc 4 70 9 view .LVU313
 1422 00b8 2344     		add	r3, r3, r4
 1423              	.LBE175:
 1424              	.LBE179:
 1425              	.LBB180:
 1426              	.LBB169:
 1427 00ba 2144     		add	r1, r1, r4
 1428              	.LBE169:
 1429              	.LBE180:
 1430              	.LBB181:
 1431              	.LBB140:
 1432              		.loc 7 131 12 view .LVU314
 1433 00bc 3A44     		add	r2, r2, r7
 1434              	.LVL110:
 1435              		.loc 7 131 12 view .LVU315
 1436              	.LBE140:
 1437              	.LBE181:
 1438              	.LBB182:
 1439              	.LBB170:
  70:source/HvMath.h **** #endif
 1440              		.loc 4 70 9 view .LVU316
 1441 00be 04F10404 		add	r4, r4, #4
 1442              	.LBE170:
 1443              	.LBE182:
 1444              	.LBB183:
 1445              	.LBB144:
 408:source/HvMath.h **** #endif
 1446              		.loc 4 408 16 view .LVU317
 1447 00c2 77EEE47A 		vsub.f32	s15, s15, s9
 1448              	.LBE144:
 1449              	.LBE183:
 1450              	.LBB184:
 1451              	.LBB141:
 1452              		.loc 7 131 12 view .LVU318
 1453 00c6 C5F88820 		str	r2, [r5, #136]
 1454              	.LVL111:
 1455              		.loc 7 131 12 view .LVU319
 1456              	.LBE141:
 1457              	.LBE184:
 192:source/Heavy_daisiSPI.cpp ****     __hv_sub_f(VIf(Bf0), VIf(Bf1), VOf(Bf1));
 1458              		.loc 3 192 5 is_stmt 1 view .LVU320
 193:source/Heavy_daisiSPI.cpp ****     __hv_abs_f(VIf(Bf1), VOf(Bf1));
 1459              		.loc 3 193 5 view .LVU321
 1460              	.LBB185:
 1461              	.LBI142:
 400:source/HvMath.h **** #if HV_SIMD_AVX
 1462              		.loc 4 400 20 view .LVU322
 1463              	.LBB145:
 408:source/HvMath.h **** #endif
 1464              		.loc 4 408 3 view .LVU323
 408:source/HvMath.h **** #endif
 1465              		.loc 4 408 3 is_stmt 0 view .LVU324
 1466              	.LBE145:
 1467              	.LBE185:
 194:source/Heavy_daisiSPI.cpp ****     __hv_var_k_f(VOf(Bf0), 0.25f, 0.25f, 0.25f, 0.25f, 0.25f, 0.25f, 0.25f, 0.25f);
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s 			page 53


 1468              		.loc 3 194 5 is_stmt 1 view .LVU325
 1469              	.LBB186:
 1470              	.LBI186:
 289:source/HvMath.h **** #if HV_SIMD_AVX
 1471              		.loc 4 289 20 view .LVU326
 1472              	.LBB187:
 297:source/HvMath.h **** #endif
 1473              		.loc 4 297 3 view .LVU327
 297:source/HvMath.h **** #endif
 1474              		.loc 4 297 3 is_stmt 0 view .LVU328
 1475              	.LBE187:
 1476              	.LBE186:
 195:source/Heavy_daisiSPI.cpp ****     __hv_sub_f(VIf(Bf1), VIf(Bf0), VOf(Bf0));
 1477              		.loc 3 195 5 is_stmt 1 view .LVU329
 196:source/Heavy_daisiSPI.cpp ****     __hv_var_k_f(VOf(Bf1), 6.283185307179586f, 6.283185307179586f, 6.283185307179586f, 6.2831853071
 1478              		.loc 3 196 5 view .LVU330
 1479              	.LBB189:
 1480              	.LBI151:
 400:source/HvMath.h **** #if HV_SIMD_AVX
 1481              		.loc 4 400 20 view .LVU331
 1482              	.LBB153:
 408:source/HvMath.h **** #endif
 1483              		.loc 4 408 3 view .LVU332
 408:source/HvMath.h **** #endif
 1484              		.loc 4 408 3 is_stmt 0 view .LVU333
 1485              	.LBE153:
 1486              	.LBE189:
 197:source/Heavy_daisiSPI.cpp ****     __hv_mul_f(VIf(Bf0), VIf(Bf1), VOf(Bf1));
 1487              		.loc 3 197 5 is_stmt 1 view .LVU334
 198:source/Heavy_daisiSPI.cpp ****     __hv_mul_f(VIf(Bf1), VIf(Bf1), VOf(Bf0));
 1488              		.loc 3 198 5 view .LVU335
 1489              	.LBB190:
 1490              	.LBI146:
 413:source/HvMath.h **** #if HV_SIMD_AVX
 1491              		.loc 4 413 20 view .LVU336
 1492              	.LBB148:
 421:source/HvMath.h **** #endif
 1493              		.loc 4 421 3 view .LVU337
 1494              	.LBE148:
 1495              	.LBE190:
 1496              	.LBB191:
 1497              	.LBB188:
 297:source/HvMath.h **** #endif
 1498              		.loc 4 297 11 is_stmt 0 view .LVU338
 1499 00ca F0EEE77A 		vabs.f32	s15, s15
 1500              	.LBE188:
 1501              	.LBE191:
 1502              	.LBB192:
 1503              	.LBB154:
 408:source/HvMath.h **** #endif
 1504              		.loc 4 408 16 view .LVU339
 1505 00ce 77EEE67A 		vsub.f32	s15, s15, s13
 1506              	.LBE154:
 1507              	.LBE192:
 1508              	.LBB193:
 1509              	.LBB149:
 421:source/HvMath.h **** #endif
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s 			page 54


 1510              		.loc 4 421 16 view .LVU340
 1511 00d2 67EE877A 		vmul.f32	s15, s15, s14
 1512              	.LVL112:
 421:source/HvMath.h **** #endif
 1513              		.loc 4 421 16 view .LVU341
 1514              	.LBE149:
 1515              	.LBE193:
 199:source/Heavy_daisiSPI.cpp ****     __hv_mul_f(VIf(Bf1), VIf(Bf0), VOf(Bf2));
 1516              		.loc 3 199 5 is_stmt 1 view .LVU342
 1517              	.LBB194:
 1518              	.LBI194:
 413:source/HvMath.h **** #if HV_SIMD_AVX
 1519              		.loc 4 413 20 view .LVU343
 1520              	.LBB195:
 421:source/HvMath.h **** #endif
 1521              		.loc 4 421 3 view .LVU344
 421:source/HvMath.h **** #endif
 1522              		.loc 4 421 16 is_stmt 0 view .LVU345
 1523 00d6 67EEA76A 		vmul.f32	s13, s15, s15
 1524              	.LVL113:
 421:source/HvMath.h **** #endif
 1525              		.loc 4 421 16 view .LVU346
 1526              	.LBE195:
 1527              	.LBE194:
 200:source/Heavy_daisiSPI.cpp ****     __hv_mul_f(VIf(Bf2), VIf(Bf0), VOf(Bf0));
 1528              		.loc 3 200 5 is_stmt 1 view .LVU347
 1529              	.LBB196:
 1530              	.LBI196:
 413:source/HvMath.h **** #if HV_SIMD_AVX
 1531              		.loc 4 413 20 view .LVU348
 1532              	.LBB197:
 421:source/HvMath.h **** #endif
 1533              		.loc 4 421 3 view .LVU349
 421:source/HvMath.h **** #endif
 1534              		.loc 4 421 16 is_stmt 0 view .LVU350
 1535 00da 26EEA77A 		vmul.f32	s14, s13, s15
 1536              	.LVL114:
 421:source/HvMath.h **** #endif
 1537              		.loc 4 421 16 view .LVU351
 1538              	.LBE197:
 1539              	.LBE196:
 201:source/Heavy_daisiSPI.cpp ****     __hv_var_k_f(VOf(Bf3), 0.007833333333333f, 0.007833333333333f, 0.007833333333333f, 0.0078333333
 1540              		.loc 3 201 5 is_stmt 1 view .LVU352
 1541              	.LBB198:
 1542              	.LBI198:
 413:source/HvMath.h **** #if HV_SIMD_AVX
 1543              		.loc 4 413 20 view .LVU353
 1544              	.LBB199:
 421:source/HvMath.h **** #endif
 1545              		.loc 4 421 3 view .LVU354
 421:source/HvMath.h **** #endif
 1546              		.loc 4 421 3 is_stmt 0 view .LVU355
 1547              	.LBE199:
 1548              	.LBE198:
 202:source/Heavy_daisiSPI.cpp ****     __hv_var_k_f(VOf(Bf4), -0.166666666666667f, -0.166666666666667f, -0.166666666666667f, -0.166666
 1549              		.loc 3 202 5 is_stmt 1 view .LVU356
 203:source/Heavy_daisiSPI.cpp ****     __hv_fma_f(VIf(Bf2), VIf(Bf4), VIf(Bf1), VOf(Bf1));
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s 			page 55


 1550              		.loc 3 203 5 view .LVU357
 204:source/Heavy_daisiSPI.cpp ****     __hv_fma_f(VIf(Bf0), VIf(Bf3), VIf(Bf1), VOf(Bf1));
 1551              		.loc 3 204 5 view .LVU358
 1552              	.LBB201:
 1553              	.LBI155:
 673:source/HvMath.h **** #if HV_SIMD_AVX
 1554              		.loc 4 673 20 view .LVU359
 1555              	.LBB157:
 1556              		.loc 4 694 3 view .LVU360
 1557              		.loc 4 694 11 is_stmt 0 view .LVU361
 1558 00de E7EE057A 		vfma.f32	s15, s14, s10
 1559              	.LVL115:
 1560              		.loc 4 694 11 view .LVU362
 1561              	.LBE157:
 1562              	.LBE201:
 205:source/Heavy_daisiSPI.cpp ****     __hv_add_f(VIf(Bf1), VIf(O1), VOf(O1));
 1563              		.loc 3 205 5 is_stmt 1 view .LVU363
 1564              	.LBB202:
 1565              	.LBI159:
 673:source/HvMath.h **** #if HV_SIMD_AVX
 1566              		.loc 4 673 20 view .LVU364
 1567              	.LBB161:
 1568              		.loc 4 694 3 view .LVU365
 1569              	.LBE161:
 1570              	.LBE202:
 1571              	.LBB203:
 1572              	.LBB200:
 421:source/HvMath.h **** #endif
 1573              		.loc 4 421 16 is_stmt 0 view .LVU366
 1574 00e2 27EE267A 		vmul.f32	s14, s14, s13
 1575              	.LVL116:
 421:source/HvMath.h **** #endif
 1576              		.loc 4 421 16 view .LVU367
 1577              	.LBE200:
 1578              	.LBE203:
 1579              	.LBB204:
 1580              	.LBB162:
 1581              		.loc 4 694 11 view .LVU368
 1582 00e6 E7EE257A 		vfma.f32	s15, s14, s11
 1583              	.LVL117:
 1584              		.loc 4 694 11 view .LVU369
 1585              	.LBE162:
 1586              	.LBE204:
 206:source/Heavy_daisiSPI.cpp ****     __hv_add_f(VIf(Bf1), VIf(O0), VOf(O0));
 1587              		.loc 3 206 5 is_stmt 1 view .LVU370
 1588              	.LBB205:
 1589              	.LBI163:
 372:source/HvMath.h **** #if HV_SIMD_AVX
 1590              		.loc 4 372 20 view .LVU371
 1591              	.LBB165:
 380:source/HvMath.h **** #endif
 1592              		.loc 4 380 3 view .LVU372
 380:source/HvMath.h **** #endif
 1593              		.loc 4 380 16 is_stmt 0 view .LVU373
 1594 00ea 77EE867A 		vadd.f32	s15, s15, s12
 1595              	.LVL118:
 380:source/HvMath.h **** #endif
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s 			page 56


 1596              		.loc 4 380 16 view .LVU374
 1597              	.LBE165:
 1598              	.LBE205:
 207:source/Heavy_daisiSPI.cpp **** 
 1599              		.loc 3 207 5 is_stmt 1 view .LVU375
 207:source/Heavy_daisiSPI.cpp **** 
 1600              		.loc 3 207 5 is_stmt 0 view .LVU376
 1601              	.LBE213:
 1602              	.LBE219:
 380:source/HvMath.h **** #endif
 1603              		.loc 4 380 3 is_stmt 1 view .LVU377
 1604              	.LBB220:
 1605              	.LBB214:
 210:source/Heavy_daisiSPI.cpp ****     __hv_store_f(outputBuffers[1]+n, VIf(O1));
 1606              		.loc 3 210 5 view .LVU378
 1607              	.LBB206:
 1608              	.LBI173:
  62:source/HvMath.h **** #if HV_SIMD_AVX
 1609              		.loc 4 62 20 view .LVU379
 1610              	.LBB176:
  70:source/HvMath.h **** #endif
 1611              		.loc 4 70 3 view .LVU380
  70:source/HvMath.h **** #endif
 1612              		.loc 4 70 3 is_stmt 0 view .LVU381
 1613              	.LBE176:
 1614              	.LBE206:
 211:source/Heavy_daisiSPI.cpp ****   }
 1615              		.loc 3 211 5 is_stmt 1 view .LVU382
 1616              	.LBB207:
 1617              	.LBI167:
  62:source/HvMath.h **** #if HV_SIMD_AVX
 1618              		.loc 4 62 20 view .LVU383
 1619              	.LBB171:
  70:source/HvMath.h **** #endif
 1620              		.loc 4 70 3 view .LVU384
  70:source/HvMath.h **** #endif
 1621              		.loc 4 70 3 is_stmt 0 view .LVU385
 1622              	.LBE171:
 1623              	.LBE207:
 1624              	.LBE214:
 174:source/Heavy_daisiSPI.cpp **** 
 1625              		.loc 3 174 3 is_stmt 1 view .LVU386
 174:source/Heavy_daisiSPI.cpp **** 
 1626              		.loc 3 174 21 view .LVU387
 1627              	.LBB215:
 1628              	.LBB208:
 1629              	.LBB177:
  70:source/HvMath.h **** #endif
 1630              		.loc 4 70 9 is_stmt 0 view .LVU388
 1631 00ee C3ED007A 		vstr.32	s15, [r3]
 1632              	.LBE177:
 1633              	.LBE208:
 1634              	.LBB209:
 1635              	.LBB172:
 1636 00f2 C1ED007A 		vstr.32	s15, [r1]
 1637              	.LBE172:
 1638              	.LBE209:
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s 			page 57


 1639              	.LBE215:
 174:source/Heavy_daisiSPI.cpp **** 
 1640              		.loc 3 174 21 view .LVU389
 1641 00f6 B1D1     		bne	.L76
 1642              	.LBE220:
 214:source/Heavy_daisiSPI.cpp **** 
 1643              		.loc 3 214 3 is_stmt 1 view .LVU390
 217:source/Heavy_daisiSPI.cpp **** 
 1644              		.loc 3 217 1 is_stmt 0 view .LVU391
 1645 00f8 5046     		mov	r0, r10
 214:source/Heavy_daisiSPI.cpp **** 
 1646              		.loc 3 214 23 view .LVU392
 1647 00fa C5F81090 		str	r9, [r5, #16]
 216:source/Heavy_daisiSPI.cpp **** }
 1648              		.loc 3 216 3 is_stmt 1 view .LVU393
 1649              	.LVL119:
 217:source/Heavy_daisiSPI.cpp **** 
 1650              		.loc 3 217 1 is_stmt 0 view .LVU394
 1651 00fe 02B0     		add	sp, sp, #8
 1652              		.cfi_remember_state
 1653              		.cfi_def_cfa_offset 32
 1654              		@ sp needed
 1655 0100 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 1656              	.LVL120:
 1657              	.L78:
 1658              		.cfi_restore_state
 173:source/Heavy_daisiSPI.cpp ****   for (int n = 0; n < n4; n += HV_N_SIMD) {
 1659              		.loc 3 173 15 view .LVU395
 1660 0104 C146     		mov	r9, r8
 214:source/Heavy_daisiSPI.cpp **** 
 1661              		.loc 3 214 3 is_stmt 1 view .LVU396
 217:source/Heavy_daisiSPI.cpp **** 
 1662              		.loc 3 217 1 is_stmt 0 view .LVU397
 1663 0106 5046     		mov	r0, r10
 214:source/Heavy_daisiSPI.cpp **** 
 1664              		.loc 3 214 23 view .LVU398
 1665 0108 C5F81090 		str	r9, [r5, #16]
 216:source/Heavy_daisiSPI.cpp **** }
 1666              		.loc 3 216 3 is_stmt 1 view .LVU399
 1667              	.LVL121:
 217:source/Heavy_daisiSPI.cpp **** 
 1668              		.loc 3 217 1 is_stmt 0 view .LVU400
 1669 010c 02B0     		add	sp, sp, #8
 1670              		.cfi_remember_state
 1671              		.cfi_def_cfa_offset 32
 1672              		@ sp needed
 1673 010e BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 1674              	.LVL122:
 1675              	.L82:
 1676              		.cfi_restore_state
 1677              	.LBB221:
 158:source/Heavy_daisiSPI.cpp ****     scheduleMessageForReceiver(p->receiverHash, &p->msg);
 1678              		.loc 3 158 5 discriminator 1 view .LVU401
 1679 0112 084B     		ldr	r3, .L83+20
 1680 0114 9E21     		movs	r1, #158
 1681 0116 084A     		ldr	r2, .L83+24
 1682 0118 0848     		ldr	r0, .L83+28
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s 			page 58


 1683              	.LVL123:
 158:source/Heavy_daisiSPI.cpp ****     scheduleMessageForReceiver(p->receiverHash, &p->msg);
 1684              		.loc 3 158 5 discriminator 1 view .LVU402
 1685 011a FFF7FEFF 		bl	__assert_func
 1686              	.LVL124:
 1687              	.L84:
 1688 011e 00BF     		.align	2
 1689              	.L83:
 1690 0120 00000000 		.word	_ZN14Heavy_daisiSPI26scheduleMessageForReceiverEmP9HvMessage
 1691 0124 DB0FC940 		.word	1086918619
 1692 0128 ABAA2ABE 		.word	-1104500053
 1693 012c 6257003C 		.word	1006655330
 1694 0130 00000000 		.word	0
 1695 0134 00000000 		.word	.LC5
 1696 0138 28000000 		.word	.LC6
 1697 013c 58000000 		.word	.LC4
 1698              	.LBE221:
 1699              		.cfi_endproc
 1700              	.LFE1011:
 1702              		.section	.text._ZN14Heavy_daisiSPIC2Ediii,"ax",%progbits
 1703              		.align	1
 1704              		.p2align 2,,3
 1705              		.global	_ZN14Heavy_daisiSPIC2Ediii
 1706              		.syntax unified
 1707              		.thumb
 1708              		.thumb_func
 1710              	_ZN14Heavy_daisiSPIC2Ediii:
 1711              	.LVL125:
 1712              	.LFB994:
  64:source/Heavy_daisiSPI.cpp ****     : HeavyContext(sampleRate, poolKb, inQueueKb, outQueueKb) {
 1713              		.loc 3 64 1 is_stmt 1 view -0
 1714              		.cfi_startproc
 1715              		@ args = 0, pretend = 0, frame = 8
 1716              		@ frame_needed = 0, uses_anonymous_args = 0
  64:source/Heavy_daisiSPI.cpp ****     : HeavyContext(sampleRate, poolKb, inQueueKb, outQueueKb) {
 1717              		.loc 3 64 1 is_stmt 0 view .LVU404
 1718 0000 10B5     		push	{r4, lr}
 1719              		.cfi_def_cfa_offset 8
 1720              		.cfi_offset 4, -8
 1721              		.cfi_offset 14, -4
 1722 0002 0446     		mov	r4, r0
 1723 0004 82B0     		sub	sp, sp, #8
 1724              		.cfi_def_cfa_offset 16
  64:source/Heavy_daisiSPI.cpp ****     : HeavyContext(sampleRate, poolKb, inQueueKb, outQueueKb) {
 1725              		.loc 3 64 1 view .LVU405
 1726 0006 8DED000B 		vstr.64	d0, [sp]	@ int
 1727              	.LBB222:
  65:source/Heavy_daisiSPI.cpp ****   numBytes += sPhasor_k_init(&sPhasor_RBvhg4gc, 440.0f, sampleRate);
 1728              		.loc 3 65 61 view .LVU406
 1729 000a FFF7FEFF 		bl	_ZN12HeavyContextC2Ediii
 1730              	.LVL126:
  65:source/Heavy_daisiSPI.cpp ****   numBytes += sPhasor_k_init(&sPhasor_RBvhg4gc, 440.0f, sampleRate);
 1731              		.loc 3 65 61 view .LVU407
 1732 000e 2046     		mov	r0, r4
 1733 0010 114B     		ldr	r3, .L87
  66:source/Heavy_daisiSPI.cpp ****   numBytes += cVar_init_f(&cVar_wlVKX9gk, 0.0f);
 1734              		.loc 3 66 29 view .LVU408
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s 			page 59


 1735 0012 9FED120A 		vldr.32	s0, .L87+4
  65:source/Heavy_daisiSPI.cpp ****   numBytes += sPhasor_k_init(&sPhasor_RBvhg4gc, 440.0f, sampleRate);
 1736              		.loc 3 65 61 view .LVU409
 1737 0016 40F8883B 		str	r3, [r0], #136
  66:source/Heavy_daisiSPI.cpp ****   numBytes += cVar_init_f(&cVar_wlVKX9gk, 0.0f);
 1738              		.loc 3 66 3 is_stmt 1 view .LVU410
  66:source/Heavy_daisiSPI.cpp ****   numBytes += cVar_init_f(&cVar_wlVKX9gk, 0.0f);
 1739              		.loc 3 66 29 is_stmt 0 view .LVU411
 1740 001a 9DED001B 		vldr.64	d1, [sp]	@ int
 1741 001e FFF7FEFF 		bl	sPhasor_k_init
 1742              	.LVL127:
  66:source/Heavy_daisiSPI.cpp ****   numBytes += cVar_init_f(&cVar_wlVKX9gk, 0.0f);
 1743              		.loc 3 66 12 view .LVU412
 1744 0022 6369     		ldr	r3, [r4, #20]
  66:source/Heavy_daisiSPI.cpp ****   numBytes += cVar_init_f(&cVar_wlVKX9gk, 0.0f);
 1745              		.loc 3 66 29 view .LVU413
 1746 0024 0246     		mov	r2, r0
  67:source/Heavy_daisiSPI.cpp ****   numBytes += cBinop_init(&cBinop_BDSEPqyt, 1.0f); // __pow
 1747              		.loc 3 67 26 view .LVU414
 1748 0026 9FED0E0A 		vldr.32	s0, .L87+8
 1749 002a 04F19400 		add	r0, r4, #148
  66:source/Heavy_daisiSPI.cpp ****   numBytes += cVar_init_f(&cVar_wlVKX9gk, 0.0f);
 1750              		.loc 3 66 12 view .LVU415
 1751 002e 1344     		add	r3, r3, r2
 1752 0030 6361     		str	r3, [r4, #20]
  67:source/Heavy_daisiSPI.cpp ****   numBytes += cBinop_init(&cBinop_BDSEPqyt, 1.0f); // __pow
 1753              		.loc 3 67 3 is_stmt 1 view .LVU416
  67:source/Heavy_daisiSPI.cpp ****   numBytes += cBinop_init(&cBinop_BDSEPqyt, 1.0f); // __pow
 1754              		.loc 3 67 26 is_stmt 0 view .LVU417
 1755 0032 FFF7FEFF 		bl	cVar_init_f
 1756              	.LVL128:
  67:source/Heavy_daisiSPI.cpp ****   numBytes += cBinop_init(&cBinop_BDSEPqyt, 1.0f); // __pow
 1757              		.loc 3 67 12 view .LVU418
 1758 0036 6369     		ldr	r3, [r4, #20]
  67:source/Heavy_daisiSPI.cpp ****   numBytes += cBinop_init(&cBinop_BDSEPqyt, 1.0f); // __pow
 1759              		.loc 3 67 26 view .LVU419
 1760 0038 0246     		mov	r2, r0
  68:source/Heavy_daisiSPI.cpp ****   
 1761              		.loc 3 68 26 view .LVU420
 1762 003a B7EE000A 		vmov.f32	s0, #1.0e+0
 1763 003e 04F1A800 		add	r0, r4, #168
  67:source/Heavy_daisiSPI.cpp ****   numBytes += cBinop_init(&cBinop_BDSEPqyt, 1.0f); // __pow
 1764              		.loc 3 67 12 view .LVU421
 1765 0042 1344     		add	r3, r3, r2
 1766 0044 6361     		str	r3, [r4, #20]
  68:source/Heavy_daisiSPI.cpp ****   
 1767              		.loc 3 68 3 is_stmt 1 view .LVU422
  68:source/Heavy_daisiSPI.cpp ****   
 1768              		.loc 3 68 26 is_stmt 0 view .LVU423
 1769 0046 FFF7FEFF 		bl	cBinop_init
 1770              	.LVL129:
  68:source/Heavy_daisiSPI.cpp ****   
 1771              		.loc 3 68 12 view .LVU424
 1772 004a 6369     		ldr	r3, [r4, #20]
  68:source/Heavy_daisiSPI.cpp ****   
 1773              		.loc 3 68 26 view .LVU425
 1774 004c 0246     		mov	r2, r0
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s 			page 60


 1775              	.LBE222:
  70:source/Heavy_daisiSPI.cpp **** 
 1776              		.loc 3 70 1 view .LVU426
 1777 004e 2046     		mov	r0, r4
 1778              	.LBB223:
  68:source/Heavy_daisiSPI.cpp ****   
 1779              		.loc 3 68 12 view .LVU427
 1780 0050 1344     		add	r3, r3, r2
 1781 0052 6361     		str	r3, [r4, #20]
 1782              	.LBE223:
  70:source/Heavy_daisiSPI.cpp **** 
 1783              		.loc 3 70 1 view .LVU428
 1784 0054 02B0     		add	sp, sp, #8
 1785              		.cfi_def_cfa_offset 8
 1786              		@ sp needed
 1787 0056 10BD     		pop	{r4, pc}
 1788              	.LVL130:
 1789              	.L88:
  70:source/Heavy_daisiSPI.cpp **** 
 1790              		.loc 3 70 1 view .LVU429
 1791              		.align	2
 1792              	.L87:
 1793 0058 08000000 		.word	.LANCHOR0+8
 1794 005c 0000DC43 		.word	1138491392
 1795 0060 00000000 		.word	0
 1796              		.cfi_endproc
 1797              	.LFE994:
 1799              		.global	_ZN14Heavy_daisiSPIC1Ediii
 1800              		.thumb_set _ZN14Heavy_daisiSPIC1Ediii,_ZN14Heavy_daisiSPIC2Ediii
 1801              		.section	.text.hv_daisiSPI_new,"ax",%progbits
 1802              		.align	1
 1803              		.p2align 2,,3
 1804              		.global	hv_daisiSPI_new
 1805              		.syntax unified
 1806              		.thumb
 1807              		.thumb_func
 1809              	hv_daisiSPI_new:
 1810              	.LVL131:
 1811              	.LFB991:
  44:source/Heavy_daisiSPI.cpp ****     return new Heavy_daisiSPI(sampleRate);
 1812              		.loc 3 44 71 is_stmt 1 view -0
 1813              		.cfi_startproc
 1814              		@ args = 0, pretend = 0, frame = 8
 1815              		@ frame_needed = 0, uses_anonymous_args = 0
  45:source/Heavy_daisiSPI.cpp ****   }
 1816              		.loc 3 45 5 view .LVU431
  44:source/Heavy_daisiSPI.cpp ****     return new Heavy_daisiSPI(sampleRate);
 1817              		.loc 3 44 71 is_stmt 0 view .LVU432
 1818 0000 10B5     		push	{r4, lr}
 1819              		.cfi_def_cfa_offset 8
 1820              		.cfi_offset 4, -8
 1821              		.cfi_offset 14, -4
 1822 0002 82B0     		sub	sp, sp, #8
 1823              		.cfi_def_cfa_offset 16
  45:source/Heavy_daisiSPI.cpp ****   }
 1824              		.loc 3 45 41 view .LVU433
 1825 0004 B820     		movs	r0, #184
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s 			page 61


  44:source/Heavy_daisiSPI.cpp ****     return new Heavy_daisiSPI(sampleRate);
 1826              		.loc 3 44 71 view .LVU434
 1827 0006 8DED000B 		vstr.64	d0, [sp]	@ int
  45:source/Heavy_daisiSPI.cpp ****   }
 1828              		.loc 3 45 41 view .LVU435
 1829 000a FFF7FEFF 		bl	_Znwj
 1830              	.LVL132:
  45:source/Heavy_daisiSPI.cpp ****   }
 1831              		.loc 3 45 41 view .LVU436
 1832 000e 0446     		mov	r4, r0
 1833 0010 0023     		movs	r3, #0
 1834 0012 0222     		movs	r2, #2
 1835 0014 0A21     		movs	r1, #10
 1836 0016 9DED000B 		vldr.64	d0, [sp]	@ int
 1837 001a FFF7FEFF 		bl	_ZN14Heavy_daisiSPIC1Ediii
 1838              	.LVL133:
  46:source/Heavy_daisiSPI.cpp **** 
 1839              		.loc 3 46 3 view .LVU437
 1840 001e 2046     		mov	r0, r4
 1841 0020 02B0     		add	sp, sp, #8
 1842              		.cfi_def_cfa_offset 8
 1843              		@ sp needed
 1844 0022 10BD     		pop	{r4, pc}
 1845              		.cfi_endproc
 1846              	.LFE991:
 1848              		.section	.text.hv_daisiSPI_new_with_options,"ax",%progbits
 1849              		.align	1
 1850              		.p2align 2,,3
 1851              		.global	hv_daisiSPI_new_with_options
 1852              		.syntax unified
 1853              		.thumb
 1854              		.thumb_func
 1856              	hv_daisiSPI_new_with_options:
 1857              	.LVL134:
 1858              	.LFB992:
  49:source/Heavy_daisiSPI.cpp ****     return new Heavy_daisiSPI(sampleRate, poolKb, inQueueKb, outQueueKb);
 1859              		.loc 3 49 50 is_stmt 1 view -0
 1860              		.cfi_startproc
 1861              		@ args = 0, pretend = 0, frame = 16
 1862              		@ frame_needed = 0, uses_anonymous_args = 0
  50:source/Heavy_daisiSPI.cpp ****   }
 1863              		.loc 3 50 5 view .LVU439
  49:source/Heavy_daisiSPI.cpp ****     return new Heavy_daisiSPI(sampleRate, poolKb, inQueueKb, outQueueKb);
 1864              		.loc 3 49 50 is_stmt 0 view .LVU440
 1865 0000 30B5     		push	{r4, r5, lr}
 1866              		.cfi_def_cfa_offset 12
 1867              		.cfi_offset 4, -12
 1868              		.cfi_offset 5, -8
 1869              		.cfi_offset 14, -4
 1870 0002 85B0     		sub	sp, sp, #20
 1871              		.cfi_def_cfa_offset 32
  49:source/Heavy_daisiSPI.cpp ****     return new Heavy_daisiSPI(sampleRate, poolKb, inQueueKb, outQueueKb);
 1872              		.loc 3 49 50 view .LVU441
 1873 0004 0D46     		mov	r5, r1
 1874 0006 0290     		str	r0, [sp, #8]
  50:source/Heavy_daisiSPI.cpp ****   }
 1875              		.loc 3 50 72 view .LVU442
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s 			page 62


 1876 0008 B820     		movs	r0, #184
 1877              	.LVL135:
  49:source/Heavy_daisiSPI.cpp ****     return new Heavy_daisiSPI(sampleRate, poolKb, inQueueKb, outQueueKb);
 1878              		.loc 3 49 50 view .LVU443
 1879 000a 0392     		str	r2, [sp, #12]
 1880 000c 8DED000B 		vstr.64	d0, [sp]	@ int
  50:source/Heavy_daisiSPI.cpp ****   }
 1881              		.loc 3 50 72 view .LVU444
 1882 0010 FFF7FEFF 		bl	_Znwj
 1883              	.LVL136:
  50:source/Heavy_daisiSPI.cpp ****   }
 1884              		.loc 3 50 72 view .LVU445
 1885 0014 0446     		mov	r4, r0
 1886 0016 039B     		ldr	r3, [sp, #12]
 1887 0018 2A46     		mov	r2, r5
 1888 001a 0299     		ldr	r1, [sp, #8]
 1889 001c 9DED000B 		vldr.64	d0, [sp]	@ int
 1890 0020 FFF7FEFF 		bl	_ZN14Heavy_daisiSPIC1Ediii
 1891              	.LVL137:
  51:source/Heavy_daisiSPI.cpp **** } // extern "C"
 1892              		.loc 3 51 3 view .LVU446
 1893 0024 2046     		mov	r0, r4
 1894 0026 05B0     		add	sp, sp, #20
 1895              		.cfi_def_cfa_offset 12
 1896              		@ sp needed
 1897 0028 30BD     		pop	{r4, r5, pc}
  51:source/Heavy_daisiSPI.cpp **** } // extern "C"
 1898              		.loc 3 51 3 view .LVU447
 1899              		.cfi_endproc
 1900              	.LFE992:
 1902 002a 00BF     		.section	.text._ZN14Heavy_daisiSPI25cVar_wlVKX9gk_sendMessageEP21HeavyContextInterfaceiPK9HvMessag
 1903              		.align	1
 1904              		.p2align 2,,3
 1905              		.global	_ZN14Heavy_daisiSPI25cVar_wlVKX9gk_sendMessageEP21HeavyContextInterfaceiPK9HvMessage
 1906              		.syntax unified
 1907              		.thumb
 1908              		.thumb_func
 1910              	_ZN14Heavy_daisiSPI25cVar_wlVKX9gk_sendMessageEP21HeavyContextInterfaceiPK9HvMessage:
 1911              	.LVL138:
 1912              	.LFB1003:
 110:source/Heavy_daisiSPI.cpp ****   cBinop_k_onMessage(_c, NULL, HV_BINOP_MULTIPLY, 2.0f, 0, m, &cBinop_sEn9bNjH_sendMessage);
 1913              		.loc 3 110 106 is_stmt 1 view -0
 1914              		.cfi_startproc
 1915              		@ args = 0, pretend = 0, frame = 0
 1916              		@ frame_needed = 0, uses_anonymous_args = 0
 111:source/Heavy_daisiSPI.cpp **** }
 1917              		.loc 3 111 3 view .LVU449
 110:source/Heavy_daisiSPI.cpp ****   cBinop_k_onMessage(_c, NULL, HV_BINOP_MULTIPLY, 2.0f, 0, m, &cBinop_sEn9bNjH_sendMessage);
 1918              		.loc 3 110 106 is_stmt 0 view .LVU450
 1919 0000 10B5     		push	{r4, lr}
 1920              		.cfi_def_cfa_offset 8
 1921              		.cfi_offset 4, -8
 1922              		.cfi_offset 14, -4
 1923 0002 1146     		mov	r1, r2
 1924              	.LVL139:
 110:source/Heavy_daisiSPI.cpp ****   cBinop_k_onMessage(_c, NULL, HV_BINOP_MULTIPLY, 2.0f, 0, m, &cBinop_sEn9bNjH_sendMessage);
 1925              		.loc 3 110 106 view .LVU451
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s 			page 63


 1926 0004 82B0     		sub	sp, sp, #8
 1927              		.cfi_def_cfa_offset 16
 111:source/Heavy_daisiSPI.cpp **** }
 1928              		.loc 3 111 21 view .LVU452
 1929 0006 0023     		movs	r3, #0
 1930 0008 054C     		ldr	r4, .L95
 1931 000a B0EE000A 		vmov.f32	s0, #2.0e+0
 1932 000e 0222     		movs	r2, #2
 1933              	.LVL140:
 111:source/Heavy_daisiSPI.cpp **** }
 1934              		.loc 3 111 21 view .LVU453
 1935 0010 CDE90014 		strd	r1, r4, [sp]
 1936 0014 1946     		mov	r1, r3
 1937              	.LVL141:
 111:source/Heavy_daisiSPI.cpp **** }
 1938              		.loc 3 111 21 view .LVU454
 1939 0016 FFF7FEFF 		bl	cBinop_k_onMessage
 1940              	.LVL142:
 112:source/Heavy_daisiSPI.cpp **** 
 1941              		.loc 3 112 1 view .LVU455
 1942 001a 02B0     		add	sp, sp, #8
 1943              		.cfi_def_cfa_offset 8
 1944              		@ sp needed
 1945 001c 10BD     		pop	{r4, pc}
 1946              	.L96:
 1947 001e 00BF     		.align	2
 1948              	.L95:
 1949 0020 00000000 		.word	_ZN14Heavy_daisiSPI27cBinop_sEn9bNjH_sendMessageEP21HeavyContextInterfaceiPK9HvMessage
 1950              		.cfi_endproc
 1951              	.LFE1003:
 1953              		.section	.rodata._ZN14Heavy_daisiSPI25cMsg_syaTLOhI_sendMessageEP21HeavyContextInterfaceiPK9HvMess
 1954              		.align	2
 1955              	.LC7:
 1956 0000 696E6465 		.ascii	"index < msg_getNumElements(m)\000"
 1956      78203C20 
 1956      6D73675F 
 1956      6765744E 
 1956      756D456C 
 1957 001e 0000     		.align	2
 1958              	.LC8:
 1959 0020 766F6964 		.ascii	"void msg_setFloat(HvMessage*, int, float)\000"
 1959      206D7367 
 1959      5F736574 
 1959      466C6F61 
 1959      74284876 
 1960 004a 0000     		.align	2
 1961              	.LC9:
 1962 004c 736F7572 		.ascii	"source/HvMessage.h\000"
 1962      63652F48 
 1962      764D6573 
 1962      73616765 
 1962      2E6800
 1963              		.section	.text._ZN14Heavy_daisiSPI25cMsg_syaTLOhI_sendMessageEP21HeavyContextInterfaceiPK9HvMessag
 1964              		.align	1
 1965              		.p2align 2,,3
 1966              		.global	_ZN14Heavy_daisiSPI25cMsg_syaTLOhI_sendMessageEP21HeavyContextInterfaceiPK9HvMessage
 1967              		.syntax unified
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s 			page 64


 1968              		.thumb
 1969              		.thumb_func
 1971              	_ZN14Heavy_daisiSPI25cMsg_syaTLOhI_sendMessageEP21HeavyContextInterfaceiPK9HvMessage:
 1972              	.LVL143:
 1973              	.LFB1008:
 131:source/Heavy_daisiSPI.cpp ****   HvMessage *m = nullptr;
 1974              		.loc 3 131 112 is_stmt 1 view -0
 1975              		.cfi_startproc
 1976              		@ args = 0, pretend = 0, frame = 0
 1977              		@ frame_needed = 1, uses_anonymous_args = 0
 132:source/Heavy_daisiSPI.cpp ****   m = HV_MESSAGE_ON_STACK(1);
 1978              		.loc 3 132 3 view .LVU457
 133:source/Heavy_daisiSPI.cpp ****   msg_init(m, 1, msg_getTimestamp(n));
 1979              		.loc 3 133 3 view .LVU458
  58:source/HvMessage.h ****   return sizeof(HvMessage) + ((numElements-1) * sizeof(Element));
 1980              		.loc 6 58 3 view .LVU459
  59:source/HvMessage.h **** }
 1981              		.loc 6 59 3 view .LVU460
 131:source/Heavy_daisiSPI.cpp ****   HvMessage *m = nullptr;
 1982              		.loc 3 131 112 is_stmt 0 view .LVU461
 1983 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1984              		.cfi_def_cfa_offset 20
 1985              		.cfi_offset 4, -20
 1986              		.cfi_offset 5, -16
 1987              		.cfi_offset 6, -12
 1988              		.cfi_offset 7, -8
 1989              		.cfi_offset 14, -4
 1990 0002 83B0     		sub	sp, sp, #12
 1991              		.cfi_def_cfa_offset 32
 134:source/Heavy_daisiSPI.cpp ****   msg_setFloat(m, 0, 2.0f);
 1992              		.loc 3 134 11 view .LVU462
 1993 0004 0121     		movs	r1, #1
 1994              	.LVL144:
 131:source/Heavy_daisiSPI.cpp ****   HvMessage *m = nullptr;
 1995              		.loc 3 131 112 view .LVU463
 1996 0006 0546     		mov	r5, r0
 1997 0008 02AF     		add	r7, sp, #8
 1998              		.cfi_def_cfa 7, 24
 133:source/Heavy_daisiSPI.cpp ****   msg_init(m, 1, msg_getTimestamp(n));
 1999              		.loc 3 133 7 view .LVU464
 2000 000a 84B0     		sub	sp, sp, #16
 134:source/Heavy_daisiSPI.cpp ****   msg_setFloat(m, 0, 2.0f);
 2001              		.loc 3 134 11 view .LVU465
 2002 000c 1268     		ldr	r2, [r2]
 2003              	.LVL145:
 133:source/Heavy_daisiSPI.cpp ****   msg_init(m, 1, msg_getTimestamp(n));
 2004              		.loc 3 133 7 view .LVU466
 2005 000e 02AC     		add	r4, sp, #8
 2006              	.LVL146:
 134:source/Heavy_daisiSPI.cpp ****   msg_setFloat(m, 0, 2.0f);
 2007              		.loc 3 134 3 is_stmt 1 view .LVU467
 2008              	.LBB230:
 2009              	.LBI230:
  82:source/HvMessage.h ****   return m->timestamp;
 2010              		.loc 6 82 27 view .LVU468
 2011              	.LBB231:
 2012              		.loc 6 83 3 view .LVU469
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s 			page 65


 2013              	.LBE231:
 2014              	.LBE230:
 134:source/Heavy_daisiSPI.cpp ****   msg_setFloat(m, 0, 2.0f);
 2015              		.loc 3 134 11 is_stmt 0 view .LVU470
 2016 0010 2046     		mov	r0, r4
 2017              	.LVL147:
 134:source/Heavy_daisiSPI.cpp ****   msg_setFloat(m, 0, 2.0f);
 2018              		.loc 3 134 11 view .LVU471
 2019 0012 FFF7FEFF 		bl	msg_init
 2020              	.LVL148:
 135:source/Heavy_daisiSPI.cpp ****   cBinop_onMessage(_c, &Context(_c)->cBinop_BDSEPqyt, HV_BINOP_POW, 0, m, &cBinop_BDSEPqyt_sendMess
 2021              		.loc 3 135 3 is_stmt 1 view .LVU472
 2022              	.LBB232:
 2023              	.LBI232:
  84:source/HvMessage.h **** }
  85:source/HvMessage.h **** 
  86:source/HvMessage.h **** static inline void msg_setTimestamp(HvMessage *m, hv_uint32_t timestamp) {
  87:source/HvMessage.h ****   m->timestamp = timestamp;
  88:source/HvMessage.h **** }
  89:source/HvMessage.h **** 
  90:source/HvMessage.h **** static inline int msg_getNumElements(const HvMessage *m) {
  91:source/HvMessage.h ****   return (int) m->numElements;
  92:source/HvMessage.h **** }
  93:source/HvMessage.h **** 
  94:source/HvMessage.h **** /** Returns the total number of bytes this message consumes in memory. */
  95:source/HvMessage.h **** static inline hv_uint32_t msg_getSize(const HvMessage *m) {
  96:source/HvMessage.h ****   return m->numBytes;
  97:source/HvMessage.h **** }
  98:source/HvMessage.h **** 
  99:source/HvMessage.h **** static inline ElementType msg_getType(const HvMessage *m, int index) {
 100:source/HvMessage.h ****   hv_assert(index < msg_getNumElements(m)); // invalid index
 101:source/HvMessage.h ****   return (&(m->elem)+index)->type;
 102:source/HvMessage.h **** }
 103:source/HvMessage.h **** 
 104:source/HvMessage.h **** static inline void msg_setBang(HvMessage *m, int index) {
 105:source/HvMessage.h ****   hv_assert(index < msg_getNumElements(m)); // invalid index
 106:source/HvMessage.h ****   (&(m->elem)+index)->type = HV_MSG_BANG;
 107:source/HvMessage.h ****   (&(m->elem)+index)->data.s = NULL;
 108:source/HvMessage.h **** }
 109:source/HvMessage.h **** 
 110:source/HvMessage.h **** static inline bool msg_isBang(const HvMessage *m, int index) {
 111:source/HvMessage.h ****   return (index < msg_getNumElements(m)) ? (msg_getType(m,index) == HV_MSG_BANG) : false;
 112:source/HvMessage.h **** }
 113:source/HvMessage.h **** 
 114:source/HvMessage.h **** static inline void msg_setFloat(HvMessage *m, int index, float f) {
 2024              		.loc 6 114 20 view .LVU473
 2025              	.LBB233:
 115:source/HvMessage.h ****   hv_assert(index < msg_getNumElements(m)); // invalid index
 2026              		.loc 6 115 3 view .LVU474
 2027              	.LBB234:
 2028              	.LBI234:
  90:source/HvMessage.h ****   return (int) m->numElements;
 2029              		.loc 6 90 19 view .LVU475
 2030              	.LBB235:
  91:source/HvMessage.h **** }
 2031              		.loc 6 91 3 view .LVU476
  91:source/HvMessage.h **** }
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s 			page 66


 2032              		.loc 6 91 3 is_stmt 0 view .LVU477
 2033              	.LBE235:
 2034              	.LBE234:
 2035              		.loc 6 115 3 view .LVU478
 2036 0016 A388     		ldrh	r3, [r4, #4]
 2037 0018 8BB1     		cbz	r3, .L100
 116:source/HvMessage.h ****   (&(m->elem)+index)->type = HV_MSG_FLOAT;
 2038              		.loc 6 116 3 is_stmt 1 view .LVU479
 117:source/HvMessage.h ****   (&(m->elem)+index)->data.f = f;
 2039              		.loc 6 117 30 is_stmt 0 view .LVU480
 2040 001a 4FF08042 		mov	r2, #1073741824
 116:source/HvMessage.h ****   (&(m->elem)+index)->type = HV_MSG_FLOAT;
 2041              		.loc 6 116 28 view .LVU481
 2042 001e 0121     		movs	r1, #1
 2043              	.LBE233:
 2044              	.LBE232:
 136:source/Heavy_daisiSPI.cpp **** }
 2045              		.loc 3 136 19 view .LVU482
 2046 0020 0A4E     		ldr	r6, .L101
 2047 0022 0023     		movs	r3, #0
 2048              	.LBB239:
 2049              	.LBB236:
 116:source/HvMessage.h ****   (&(m->elem)+index)->type = HV_MSG_FLOAT;
 2050              		.loc 6 116 28 view .LVU483
 2051 0024 2172     		strb	r1, [r4, #8]
 2052              		.loc 6 117 3 is_stmt 1 view .LVU484
 2053              	.LBE236:
 2054              	.LBE239:
 136:source/Heavy_daisiSPI.cpp **** }
 2055              		.loc 3 136 19 is_stmt 0 view .LVU485
 2056 0026 2846     		mov	r0, r5
 2057              	.LBB240:
 2058              	.LBB237:
 2059              		.loc 6 117 30 view .LVU486
 2060 0028 E260     		str	r2, [r4, #12]	@ float
 2061              	.LVL149:
 2062              		.loc 6 117 30 view .LVU487
 2063              	.LBE237:
 2064              	.LBE240:
 136:source/Heavy_daisiSPI.cpp **** }
 2065              		.loc 3 136 3 is_stmt 1 view .LVU488
 136:source/Heavy_daisiSPI.cpp **** }
 2066              		.loc 3 136 19 is_stmt 0 view .LVU489
 2067 002a 05F1A801 		add	r1, r5, #168
 2068 002e 1622     		movs	r2, #22
 2069 0030 CDE90046 		strd	r4, r6, [sp]
 2070 0034 FFF7FEFF 		bl	cBinop_onMessage
 2071              	.LVL150:
 137:source/Heavy_daisiSPI.cpp **** 
 2072              		.loc 3 137 1 view .LVU490
 2073 0038 0437     		adds	r7, r7, #4
 2074              		.cfi_remember_state
 2075              		.cfi_def_cfa_offset 20
 2076 003a BD46     		mov	sp, r7
 2077              		.cfi_def_cfa_register 13
 2078              		@ sp needed
 2079 003c F0BD     		pop	{r4, r5, r6, r7, pc}
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s 			page 67


 2080              	.LVL151:
 2081              	.L100:
 2082              		.cfi_restore_state
 2083              	.LBB241:
 2084              	.LBB238:
 115:source/HvMessage.h ****   (&(m->elem)+index)->type = HV_MSG_FLOAT;
 2085              		.loc 6 115 3 view .LVU491
 2086 003e 044B     		ldr	r3, .L101+4
 2087 0040 7321     		movs	r1, #115
 2088 0042 044A     		ldr	r2, .L101+8
 2089 0044 0448     		ldr	r0, .L101+12
 2090 0046 FFF7FEFF 		bl	__assert_func
 2091              	.LVL152:
 2092              	.L102:
 2093 004a 00BF     		.align	2
 2094              	.L101:
 2095 004c 00000000 		.word	_ZN14Heavy_daisiSPI27cBinop_BDSEPqyt_sendMessageEP21HeavyContextInterfaceiPK9HvMessage
 2096 0050 00000000 		.word	.LC7
 2097 0054 20000000 		.word	.LC8
 2098 0058 4C000000 		.word	.LC9
 2099              	.LBE238:
 2100              	.LBE241:
 2101              		.cfi_endproc
 2102              	.LFE1008:
 2104              		.section	.text._ZN14Heavy_daisiSPI27cBinop_Jyn65ylg_sendMessageEP21HeavyContextInterfaceiPK9HvMess
 2105              		.align	1
 2106              		.p2align 2,,3
 2107              		.global	_ZN14Heavy_daisiSPI27cBinop_Jyn65ylg_sendMessageEP21HeavyContextInterfaceiPK9HvMessage
 2108              		.syntax unified
 2109              		.thumb
 2110              		.thumb_func
 2112              	_ZN14Heavy_daisiSPI27cBinop_Jyn65ylg_sendMessageEP21HeavyContextInterfaceiPK9HvMessage:
 2113              	.LVL153:
 2114              	.LFB1006:
 122:source/Heavy_daisiSPI.cpp ****   cBinop_onMessage(_c, &Context(_c)->cBinop_BDSEPqyt, HV_BINOP_POW, 1, m, &cBinop_BDSEPqyt_sendMess
 2115              		.loc 3 122 108 is_stmt 1 view -0
 2116              		.cfi_startproc
 2117              		@ args = 0, pretend = 0, frame = 0
 2118              		@ frame_needed = 0, uses_anonymous_args = 0
 123:source/Heavy_daisiSPI.cpp ****   cMsg_syaTLOhI_sendMessage(_c, 0, m);
 2119              		.loc 3 123 3 view .LVU493
 122:source/Heavy_daisiSPI.cpp ****   cBinop_onMessage(_c, &Context(_c)->cBinop_BDSEPqyt, HV_BINOP_POW, 1, m, &cBinop_BDSEPqyt_sendMess
 2120              		.loc 3 122 108 is_stmt 0 view .LVU494
 2121 0000 30B5     		push	{r4, r5, lr}
 2122              		.cfi_def_cfa_offset 12
 2123              		.cfi_offset 4, -12
 2124              		.cfi_offset 5, -8
 2125              		.cfi_offset 14, -4
 123:source/Heavy_daisiSPI.cpp ****   cMsg_syaTLOhI_sendMessage(_c, 0, m);
 2126              		.loc 3 123 19 view .LVU495
 2127 0002 0A49     		ldr	r1, .L105
 2128              	.LVL154:
 122:source/Heavy_daisiSPI.cpp ****   cBinop_onMessage(_c, &Context(_c)->cBinop_BDSEPqyt, HV_BINOP_POW, 1, m, &cBinop_BDSEPqyt_sendMess
 2129              		.loc 3 122 108 view .LVU496
 2130 0004 83B0     		sub	sp, sp, #12
 2131              		.cfi_def_cfa_offset 24
 122:source/Heavy_daisiSPI.cpp ****   cBinop_onMessage(_c, &Context(_c)->cBinop_BDSEPqyt, HV_BINOP_POW, 1, m, &cBinop_BDSEPqyt_sendMess
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s 			page 68


 2132              		.loc 3 122 108 view .LVU497
 2133 0006 0446     		mov	r4, r0
 2134 0008 1546     		mov	r5, r2
 123:source/Heavy_daisiSPI.cpp ****   cMsg_syaTLOhI_sendMessage(_c, 0, m);
 2135              		.loc 3 123 19 view .LVU498
 2136 000a 0123     		movs	r3, #1
 2137 000c CDE90021 		strd	r2, r1, [sp]
 2138 0010 00F1A801 		add	r1, r0, #168
 2139 0014 1622     		movs	r2, #22
 2140              	.LVL155:
 123:source/Heavy_daisiSPI.cpp ****   cMsg_syaTLOhI_sendMessage(_c, 0, m);
 2141              		.loc 3 123 19 view .LVU499
 2142 0016 FFF7FEFF 		bl	cBinop_onMessage
 2143              	.LVL156:
 124:source/Heavy_daisiSPI.cpp **** }
 2144              		.loc 3 124 3 is_stmt 1 view .LVU500
 124:source/Heavy_daisiSPI.cpp **** }
 2145              		.loc 3 124 28 is_stmt 0 view .LVU501
 2146 001a 2A46     		mov	r2, r5
 2147 001c 0021     		movs	r1, #0
 2148 001e 2046     		mov	r0, r4
 125:source/Heavy_daisiSPI.cpp **** 
 2149              		.loc 3 125 1 view .LVU502
 2150 0020 03B0     		add	sp, sp, #12
 2151              		.cfi_def_cfa_offset 12
 2152              		@ sp needed
 2153 0022 BDE83040 		pop	{r4, r5, lr}
 2154              		.cfi_restore 14
 2155              		.cfi_restore 5
 2156              		.cfi_restore 4
 2157              		.cfi_def_cfa_offset 0
 2158              	.LVL157:
 124:source/Heavy_daisiSPI.cpp **** }
 2159              		.loc 3 124 28 view .LVU503
 2160 0026 FFF7FEBF 		b	_ZN14Heavy_daisiSPI25cMsg_syaTLOhI_sendMessageEP21HeavyContextInterfaceiPK9HvMessage
 2161              	.LVL158:
 2162              	.L106:
 124:source/Heavy_daisiSPI.cpp **** }
 2163              		.loc 3 124 28 view .LVU504
 2164 002a 00BF     		.align	2
 2165              	.L105:
 2166 002c 00000000 		.word	_ZN14Heavy_daisiSPI27cBinop_BDSEPqyt_sendMessageEP21HeavyContextInterfaceiPK9HvMessage
 2167              		.cfi_endproc
 2168              	.LFE1006:
 2170              		.global	_ZTV14Heavy_daisiSPI
 2171              		.section	.rodata._ZTV14Heavy_daisiSPI,"a"
 2172              		.align	2
 2173              		.set	.LANCHOR0,. + 0
 2176              	_ZTV14Heavy_daisiSPI:
 2177 0000 00000000 		.word	0
 2178 0004 00000000 		.word	0
 2179 0008 00000000 		.word	_ZN14Heavy_daisiSPID1Ev
 2180 000c 00000000 		.word	_ZN14Heavy_daisiSPID0Ev
 2181 0010 00000000 		.word	_ZN14Heavy_daisiSPI7getNameEv
 2182 0014 00000000 		.word	_ZN14Heavy_daisiSPI19getNumInputChannelsEv
 2183 0018 00000000 		.word	_ZN14Heavy_daisiSPI20getNumOutputChannelsEv
 2184 001c 00000000 		.word	_ZN12HeavyContext7getSizeEv
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s 			page 69


 2185 0020 00000000 		.word	_ZN12HeavyContext13getSampleRateEv
 2186 0024 00000000 		.word	_ZN12HeavyContext16getCurrentSampleEv
 2187 0028 00000000 		.word	_ZN12HeavyContext21samplesToMillisecondsEm
 2188 002c 00000000 		.word	_ZN12HeavyContext21millisecondsToSamplesEf
 2189 0030 00000000 		.word	_ZN12HeavyContext11setUserDataEPv
 2190 0034 00000000 		.word	_ZN12HeavyContext11getUserDataEv
 2191 0038 00000000 		.word	_ZN12HeavyContext11setSendHookEPFvP21HeavyContextInterfacePKcmPK9HvMessageE
 2192 003c 00000000 		.word	_ZN12HeavyContext11getSendHookEv
 2193 0040 00000000 		.word	_ZN12HeavyContext12setPrintHookEPFvP21HeavyContextInterfacePKcS3_PK9HvMessageE
 2194 0044 00000000 		.word	_ZN12HeavyContext12getPrintHookEv
 2195 0048 00000000 		.word	_ZN14Heavy_daisiSPI7processEPPfS1_i
 2196 004c 00000000 		.word	_ZN14Heavy_daisiSPI13processInlineEPfS0_i
 2197 0050 00000000 		.word	_ZN14Heavy_daisiSPI24processInlineInterleavedEPfS0_i
 2198 0054 00000000 		.word	_ZN12HeavyContext21sendMessageToReceiverEmdP9HvMessage
 2199 0058 00000000 		.word	_ZN12HeavyContext22sendMessageToReceiverVEmdPKcz
 2200 005c 00000000 		.word	_ZN12HeavyContext19sendFloatToReceiverEmf
 2201 0060 00000000 		.word	_ZN12HeavyContext18sendBangToReceiverEm
 2202 0064 00000000 		.word	_ZN12HeavyContext20sendSymbolToReceiverEmPKc
 2203 0068 00000000 		.word	_ZN12HeavyContext13cancelMessageEP9HvMessagePFvP21HeavyContextInterfaceiPKS0_E
 2204 006c 00000000 		.word	_ZN14Heavy_daisiSPI16getParameterInfoEiP15HvParameterInfo
 2205 0070 00000000 		.word	_ZN12HeavyContext17getBufferForTableEm
 2206 0074 00000000 		.word	_ZN12HeavyContext17getLengthForTableEm
 2207 0078 00000000 		.word	_ZN12HeavyContext17setLengthForTableEmm
 2208 007c 00000000 		.word	_ZN12HeavyContext11lockAcquireEv
 2209 0080 00000000 		.word	_ZN12HeavyContext7lockTryEv
 2210 0084 00000000 		.word	_ZN12HeavyContext11lockReleaseEv
 2211 0088 00000000 		.word	_ZN12HeavyContext24setInputMessageQueueSizeEi
 2212 008c 00000000 		.word	_ZN12HeavyContext25setOutputMessageQueueSizeEi
 2213 0090 00000000 		.word	_ZN12HeavyContext18getNextSentMessageEPmP9HvMessagej
 2214 0094 00000000 		.word	_ZN14Heavy_daisiSPI15getTableForHashEm
 2215 0098 00000000 		.word	_ZN14Heavy_daisiSPI26scheduleMessageForReceiverEmP9HvMessage
 2216              		.text
 2217              	.Letext0:
 2218              		.file 8 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/machine/_default_types.h"
 2219              		.file 9 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/sys/_stdint.h"
 2220              		.file 10 "/Library/DaisyToolchain/0.2.0/arm/lib/gcc/arm-none-eabi/10.3.1/include/stddef.h"
 2221              		.file 11 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath"
 2222              		.file 12 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h"
 2223              		.file 13 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cstdlib"
 2224              		.file 14 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/type_traits"
 2225              		.file 15 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v
 2226              		.file 16 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/math.h"
 2227              		.file 17 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/stdlib.h"
 2228              		.file 18 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/math.h"
 2229              		.file 19 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/stdlib.h"
 2230              		.file 20 "source/HeavyContextInterface.hpp"
 2231              		.file 21 "source/HvMessagePool.h"
 2232              		.file 22 "source/HvTable.h"
 2233              		.file 23 "source/HvControlBinop.h"
 2234              		.file 24 "source/HvControlVar.h"
 2235              		.file 25 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/assert.h"
 2236              		.file 26 "source/HvLightPipe.h"
 2237              		.file 27 "<built-in>"
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s 			page 70


DEFINED SYMBOLS
                            *ABS*:0000000000000000 Heavy_daisiSPI.cpp
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s:19     .text._ZN12HeavyContext7getSizeEv:0000000000000000 $t
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s:26     .text._ZN12HeavyContext7getSizeEv:0000000000000000 _ZN12HeavyContext7getSizeEv
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s:45     .text._ZN12HeavyContext13getSampleRateEv:0000000000000000 $t
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s:52     .text._ZN12HeavyContext13getSampleRateEv:0000000000000000 _ZN12HeavyContext13getSampleRateEv
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s:68     .text._ZN12HeavyContext16getCurrentSampleEv:0000000000000000 $t
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s:75     .text._ZN12HeavyContext16getCurrentSampleEv:0000000000000000 _ZN12HeavyContext16getCurrentSampleEv
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s:93     .text._ZN12HeavyContext21samplesToMillisecondsEm:0000000000000000 $t
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s:100    .text._ZN12HeavyContext21samplesToMillisecondsEm:0000000000000000 _ZN12HeavyContext21samplesToMillisecondsEm
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s:125    .text._ZN12HeavyContext21samplesToMillisecondsEm:0000000000000020 $d
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s:131    .text._ZN12HeavyContext11setUserDataEPv:0000000000000000 $t
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s:138    .text._ZN12HeavyContext11setUserDataEPv:0000000000000000 _ZN12HeavyContext11setUserDataEPv
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s:155    .text._ZN12HeavyContext11getUserDataEv:0000000000000000 $t
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s:162    .text._ZN12HeavyContext11getUserDataEv:0000000000000000 _ZN12HeavyContext11getUserDataEv
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s:180    .text._ZN12HeavyContext11setSendHookEPFvP21HeavyContextInterfacePKcmPK9HvMessageE:0000000000000000 $t
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s:187    .text._ZN12HeavyContext11setSendHookEPFvP21HeavyContextInterfacePKcmPK9HvMessageE:0000000000000000 _ZN12HeavyContext11setSendHookEPFvP21HeavyContextInterfacePKcmPK9HvMessageE
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s:204    .text._ZN12HeavyContext11getSendHookEv:0000000000000000 $t
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s:211    .text._ZN12HeavyContext11getSendHookEv:0000000000000000 _ZN12HeavyContext11getSendHookEv
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s:229    .text._ZN12HeavyContext12setPrintHookEPFvP21HeavyContextInterfacePKcS3_PK9HvMessageE:0000000000000000 $t
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s:236    .text._ZN12HeavyContext12setPrintHookEPFvP21HeavyContextInterfacePKcS3_PK9HvMessageE:0000000000000000 _ZN12HeavyContext12setPrintHookEPFvP21HeavyContextInterfacePKcS3_PK9HvMessageE
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s:253    .text._ZN12HeavyContext12getPrintHookEv:0000000000000000 $t
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s:260    .text._ZN12HeavyContext12getPrintHookEv:0000000000000000 _ZN12HeavyContext12getPrintHookEv
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s:278    .rodata._ZN14Heavy_daisiSPI7getNameEv.str1.4:0000000000000000 $d
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s:282    .text._ZN14Heavy_daisiSPI7getNameEv:0000000000000000 $t
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s:289    .text._ZN14Heavy_daisiSPI7getNameEv:0000000000000000 _ZN14Heavy_daisiSPI7getNameEv
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s:307    .text._ZN14Heavy_daisiSPI7getNameEv:0000000000000004 $d
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s:312    .text._ZN14Heavy_daisiSPI19getNumInputChannelsEv:0000000000000000 $t
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s:319    .text._ZN14Heavy_daisiSPI19getNumInputChannelsEv:0000000000000000 _ZN14Heavy_daisiSPI19getNumInputChannelsEv
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s:337    .text._ZN14Heavy_daisiSPI20getNumOutputChannelsEv:0000000000000000 $t
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s:344    .text._ZN14Heavy_daisiSPI20getNumOutputChannelsEv:0000000000000000 _ZN14Heavy_daisiSPI20getNumOutputChannelsEv
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s:362    .text._ZN14Heavy_daisiSPI15getTableForHashEm:0000000000000000 $t
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s:369    .text._ZN14Heavy_daisiSPI15getTableForHashEm:0000000000000000 _ZN14Heavy_daisiSPI15getTableForHashEm
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s:388    .text._ZN14Heavy_daisiSPI26scheduleMessageForReceiverEmP9HvMessage:0000000000000000 $t
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s:395    .text._ZN14Heavy_daisiSPI26scheduleMessageForReceiverEmP9HvMessage:0000000000000000 _ZN14Heavy_daisiSPI26scheduleMessageForReceiverEmP9HvMessage
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s:412    .rodata._ZN14Heavy_daisiSPI16getParameterInfoEiP15HvParameterInfo.str1.4:0000000000000000 $d
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s:416    .text._ZN14Heavy_daisiSPI16getParameterInfoEiP15HvParameterInfo:0000000000000000 $t
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s:423    .text._ZN14Heavy_daisiSPI16getParameterInfoEiP15HvParameterInfo:0000000000000000 _ZN14Heavy_daisiSPI16getParameterInfoEiP15HvParameterInfo
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s:471    .text._ZN14Heavy_daisiSPI16getParameterInfoEiP15HvParameterInfo:0000000000000018 $d
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s:476    .text._ZN14Heavy_daisiSPID2Ev:0000000000000000 $t
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s:483    .text._ZN14Heavy_daisiSPID2Ev:0000000000000000 _ZN14Heavy_daisiSPID2Ev
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s:516    .text._ZN14Heavy_daisiSPID2Ev:0000000000000010 $d
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s:483    .text._ZN14Heavy_daisiSPID2Ev:0000000000000000 _ZN14Heavy_daisiSPID1Ev
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s:523    .text._ZN14Heavy_daisiSPID0Ev:0000000000000000 $t
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s:530    .text._ZN14Heavy_daisiSPID0Ev:0000000000000000 _ZN14Heavy_daisiSPID0Ev
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s:574    .text._ZN14Heavy_daisiSPID0Ev:0000000000000018 $d
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s:579    .text._ZN14Heavy_daisiSPI27cBinop_JTMczcYU_sendMessageEP21HeavyContextInterfaceiPK9HvMessage:0000000000000000 $t
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s:586    .text._ZN14Heavy_daisiSPI27cBinop_JTMczcYU_sendMessageEP21HeavyContextInterfaceiPK9HvMessage:0000000000000000 _ZN14Heavy_daisiSPI27cBinop_JTMczcYU_sendMessageEP21HeavyContextInterfaceiPK9HvMessage
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s:625    .text._ZN14Heavy_daisiSPI27cBinop_JTMczcYU_sendMessageEP21HeavyContextInterfaceiPK9HvMessage:0000000000000020 $d
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s:2112   .text._ZN14Heavy_daisiSPI27cBinop_Jyn65ylg_sendMessageEP21HeavyContextInterfaceiPK9HvMessage:0000000000000000 _ZN14Heavy_daisiSPI27cBinop_Jyn65ylg_sendMessageEP21HeavyContextInterfaceiPK9HvMessage
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s:630    .text._ZN14Heavy_daisiSPI27cBinop_BDSEPqyt_sendMessageEP21HeavyContextInterfaceiPK9HvMessage:0000000000000000 $t
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s:637    .text._ZN14Heavy_daisiSPI27cBinop_BDSEPqyt_sendMessageEP21HeavyContextInterfaceiPK9HvMessage:0000000000000000 _ZN14Heavy_daisiSPI27cBinop_BDSEPqyt_sendMessageEP21HeavyContextInterfaceiPK9HvMessage
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s:676    .text._ZN14Heavy_daisiSPI27cBinop_BDSEPqyt_sendMessageEP21HeavyContextInterfaceiPK9HvMessage:0000000000000020 $d
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s:796    .text._ZN14Heavy_daisiSPI27cBinop_FIChmvMr_sendMessageEP21HeavyContextInterfaceiPK9HvMessage:0000000000000000 _ZN14Heavy_daisiSPI27cBinop_FIChmvMr_sendMessageEP21HeavyContextInterfaceiPK9HvMessage
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s:682    .text._ZN14Heavy_daisiSPI27cBinop_PbjUu1XL_sendMessageEP21HeavyContextInterfaceiPK9HvMessage:0000000000000000 $t
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s:689    .text._ZN14Heavy_daisiSPI27cBinop_PbjUu1XL_sendMessageEP21HeavyContextInterfaceiPK9HvMessage:0000000000000000 _ZN14Heavy_daisiSPI27cBinop_PbjUu1XL_sendMessageEP21HeavyContextInterfaceiPK9HvMessage
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s:728    .text._ZN14Heavy_daisiSPI27cBinop_PbjUu1XL_sendMessageEP21HeavyContextInterfaceiPK9HvMessage:0000000000000020 $d
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s 			page 71


/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s:734    .text._ZN14Heavy_daisiSPI27cBinop_sEn9bNjH_sendMessageEP21HeavyContextInterfaceiPK9HvMessage:0000000000000000 $t
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s:741    .text._ZN14Heavy_daisiSPI27cBinop_sEn9bNjH_sendMessageEP21HeavyContextInterfaceiPK9HvMessage:0000000000000000 _ZN14Heavy_daisiSPI27cBinop_sEn9bNjH_sendMessageEP21HeavyContextInterfaceiPK9HvMessage
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s:783    .text._ZN14Heavy_daisiSPI27cBinop_sEn9bNjH_sendMessageEP21HeavyContextInterfaceiPK9HvMessage:0000000000000020 $d
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s:789    .text._ZN14Heavy_daisiSPI27cBinop_FIChmvMr_sendMessageEP21HeavyContextInterfaceiPK9HvMessage:0000000000000000 $t
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s:821    .text._ZN14Heavy_daisiSPI13processInlineEPfS0_i:0000000000000000 $t
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s:828    .text._ZN14Heavy_daisiSPI13processInlineEPfS0_i:0000000000000000 _ZN14Heavy_daisiSPI13processInlineEPfS0_i
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s:883    .rodata._ZN14Heavy_daisiSPI24processInlineInterleavedEPfS0_i.str1.4:0000000000000000 $d
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s:894    .text._ZN14Heavy_daisiSPI24processInlineInterleavedEPfS0_i:0000000000000000 $t
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s:901    .text._ZN14Heavy_daisiSPI24processInlineInterleavedEPfS0_i:0000000000000000 _ZN14Heavy_daisiSPI24processInlineInterleavedEPfS0_i
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s:1028   .text._ZN14Heavy_daisiSPI24processInlineInterleavedEPfS0_i:0000000000000060 $d
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s:1035   .text._ZN12HeavyContext21millisecondsToSamplesEf:0000000000000000 $t
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s:1042   .text._ZN12HeavyContext21millisecondsToSamplesEf:0000000000000000 _ZN12HeavyContext21millisecondsToSamplesEf
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s:1075   .text._ZN12HeavyContext21millisecondsToSamplesEf:0000000000000028 $d
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s:1082   .rodata._ZN14Heavy_daisiSPI7processEPPfS1_i.str1.4:0000000000000000 $d
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s:1090   .text._ZN14Heavy_daisiSPI7processEPPfS1_i:0000000000000000 $t
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s:1097   .text._ZN14Heavy_daisiSPI7processEPPfS1_i:0000000000000000 _ZN14Heavy_daisiSPI7processEPPfS1_i
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s:1690   .text._ZN14Heavy_daisiSPI7processEPPfS1_i:0000000000000120 $d
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s:1703   .text._ZN14Heavy_daisiSPIC2Ediii:0000000000000000 $t
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s:1710   .text._ZN14Heavy_daisiSPIC2Ediii:0000000000000000 _ZN14Heavy_daisiSPIC2Ediii
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s:1793   .text._ZN14Heavy_daisiSPIC2Ediii:0000000000000058 $d
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s:1710   .text._ZN14Heavy_daisiSPIC2Ediii:0000000000000000 _ZN14Heavy_daisiSPIC1Ediii
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s:1802   .text.hv_daisiSPI_new:0000000000000000 $t
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s:1809   .text.hv_daisiSPI_new:0000000000000000 hv_daisiSPI_new
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s:1849   .text.hv_daisiSPI_new_with_options:0000000000000000 $t
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s:1856   .text.hv_daisiSPI_new_with_options:0000000000000000 hv_daisiSPI_new_with_options
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s:1903   .text._ZN14Heavy_daisiSPI25cVar_wlVKX9gk_sendMessageEP21HeavyContextInterfaceiPK9HvMessage:0000000000000000 $t
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s:1910   .text._ZN14Heavy_daisiSPI25cVar_wlVKX9gk_sendMessageEP21HeavyContextInterfaceiPK9HvMessage:0000000000000000 _ZN14Heavy_daisiSPI25cVar_wlVKX9gk_sendMessageEP21HeavyContextInterfaceiPK9HvMessage
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s:1949   .text._ZN14Heavy_daisiSPI25cVar_wlVKX9gk_sendMessageEP21HeavyContextInterfaceiPK9HvMessage:0000000000000020 $d
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s:1954   .rodata._ZN14Heavy_daisiSPI25cMsg_syaTLOhI_sendMessageEP21HeavyContextInterfaceiPK9HvMessage.str1.4:0000000000000000 $d
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s:1964   .text._ZN14Heavy_daisiSPI25cMsg_syaTLOhI_sendMessageEP21HeavyContextInterfaceiPK9HvMessage:0000000000000000 $t
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s:1971   .text._ZN14Heavy_daisiSPI25cMsg_syaTLOhI_sendMessageEP21HeavyContextInterfaceiPK9HvMessage:0000000000000000 _ZN14Heavy_daisiSPI25cMsg_syaTLOhI_sendMessageEP21HeavyContextInterfaceiPK9HvMessage
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s:2095   .text._ZN14Heavy_daisiSPI25cMsg_syaTLOhI_sendMessageEP21HeavyContextInterfaceiPK9HvMessage:000000000000004c $d
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s:2105   .text._ZN14Heavy_daisiSPI27cBinop_Jyn65ylg_sendMessageEP21HeavyContextInterfaceiPK9HvMessage:0000000000000000 $t
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s:2166   .text._ZN14Heavy_daisiSPI27cBinop_Jyn65ylg_sendMessageEP21HeavyContextInterfaceiPK9HvMessage:000000000000002c $d
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s:2176   .rodata._ZTV14Heavy_daisiSPI:0000000000000000 _ZTV14Heavy_daisiSPI
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s:2172   .rodata._ZTV14Heavy_daisiSPI:0000000000000000 $d

UNDEFINED SYMBOLS
_ZN12HeavyContextD2Ev
_ZdlPvj
cBinop_k_onMessage
sPhasor_k_onMessage
__assert_func
hLp_consume
hLp_hasData
hLp_getReadBuffer
mq_pop
_ZN12HeavyContextC2Ediii
sPhasor_k_init
cVar_init_f
cBinop_init
_Znwj
msg_init
cBinop_onMessage
_ZN12HeavyContext21sendMessageToReceiverEmdP9HvMessage
_ZN12HeavyContext22sendMessageToReceiverVEmdPKcz
_ZN12HeavyContext19sendFloatToReceiverEmf
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccnnvEVQ.s 			page 72


_ZN12HeavyContext18sendBangToReceiverEm
_ZN12HeavyContext20sendSymbolToReceiverEmPKc
_ZN12HeavyContext13cancelMessageEP9HvMessagePFvP21HeavyContextInterfaceiPKS0_E
_ZN12HeavyContext17getBufferForTableEm
_ZN12HeavyContext17getLengthForTableEm
_ZN12HeavyContext17setLengthForTableEmm
_ZN12HeavyContext11lockAcquireEv
_ZN12HeavyContext7lockTryEv
_ZN12HeavyContext11lockReleaseEv
_ZN12HeavyContext24setInputMessageQueueSizeEi
_ZN12HeavyContext25setOutputMessageQueueSizeEi
_ZN12HeavyContext18getNextSentMessageEPmP9HvMessagej
