ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 2
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"Heavy_daisy_control.cpp"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text._ZN12HeavyContext7getSizeEv,"axG",%progbits,_ZN12HeavyContext7getSizeEv,comdat
  19              		.align	1
  20              		.p2align 2,,3
  21              		.weak	_ZN12HeavyContext7getSizeEv
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	_ZN12HeavyContext7getSizeEv:
  27              	.LVL0:
  28              	.LFB965:
  29              		.file 1 "source/HeavyContext.hpp"
   1:source/HeavyContext.hpp **** /**
   2:source/HeavyContext.hpp ****  * Copyright (c) 2014-2018 Enzien Audio Ltd.
   3:source/HeavyContext.hpp ****  *
   4:source/HeavyContext.hpp ****  * Permission to use, copy, modify, and/or distribute this software for any
   5:source/HeavyContext.hpp ****  * purpose with or without fee is hereby granted, provided that the above
   6:source/HeavyContext.hpp ****  * copyright notice and this permission notice appear in all copies.
   7:source/HeavyContext.hpp ****  *
   8:source/HeavyContext.hpp ****  * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
   9:source/HeavyContext.hpp ****  * REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
  10:source/HeavyContext.hpp ****  * AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
  11:source/HeavyContext.hpp ****  * INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
  12:source/HeavyContext.hpp ****  * LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
  13:source/HeavyContext.hpp ****  * OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
  14:source/HeavyContext.hpp ****  * PERFORMANCE OF THIS SOFTWARE.
  15:source/HeavyContext.hpp ****  */
  16:source/HeavyContext.hpp **** 
  17:source/HeavyContext.hpp **** #ifndef _HEAVY_CONTEXT_H_
  18:source/HeavyContext.hpp **** #define _HEAVY_CONTEXT_H_
  19:source/HeavyContext.hpp **** 
  20:source/HeavyContext.hpp **** #include "HeavyContextInterface.hpp"
  21:source/HeavyContext.hpp **** #include "HvLightPipe.h"
  22:source/HeavyContext.hpp **** #include "HvMessageQueue.h"
  23:source/HeavyContext.hpp **** #include "HvMath.h"
  24:source/HeavyContext.hpp **** 
  25:source/HeavyContext.hpp **** struct HvTable;
  26:source/HeavyContext.hpp **** 
  27:source/HeavyContext.hpp **** class HeavyContext : public HeavyContextInterface {
  28:source/HeavyContext.hpp **** 
  29:source/HeavyContext.hpp ****  public:
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s 			page 2


  30:source/HeavyContext.hpp ****   HeavyContext(double sampleRate, int poolKb=10, int inQueueKb=2, int outQueueKb=0);
  31:source/HeavyContext.hpp ****   virtual ~HeavyContext();
  32:source/HeavyContext.hpp **** 
  33:source/HeavyContext.hpp ****   int getSize() override { return (int) numBytes; }
  30              		.loc 1 33 7 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              		.loc 1 33 28 view .LVU1
  36              		.loc 1 33 51 is_stmt 0 view .LVU2
  37 0000 4069     		ldr	r0, [r0, #20]
  38              	.LVL1:
  39              		.loc 1 33 51 view .LVU3
  40 0002 7047     		bx	lr
  41              		.cfi_endproc
  42              	.LFE965:
  44              		.section	.text._ZN12HeavyContext13getSampleRateEv,"axG",%progbits,_ZN12HeavyContext13getSampleRate
  45              		.align	1
  46              		.p2align 2,,3
  47              		.weak	_ZN12HeavyContext13getSampleRateEv
  48              		.syntax unified
  49              		.thumb
  50              		.thumb_func
  52              	_ZN12HeavyContext13getSampleRateEv:
  53              	.LVL2:
  54              	.LFB966:
  34:source/HeavyContext.hpp **** 
  35:source/HeavyContext.hpp ****   double getSampleRate() override { return sampleRate; }
  55              		.loc 1 35 10 is_stmt 1 view -0
  56              		.cfi_startproc
  57              		@ args = 0, pretend = 0, frame = 0
  58              		@ frame_needed = 0, uses_anonymous_args = 0
  59              		@ link register save eliminated.
  60              		.loc 1 35 37 view .LVU5
  61              		.loc 1 35 56 is_stmt 0 view .LVU6
  62 0000 90ED020B 		vldr.64	d0, [r0, #8]
  63 0004 7047     		bx	lr
  64              		.cfi_endproc
  65              	.LFE966:
  67 0006 00BF     		.section	.text._ZN12HeavyContext16getCurrentSampleEv,"axG",%progbits,_ZN12HeavyContext16getCurrent
  68              		.align	1
  69              		.p2align 2,,3
  70              		.weak	_ZN12HeavyContext16getCurrentSampleEv
  71              		.syntax unified
  72              		.thumb
  73              		.thumb_func
  75              	_ZN12HeavyContext16getCurrentSampleEv:
  76              	.LVL3:
  77              	.LFB967:
  36:source/HeavyContext.hpp **** 
  37:source/HeavyContext.hpp ****   hv_uint32_t getCurrentSample() override { return blockStartTimestamp; }
  78              		.loc 1 37 15 is_stmt 1 view -0
  79              		.cfi_startproc
  80              		@ args = 0, pretend = 0, frame = 0
  81              		@ frame_needed = 0, uses_anonymous_args = 0
  82              		@ link register save eliminated.
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s 			page 3


  83              		.loc 1 37 45 view .LVU8
  84              		.loc 1 37 73 is_stmt 0 view .LVU9
  85 0000 0069     		ldr	r0, [r0, #16]
  86              	.LVL4:
  87              		.loc 1 37 73 view .LVU10
  88 0002 7047     		bx	lr
  89              		.cfi_endproc
  90              	.LFE967:
  92              		.section	.text._ZN12HeavyContext21samplesToMillisecondsEm,"axG",%progbits,_ZN12HeavyContext21sampl
  93              		.align	1
  94              		.p2align 2,,3
  95              		.weak	_ZN12HeavyContext21samplesToMillisecondsEm
  96              		.syntax unified
  97              		.thumb
  98              		.thumb_func
 100              	_ZN12HeavyContext21samplesToMillisecondsEm:
 101              	.LVL5:
 102              	.LFB968:
  38:source/HeavyContext.hpp ****   float samplesToMilliseconds(hv_uint32_t numSamples) override { return (float) (1000.0*numSamples/
 103              		.loc 1 38 9 is_stmt 1 view -0
 104              		.cfi_startproc
 105              		@ args = 0, pretend = 0, frame = 0
 106              		@ frame_needed = 0, uses_anonymous_args = 0
 107              		@ link register save eliminated.
 108              		.loc 1 38 66 view .LVU12
 109              		.loc 1 38 88 is_stmt 0 view .LVU13
 110 0000 07EE901A 		vmov	s15, r1	@ int
 111 0004 9FED065B 		vldr.64	d5, .L6
 112 0008 B8EE677B 		vcvt.f64.u32	d7, s15
 113              		.loc 1 38 99 view .LVU14
 114 000c 90ED026B 		vldr.64	d6, [r0, #8]
 115              		.loc 1 38 88 view .LVU15
 116 0010 27EE057B 		vmul.f64	d7, d7, d5
 117              		.loc 1 38 99 view .LVU16
 118 0014 87EE060B 		vdiv.f64	d0, d7, d6
 119              		.loc 1 38 113 view .LVU17
 120 0018 B7EEC00B 		vcvt.f32.f64	s0, d0
 121 001c 7047     		bx	lr
 122              	.L7:
 123 001e 00BF     		.align	3
 124              	.L6:
 125 0020 00000000 		.word	0
 126 0024 00408F40 		.word	1083129856
 127              		.cfi_endproc
 128              	.LFE968:
 130              		.section	.text._ZN12HeavyContext11setUserDataEPv,"axG",%progbits,_ZN12HeavyContext11setUserDataEPv
 131              		.align	1
 132              		.p2align 2,,3
 133              		.weak	_ZN12HeavyContext11setUserDataEPv
 134              		.syntax unified
 135              		.thumb
 136              		.thumb_func
 138              	_ZN12HeavyContext11setUserDataEPv:
 139              	.LVL6:
 140              	.LFB970:
  39:source/HeavyContext.hpp ****   hv_uint32_t millisecondsToSamples(float ms) override { return (hv_uint32_t) (hv_max_f(0.0f,ms)*sa
  40:source/HeavyContext.hpp **** 
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s 			page 4


  41:source/HeavyContext.hpp ****   void setUserData(void *x) override { userData = x; }
 141              		.loc 1 41 8 is_stmt 1 view -0
 142              		.cfi_startproc
 143              		@ args = 0, pretend = 0, frame = 0
 144              		@ frame_needed = 0, uses_anonymous_args = 0
 145              		@ link register save eliminated.
 146              		.loc 1 41 40 view .LVU19
 147              		.loc 1 41 49 is_stmt 0 view .LVU20
 148 0000 8165     		str	r1, [r0, #88]
 149              		.loc 1 41 54 view .LVU21
 150 0002 7047     		bx	lr
 151              		.cfi_endproc
 152              	.LFE970:
 154              		.section	.text._ZN12HeavyContext11getUserDataEv,"axG",%progbits,_ZN12HeavyContext11getUserDataEv,c
 155              		.align	1
 156              		.p2align 2,,3
 157              		.weak	_ZN12HeavyContext11getUserDataEv
 158              		.syntax unified
 159              		.thumb
 160              		.thumb_func
 162              	_ZN12HeavyContext11getUserDataEv:
 163              	.LVL7:
 164              	.LFB971:
  42:source/HeavyContext.hpp ****   void *getUserData() override { return userData; }
 165              		.loc 1 42 9 is_stmt 1 view -0
 166              		.cfi_startproc
 167              		@ args = 0, pretend = 0, frame = 0
 168              		@ frame_needed = 0, uses_anonymous_args = 0
 169              		@ link register save eliminated.
 170              		.loc 1 42 34 view .LVU23
 171              		.loc 1 42 51 is_stmt 0 view .LVU24
 172 0000 806D     		ldr	r0, [r0, #88]
 173              	.LVL8:
 174              		.loc 1 42 51 view .LVU25
 175 0002 7047     		bx	lr
 176              		.cfi_endproc
 177              	.LFE971:
 179              		.section	.text._ZN12HeavyContext11setSendHookEPFvP21HeavyContextInterfacePKcmPK9HvMessageE,"axG",%
 180              		.align	1
 181              		.p2align 2,,3
 182              		.weak	_ZN12HeavyContext11setSendHookEPFvP21HeavyContextInterfacePKcmPK9HvMessageE
 183              		.syntax unified
 184              		.thumb
 185              		.thumb_func
 187              	_ZN12HeavyContext11setSendHookEPFvP21HeavyContextInterfacePKcmPK9HvMessageE:
 188              	.LVL9:
 189              	.LFB972:
  43:source/HeavyContext.hpp **** 
  44:source/HeavyContext.hpp ****   // hook management
  45:source/HeavyContext.hpp ****   void setSendHook(HvSendHook_t *f) override { sendHook = f; }
 190              		.loc 1 45 8 is_stmt 1 view -0
 191              		.cfi_startproc
 192              		@ args = 0, pretend = 0, frame = 0
 193              		@ frame_needed = 0, uses_anonymous_args = 0
 194              		@ link register save eliminated.
 195              		.loc 1 45 48 view .LVU27
 196              		.loc 1 45 57 is_stmt 0 view .LVU28
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s 			page 5


 197 0000 0165     		str	r1, [r0, #80]
 198              		.loc 1 45 62 view .LVU29
 199 0002 7047     		bx	lr
 200              		.cfi_endproc
 201              	.LFE972:
 203              		.section	.text._ZN12HeavyContext11getSendHookEv,"axG",%progbits,_ZN12HeavyContext11getSendHookEv,c
 204              		.align	1
 205              		.p2align 2,,3
 206              		.weak	_ZN12HeavyContext11getSendHookEv
 207              		.syntax unified
 208              		.thumb
 209              		.thumb_func
 211              	_ZN12HeavyContext11getSendHookEv:
 212              	.LVL10:
 213              	.LFB973:
  46:source/HeavyContext.hpp ****   HvSendHook_t *getSendHook() override { return sendHook; }
 214              		.loc 1 46 17 is_stmt 1 view -0
 215              		.cfi_startproc
 216              		@ args = 0, pretend = 0, frame = 0
 217              		@ frame_needed = 0, uses_anonymous_args = 0
 218              		@ link register save eliminated.
 219              		.loc 1 46 42 view .LVU31
 220              		.loc 1 46 59 is_stmt 0 view .LVU32
 221 0000 006D     		ldr	r0, [r0, #80]
 222              	.LVL11:
 223              		.loc 1 46 59 view .LVU33
 224 0002 7047     		bx	lr
 225              		.cfi_endproc
 226              	.LFE973:
 228              		.section	.text._ZN12HeavyContext12setPrintHookEPFvP21HeavyContextInterfacePKcS3_PK9HvMessageE,"axG
 229              		.align	1
 230              		.p2align 2,,3
 231              		.weak	_ZN12HeavyContext12setPrintHookEPFvP21HeavyContextInterfacePKcS3_PK9HvMessageE
 232              		.syntax unified
 233              		.thumb
 234              		.thumb_func
 236              	_ZN12HeavyContext12setPrintHookEPFvP21HeavyContextInterfacePKcS3_PK9HvMessageE:
 237              	.LVL12:
 238              	.LFB974:
  47:source/HeavyContext.hpp **** 
  48:source/HeavyContext.hpp ****   void setPrintHook(HvPrintHook_t *f) override { printHook = f; }
 239              		.loc 1 48 8 is_stmt 1 view -0
 240              		.cfi_startproc
 241              		@ args = 0, pretend = 0, frame = 0
 242              		@ frame_needed = 0, uses_anonymous_args = 0
 243              		@ link register save eliminated.
 244              		.loc 1 48 50 view .LVU35
 245              		.loc 1 48 60 is_stmt 0 view .LVU36
 246 0000 4165     		str	r1, [r0, #84]
 247              		.loc 1 48 65 view .LVU37
 248 0002 7047     		bx	lr
 249              		.cfi_endproc
 250              	.LFE974:
 252              		.section	.text._ZN12HeavyContext12getPrintHookEv,"axG",%progbits,_ZN12HeavyContext12getPrintHookEv
 253              		.align	1
 254              		.p2align 2,,3
 255              		.weak	_ZN12HeavyContext12getPrintHookEv
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s 			page 6


 256              		.syntax unified
 257              		.thumb
 258              		.thumb_func
 260              	_ZN12HeavyContext12getPrintHookEv:
 261              	.LVL13:
 262              	.LFB975:
  49:source/HeavyContext.hpp ****   HvPrintHook_t *getPrintHook() override { return printHook; }
 263              		.loc 1 49 18 is_stmt 1 view -0
 264              		.cfi_startproc
 265              		@ args = 0, pretend = 0, frame = 0
 266              		@ frame_needed = 0, uses_anonymous_args = 0
 267              		@ link register save eliminated.
 268              		.loc 1 49 44 view .LVU39
 269              		.loc 1 49 62 is_stmt 0 view .LVU40
 270 0000 406D     		ldr	r0, [r0, #84]
 271              	.LVL14:
 272              		.loc 1 49 62 view .LVU41
 273 0002 7047     		bx	lr
 274              		.cfi_endproc
 275              	.LFE975:
 277              		.section	.rodata._ZN19Heavy_daisy_control7getNameEv.str1.4,"aMS",%progbits,1
 278              		.align	2
 279              	.LC0:
 280 0000 64616973 		.ascii	"daisy_control\000"
 280      795F636F 
 280      6E74726F 
 280      6C00
 281              		.section	.text._ZN19Heavy_daisy_control7getNameEv,"axG",%progbits,_ZN19Heavy_daisy_control7getName
 282              		.align	1
 283              		.p2align 2,,3
 284              		.weak	_ZN19Heavy_daisy_control7getNameEv
 285              		.syntax unified
 286              		.thumb
 287              		.thumb_func
 289              	_ZN19Heavy_daisy_control7getNameEv:
 290              	.LVL15:
 291              	.LFB988:
 292              		.file 2 "source/Heavy_daisy_control.hpp"
   1:source/Heavy_daisy_control.hpp **** /**
   2:source/Heavy_daisy_control.hpp ****  * Copyright (c) 2023 Enzien Audio, Ltd.
   3:source/Heavy_daisy_control.hpp ****  * 
   4:source/Heavy_daisy_control.hpp ****  * Redistribution and use in source and binary forms, with or without modification,
   5:source/Heavy_daisy_control.hpp ****  * are permitted provided that the following conditions are met:
   6:source/Heavy_daisy_control.hpp ****  * 
   7:source/Heavy_daisy_control.hpp ****  * 1. Redistributions of source code must retain the above copyright notice,
   8:source/Heavy_daisy_control.hpp ****  *    this list of conditions, and the following disclaimer.
   9:source/Heavy_daisy_control.hpp ****  * 
  10:source/Heavy_daisy_control.hpp ****  * 2. Redistributions in binary form must reproduce the phrase "powered by heavy",
  11:source/Heavy_daisy_control.hpp ****  *    the heavy logo, and a hyperlink to https://enzienaudio.com, all in a visible
  12:source/Heavy_daisy_control.hpp ****  *    form.
  13:source/Heavy_daisy_control.hpp ****  * 
  14:source/Heavy_daisy_control.hpp ****  *   2.1 If the Application is distributed in a store system (for example,
  15:source/Heavy_daisy_control.hpp ****  *       the Apple "App Store" or "Google Play"), the phrase "powered by heavy"
  16:source/Heavy_daisy_control.hpp ****  *       shall be included in the app description or the copyright text as well as
  17:source/Heavy_daisy_control.hpp ****  *       the in the app itself. The heavy logo will shall be visible in the app
  18:source/Heavy_daisy_control.hpp ****  *       itself as well.
  19:source/Heavy_daisy_control.hpp ****  * 
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s 			page 7


  20:source/Heavy_daisy_control.hpp ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  21:source/Heavy_daisy_control.hpp ****  * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
  22:source/Heavy_daisy_control.hpp ****  * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  23:source/Heavy_daisy_control.hpp ****  * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  24:source/Heavy_daisy_control.hpp ****  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  25:source/Heavy_daisy_control.hpp ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  26:source/Heavy_daisy_control.hpp ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  27:source/Heavy_daisy_control.hpp ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  28:source/Heavy_daisy_control.hpp ****  * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
  29:source/Heavy_daisy_control.hpp ****  * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  30:source/Heavy_daisy_control.hpp ****  * 
  31:source/Heavy_daisy_control.hpp ****  */
  32:source/Heavy_daisy_control.hpp **** 
  33:source/Heavy_daisy_control.hpp **** #ifndef _HEAVY_CONTEXT_DAISY_CONTROL_HPP_
  34:source/Heavy_daisy_control.hpp **** #define _HEAVY_CONTEXT_DAISY_CONTROL_HPP_
  35:source/Heavy_daisy_control.hpp **** 
  36:source/Heavy_daisy_control.hpp **** // object includes
  37:source/Heavy_daisy_control.hpp **** #include "HeavyContext.hpp"
  38:source/Heavy_daisy_control.hpp **** #include "HvMath.h"
  39:source/Heavy_daisy_control.hpp **** #include "HvSignalVar.h"
  40:source/Heavy_daisy_control.hpp **** #include "HvControlBinop.h"
  41:source/Heavy_daisy_control.hpp **** #include "HvSignalPhasor.h"
  42:source/Heavy_daisy_control.hpp **** 
  43:source/Heavy_daisy_control.hpp **** class Heavy_daisy_control : public HeavyContext {
  44:source/Heavy_daisy_control.hpp **** 
  45:source/Heavy_daisy_control.hpp ****  public:
  46:source/Heavy_daisy_control.hpp ****   Heavy_daisy_control(double sampleRate, int poolKb=10, int inQueueKb=2, int outQueueKb=0);
  47:source/Heavy_daisy_control.hpp ****   ~Heavy_daisy_control();
  48:source/Heavy_daisy_control.hpp **** 
  49:source/Heavy_daisy_control.hpp ****   const char *getName() override { return "daisy_control"; }
 293              		.loc 2 49 15 is_stmt 1 view -0
 294              		.cfi_startproc
 295              		@ args = 0, pretend = 0, frame = 0
 296              		@ frame_needed = 0, uses_anonymous_args = 0
 297              		@ link register save eliminated.
 298              		.loc 2 49 36 view .LVU43
 299              		.loc 2 49 60 is_stmt 0 view .LVU44
 300 0000 0048     		ldr	r0, .L15
 301              	.LVL16:
 302              		.loc 2 49 60 view .LVU45
 303 0002 7047     		bx	lr
 304              	.L16:
 305              		.align	2
 306              	.L15:
 307 0004 00000000 		.word	.LC0
 308              		.cfi_endproc
 309              	.LFE988:
 311              		.section	.text._ZN19Heavy_daisy_control19getNumInputChannelsEv,"axG",%progbits,_ZN19Heavy_daisy_co
 312              		.align	1
 313              		.p2align 2,,3
 314              		.weak	_ZN19Heavy_daisy_control19getNumInputChannelsEv
 315              		.syntax unified
 316              		.thumb
 317              		.thumb_func
 319              	_ZN19Heavy_daisy_control19getNumInputChannelsEv:
 320              	.LVL17:
 321              	.LFB989:
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s 			page 8


  50:source/Heavy_daisy_control.hpp ****   int getNumInputChannels() override { return 0; }
 322              		.loc 2 50 7 is_stmt 1 view -0
 323              		.cfi_startproc
 324              		@ args = 0, pretend = 0, frame = 0
 325              		@ frame_needed = 0, uses_anonymous_args = 0
 326              		@ link register save eliminated.
 327              		.loc 2 50 40 view .LVU47
 328              		.loc 2 50 50 is_stmt 0 view .LVU48
 329 0000 0020     		movs	r0, #0
 330              	.LVL18:
 331              		.loc 2 50 50 view .LVU49
 332 0002 7047     		bx	lr
 333              		.cfi_endproc
 334              	.LFE989:
 336              		.section	.text._ZN19Heavy_daisy_control20getNumOutputChannelsEv,"axG",%progbits,_ZN19Heavy_daisy_c
 337              		.align	1
 338              		.p2align 2,,3
 339              		.weak	_ZN19Heavy_daisy_control20getNumOutputChannelsEv
 340              		.syntax unified
 341              		.thumb
 342              		.thumb_func
 344              	_ZN19Heavy_daisy_control20getNumOutputChannelsEv:
 345              	.LVL19:
 346              	.LFB990:
  51:source/Heavy_daisy_control.hpp ****   int getNumOutputChannels() override { return 2; }
 347              		.loc 2 51 7 is_stmt 1 view -0
 348              		.cfi_startproc
 349              		@ args = 0, pretend = 0, frame = 0
 350              		@ frame_needed = 0, uses_anonymous_args = 0
 351              		@ link register save eliminated.
 352              		.loc 2 51 41 view .LVU51
 353              		.loc 2 51 51 is_stmt 0 view .LVU52
 354 0000 0220     		movs	r0, #2
 355              	.LVL20:
 356              		.loc 2 51 51 view .LVU53
 357 0002 7047     		bx	lr
 358              		.cfi_endproc
 359              	.LFE990:
 361              		.section	.text._ZN19Heavy_daisy_control15getTableForHashEm,"ax",%progbits
 362              		.align	1
 363              		.p2align 2,,3
 364              		.global	_ZN19Heavy_daisy_control15getTableForHashEm
 365              		.syntax unified
 366              		.thumb
 367              		.thumb_func
 369              	_ZN19Heavy_daisy_control15getTableForHashEm:
 370              	.LVL21:
 371              	.LFB1000:
 372              		.file 3 "source/Heavy_daisy_control.cpp"
   1:source/Heavy_daisy_control.cpp **** /**
   2:source/Heavy_daisy_control.cpp ****  * Copyright (c) 2023 Enzien Audio, Ltd.
   3:source/Heavy_daisy_control.cpp ****  * 
   4:source/Heavy_daisy_control.cpp ****  * Redistribution and use in source and binary forms, with or without modification,
   5:source/Heavy_daisy_control.cpp ****  * are permitted provided that the following conditions are met:
   6:source/Heavy_daisy_control.cpp ****  * 
   7:source/Heavy_daisy_control.cpp ****  * 1. Redistributions of source code must retain the above copyright notice,
   8:source/Heavy_daisy_control.cpp ****  *    this list of conditions, and the following disclaimer.
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s 			page 9


   9:source/Heavy_daisy_control.cpp ****  * 
  10:source/Heavy_daisy_control.cpp ****  * 2. Redistributions in binary form must reproduce the phrase "powered by heavy",
  11:source/Heavy_daisy_control.cpp ****  *    the heavy logo, and a hyperlink to https://enzienaudio.com, all in a visible
  12:source/Heavy_daisy_control.cpp ****  *    form.
  13:source/Heavy_daisy_control.cpp ****  * 
  14:source/Heavy_daisy_control.cpp ****  *   2.1 If the Application is distributed in a store system (for example,
  15:source/Heavy_daisy_control.cpp ****  *       the Apple "App Store" or "Google Play"), the phrase "powered by heavy"
  16:source/Heavy_daisy_control.cpp ****  *       shall be included in the app description or the copyright text as well as
  17:source/Heavy_daisy_control.cpp ****  *       the in the app itself. The heavy logo will shall be visible in the app
  18:source/Heavy_daisy_control.cpp ****  *       itself as well.
  19:source/Heavy_daisy_control.cpp ****  * 
  20:source/Heavy_daisy_control.cpp ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  21:source/Heavy_daisy_control.cpp ****  * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
  22:source/Heavy_daisy_control.cpp ****  * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  23:source/Heavy_daisy_control.cpp ****  * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  24:source/Heavy_daisy_control.cpp ****  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  25:source/Heavy_daisy_control.cpp ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  26:source/Heavy_daisy_control.cpp ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  27:source/Heavy_daisy_control.cpp ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  28:source/Heavy_daisy_control.cpp ****  * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
  29:source/Heavy_daisy_control.cpp ****  * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  30:source/Heavy_daisy_control.cpp ****  * 
  31:source/Heavy_daisy_control.cpp ****  */
  32:source/Heavy_daisy_control.cpp **** 
  33:source/Heavy_daisy_control.cpp **** #include "Heavy_daisy_control.hpp"
  34:source/Heavy_daisy_control.cpp **** 
  35:source/Heavy_daisy_control.cpp **** #define Context(_c) reinterpret_cast<Heavy_daisy_control *>(_c)
  36:source/Heavy_daisy_control.cpp **** 
  37:source/Heavy_daisy_control.cpp **** 
  38:source/Heavy_daisy_control.cpp **** 
  39:source/Heavy_daisy_control.cpp **** /*
  40:source/Heavy_daisy_control.cpp ****  * C Functions
  41:source/Heavy_daisy_control.cpp ****  */
  42:source/Heavy_daisy_control.cpp **** 
  43:source/Heavy_daisy_control.cpp **** extern "C" {
  44:source/Heavy_daisy_control.cpp ****   HV_EXPORT HeavyContextInterface *hv_daisy_control_new(double sampleRate) {
  45:source/Heavy_daisy_control.cpp ****     return new Heavy_daisy_control(sampleRate);
  46:source/Heavy_daisy_control.cpp ****   }
  47:source/Heavy_daisy_control.cpp **** 
  48:source/Heavy_daisy_control.cpp ****   HV_EXPORT HeavyContextInterface *hv_daisy_control_new_with_options(double sampleRate,
  49:source/Heavy_daisy_control.cpp ****       int poolKb, int inQueueKb, int outQueueKb) {
  50:source/Heavy_daisy_control.cpp ****     return new Heavy_daisy_control(sampleRate, poolKb, inQueueKb, outQueueKb);
  51:source/Heavy_daisy_control.cpp ****   }
  52:source/Heavy_daisy_control.cpp **** } // extern "C"
  53:source/Heavy_daisy_control.cpp **** 
  54:source/Heavy_daisy_control.cpp **** 
  55:source/Heavy_daisy_control.cpp **** 
  56:source/Heavy_daisy_control.cpp **** 
  57:source/Heavy_daisy_control.cpp **** 
  58:source/Heavy_daisy_control.cpp **** 
  59:source/Heavy_daisy_control.cpp **** 
  60:source/Heavy_daisy_control.cpp **** /*
  61:source/Heavy_daisy_control.cpp ****  * Class Functions
  62:source/Heavy_daisy_control.cpp ****  */
  63:source/Heavy_daisy_control.cpp **** 
  64:source/Heavy_daisy_control.cpp **** Heavy_daisy_control::Heavy_daisy_control(double sampleRate, int poolKb, int inQueueKb, int outQueue
  65:source/Heavy_daisy_control.cpp ****     : HeavyContext(sampleRate, poolKb, inQueueKb, outQueueKb) {
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s 			page 10


  66:source/Heavy_daisy_control.cpp ****   numBytes += sPhasor_k_init(&sPhasor_CtPFZn4z, 1000.0f, sampleRate);
  67:source/Heavy_daisy_control.cpp ****   numBytes += sVarf_init(&sVarf_xX5dYQQb, 0.0f, 0.0f, false);
  68:source/Heavy_daisy_control.cpp ****   
  69:source/Heavy_daisy_control.cpp **** }
  70:source/Heavy_daisy_control.cpp **** 
  71:source/Heavy_daisy_control.cpp **** Heavy_daisy_control::~Heavy_daisy_control() {
  72:source/Heavy_daisy_control.cpp ****   // nothing to free
  73:source/Heavy_daisy_control.cpp **** }
  74:source/Heavy_daisy_control.cpp **** 
  75:source/Heavy_daisy_control.cpp **** HvTable *Heavy_daisy_control::getTableForHash(hv_uint32_t tableHash) {
 373              		.loc 3 75 70 is_stmt 1 view -0
 374              		.cfi_startproc
 375              		@ args = 0, pretend = 0, frame = 0
 376              		@ frame_needed = 0, uses_anonymous_args = 0
 377              		@ link register save eliminated.
  76:source/Heavy_daisy_control.cpp ****   return nullptr;
 378              		.loc 3 76 3 view .LVU55
  77:source/Heavy_daisy_control.cpp **** }
 379              		.loc 3 77 1 is_stmt 0 view .LVU56
 380 0000 0020     		movs	r0, #0
 381              	.LVL22:
 382              		.loc 3 77 1 view .LVU57
 383 0002 7047     		bx	lr
 384              		.cfi_endproc
 385              	.LFE1000:
 387              		.section	.text._ZN19Heavy_daisy_controlD2Ev,"ax",%progbits
 388              		.align	1
 389              		.p2align 2,,3
 390              		.global	_ZN19Heavy_daisy_controlD2Ev
 391              		.syntax unified
 392              		.thumb
 393              		.thumb_func
 395              	_ZN19Heavy_daisy_controlD2Ev:
 396              	.LVL23:
 397              	.LFB997:
  71:source/Heavy_daisy_control.cpp ****   // nothing to free
 398              		.loc 3 71 1 is_stmt 1 view -0
 399              		.cfi_startproc
 400              		@ args = 0, pretend = 0, frame = 0
 401              		@ frame_needed = 0, uses_anonymous_args = 0
 402              	.LBB63:
  71:source/Heavy_daisy_control.cpp ****   // nothing to free
 403              		.loc 3 71 43 is_stmt 0 view .LVU59
 404 0000 034B     		ldr	r3, .L22
 405              	.LBE63:
  71:source/Heavy_daisy_control.cpp ****   // nothing to free
 406              		.loc 3 71 1 view .LVU60
 407 0002 10B5     		push	{r4, lr}
 408              		.cfi_def_cfa_offset 8
 409              		.cfi_offset 4, -8
 410              		.cfi_offset 14, -4
  71:source/Heavy_daisy_control.cpp ****   // nothing to free
 411              		.loc 3 71 1 view .LVU61
 412 0004 0446     		mov	r4, r0
 413              	.LBB64:
  71:source/Heavy_daisy_control.cpp ****   // nothing to free
 414              		.loc 3 71 43 view .LVU62
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s 			page 11


 415 0006 0360     		str	r3, [r0]
 416 0008 FFF7FEFF 		bl	_ZN12HeavyContextD2Ev
 417              	.LVL24:
  71:source/Heavy_daisy_control.cpp ****   // nothing to free
 418              		.loc 3 71 43 view .LVU63
 419              	.LBE64:
  73:source/Heavy_daisy_control.cpp **** 
 420              		.loc 3 73 1 view .LVU64
 421 000c 2046     		mov	r0, r4
 422 000e 10BD     		pop	{r4, pc}
 423              	.LVL25:
 424              	.L23:
  73:source/Heavy_daisy_control.cpp **** 
 425              		.loc 3 73 1 view .LVU65
 426              		.align	2
 427              	.L22:
 428 0010 08000000 		.word	.LANCHOR0+8
 429              		.cfi_endproc
 430              	.LFE997:
 432              		.global	_ZN19Heavy_daisy_controlD1Ev
 433              		.thumb_set _ZN19Heavy_daisy_controlD1Ev,_ZN19Heavy_daisy_controlD2Ev
 434              		.section	.text._ZN19Heavy_daisy_controlD0Ev,"ax",%progbits
 435              		.align	1
 436              		.p2align 2,,3
 437              		.global	_ZN19Heavy_daisy_controlD0Ev
 438              		.syntax unified
 439              		.thumb
 440              		.thumb_func
 442              	_ZN19Heavy_daisy_controlD0Ev:
 443              	.LVL26:
 444              	.LFB999:
  71:source/Heavy_daisy_control.cpp ****   // nothing to free
 445              		.loc 3 71 1 is_stmt 1 view -0
 446              		.cfi_startproc
 447              		@ args = 0, pretend = 0, frame = 0
 448              		@ frame_needed = 0, uses_anonymous_args = 0
 449              	.LBB65:
 450              	.LBB66:
  71:source/Heavy_daisy_control.cpp ****   // nothing to free
 451              		.loc 3 71 43 is_stmt 0 view .LVU67
 452 0000 054B     		ldr	r3, .L26
 453              	.LBE66:
 454              	.LBE65:
  71:source/Heavy_daisy_control.cpp ****   // nothing to free
 455              		.loc 3 71 1 view .LVU68
 456 0002 10B5     		push	{r4, lr}
 457              		.cfi_def_cfa_offset 8
 458              		.cfi_offset 4, -8
 459              		.cfi_offset 14, -4
  71:source/Heavy_daisy_control.cpp ****   // nothing to free
 460              		.loc 3 71 1 view .LVU69
 461 0004 0446     		mov	r4, r0
 462              	.LVL27:
 463              	.LBB68:
 464              	.LBI65:
  71:source/Heavy_daisy_control.cpp ****   // nothing to free
 465              		.loc 3 71 1 is_stmt 1 view .LVU70
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s 			page 12


 466              	.LBB67:
  71:source/Heavy_daisy_control.cpp ****   // nothing to free
 467              		.loc 3 71 43 is_stmt 0 view .LVU71
 468 0006 0360     		str	r3, [r0]
 469 0008 FFF7FEFF 		bl	_ZN12HeavyContextD2Ev
 470              	.LVL28:
  71:source/Heavy_daisy_control.cpp ****   // nothing to free
 471              		.loc 3 71 43 view .LVU72
 472              	.LBE67:
 473              	.LBE68:
  73:source/Heavy_daisy_control.cpp **** 
 474              		.loc 3 73 1 view .LVU73
 475 000c A021     		movs	r1, #160
 476 000e 2046     		mov	r0, r4
 477 0010 FFF7FEFF 		bl	_ZdlPvj
 478              	.LVL29:
 479 0014 2046     		mov	r0, r4
 480 0016 10BD     		pop	{r4, pc}
 481              	.LVL30:
 482              	.L27:
  73:source/Heavy_daisy_control.cpp **** 
 483              		.loc 3 73 1 view .LVU74
 484              		.align	2
 485              	.L26:
 486 0018 08000000 		.word	.LANCHOR0+8
 487              		.cfi_endproc
 488              	.LFE999:
 490              		.section	.text._ZN19Heavy_daisy_control27cBinop_TJ0Cw5i4_sendMessageEP21HeavyContextInterfaceiPK9H
 491              		.align	1
 492              		.p2align 2,,3
 493              		.global	_ZN19Heavy_daisy_control27cBinop_TJ0Cw5i4_sendMessageEP21HeavyContextInterfaceiPK9HvMessag
 494              		.syntax unified
 495              		.thumb
 496              		.thumb_func
 498              	_ZN19Heavy_daisy_control27cBinop_TJ0Cw5i4_sendMessageEP21HeavyContextInterfaceiPK9HvMessage:
 499              	.LVL31:
 500              	.LFB1003:
  78:source/Heavy_daisy_control.cpp **** 
  79:source/Heavy_daisy_control.cpp **** void Heavy_daisy_control::scheduleMessageForReceiver(hv_uint32_t receiverHash, HvMessage *m) {
  80:source/Heavy_daisy_control.cpp ****   switch (receiverHash) {
  81:source/Heavy_daisy_control.cpp ****     case 0xB2FCD18D: { // ctrl1
  82:source/Heavy_daisy_control.cpp ****       mq_addMessageByTimestamp(&mq, m, 0, &cReceive_GE5qdYgZ_sendMessage);
  83:source/Heavy_daisy_control.cpp ****       break;
  84:source/Heavy_daisy_control.cpp ****     }
  85:source/Heavy_daisy_control.cpp ****     case 0x30F9495D: { // ctrl2
  86:source/Heavy_daisy_control.cpp ****       mq_addMessageByTimestamp(&mq, m, 0, &cReceive_S07AdeHm_sendMessage);
  87:source/Heavy_daisy_control.cpp ****       break;
  88:source/Heavy_daisy_control.cpp ****     }
  89:source/Heavy_daisy_control.cpp ****     default: return;
  90:source/Heavy_daisy_control.cpp ****   }
  91:source/Heavy_daisy_control.cpp **** }
  92:source/Heavy_daisy_control.cpp **** 
  93:source/Heavy_daisy_control.cpp **** int Heavy_daisy_control::getParameterInfo(int index, HvParameterInfo *info) {
  94:source/Heavy_daisy_control.cpp ****   if (info != nullptr) {
  95:source/Heavy_daisy_control.cpp ****     switch (index) {
  96:source/Heavy_daisy_control.cpp ****       case 0: {
  97:source/Heavy_daisy_control.cpp ****         info->name = "ctrl1";
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s 			page 13


  98:source/Heavy_daisy_control.cpp ****         info->hash = 0xB2FCD18D;
  99:source/Heavy_daisy_control.cpp ****         info->type = HvParameterType::HV_PARAM_TYPE_PARAMETER_IN;
 100:source/Heavy_daisy_control.cpp ****         info->minVal = 0.0f;
 101:source/Heavy_daisy_control.cpp ****         info->maxVal = 1.0f;
 102:source/Heavy_daisy_control.cpp ****         info->defaultVal = 0.5f;
 103:source/Heavy_daisy_control.cpp ****         break;
 104:source/Heavy_daisy_control.cpp ****       }
 105:source/Heavy_daisy_control.cpp ****       case 1: {
 106:source/Heavy_daisy_control.cpp ****         info->name = "ctrl2";
 107:source/Heavy_daisy_control.cpp ****         info->hash = 0x30F9495D;
 108:source/Heavy_daisy_control.cpp ****         info->type = HvParameterType::HV_PARAM_TYPE_PARAMETER_IN;
 109:source/Heavy_daisy_control.cpp ****         info->minVal = 0.0f;
 110:source/Heavy_daisy_control.cpp ****         info->maxVal = 1.0f;
 111:source/Heavy_daisy_control.cpp ****         info->defaultVal = 0.5f;
 112:source/Heavy_daisy_control.cpp ****         break;
 113:source/Heavy_daisy_control.cpp ****       }
 114:source/Heavy_daisy_control.cpp ****       default: {
 115:source/Heavy_daisy_control.cpp ****         info->name = "invalid parameter index";
 116:source/Heavy_daisy_control.cpp ****         info->hash = 0;
 117:source/Heavy_daisy_control.cpp ****         info->type = HvParameterType::HV_PARAM_TYPE_PARAMETER_IN;
 118:source/Heavy_daisy_control.cpp ****         info->minVal = 0.0f;
 119:source/Heavy_daisy_control.cpp ****         info->maxVal = 0.0f;
 120:source/Heavy_daisy_control.cpp ****         info->defaultVal = 0.0f;
 121:source/Heavy_daisy_control.cpp ****         break;
 122:source/Heavy_daisy_control.cpp ****       }
 123:source/Heavy_daisy_control.cpp ****     }
 124:source/Heavy_daisy_control.cpp ****   }
 125:source/Heavy_daisy_control.cpp ****   return 2;
 126:source/Heavy_daisy_control.cpp **** }
 127:source/Heavy_daisy_control.cpp **** 
 128:source/Heavy_daisy_control.cpp **** 
 129:source/Heavy_daisy_control.cpp **** 
 130:source/Heavy_daisy_control.cpp **** /*
 131:source/Heavy_daisy_control.cpp ****  * Send Function Implementations
 132:source/Heavy_daisy_control.cpp ****  */
 133:source/Heavy_daisy_control.cpp **** 
 134:source/Heavy_daisy_control.cpp **** 
 135:source/Heavy_daisy_control.cpp **** void Heavy_daisy_control::cBinop_TJ0Cw5i4_sendMessage(HeavyContextInterface *_c, int letIn, const H
 501              		.loc 3 135 113 is_stmt 1 view -0
 502              		.cfi_startproc
 503              		@ args = 0, pretend = 0, frame = 0
 504              		@ frame_needed = 0, uses_anonymous_args = 0
 505              		@ link register save eliminated.
 136:source/Heavy_daisy_control.cpp ****   sPhasor_k_onMessage(_c, &Context(_c)->sPhasor_CtPFZn4z, 0, m);
 506              		.loc 3 136 3 view .LVU76
 135:source/Heavy_daisy_control.cpp ****   sPhasor_k_onMessage(_c, &Context(_c)->sPhasor_CtPFZn4z, 0, m);
 507              		.loc 3 135 113 is_stmt 0 view .LVU77
 508 0000 1346     		mov	r3, r2
 509              		.loc 3 136 22 view .LVU78
 510 0002 00F18801 		add	r1, r0, #136
 511              	.LVL32:
 512              		.loc 3 136 22 view .LVU79
 513 0006 0022     		movs	r2, #0
 514              	.LVL33:
 515              		.loc 3 136 22 view .LVU80
 516 0008 FFF7FEBF 		b	sPhasor_k_onMessage
 517              	.LVL34:
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s 			page 14


 518              		.loc 3 136 22 view .LVU81
 519              		.cfi_endproc
 520              	.LFE1003:
 522              		.section	.text._ZN19Heavy_daisy_control27cBinop_mb7cZkKx_sendMessageEP21HeavyContextInterfaceiPK9H
 523              		.align	1
 524              		.p2align 2,,3
 525              		.global	_ZN19Heavy_daisy_control27cBinop_mb7cZkKx_sendMessageEP21HeavyContextInterfaceiPK9HvMessag
 526              		.syntax unified
 527              		.thumb
 528              		.thumb_func
 530              	_ZN19Heavy_daisy_control27cBinop_mb7cZkKx_sendMessageEP21HeavyContextInterfaceiPK9HvMessage:
 531              	.LVL35:
 532              	.LFB1004:
 137:source/Heavy_daisy_control.cpp **** }
 138:source/Heavy_daisy_control.cpp **** 
 139:source/Heavy_daisy_control.cpp **** void Heavy_daisy_control::cBinop_mb7cZkKx_sendMessage(HeavyContextInterface *_c, int letIn, const H
 533              		.loc 3 139 113 is_stmt 1 view -0
 534              		.cfi_startproc
 535              		@ args = 0, pretend = 0, frame = 0
 536              		@ frame_needed = 0, uses_anonymous_args = 0
 537              		@ link register save eliminated.
 140:source/Heavy_daisy_control.cpp ****   sVarf_onMessage(_c, &Context(_c)->sVarf_xX5dYQQb, m);
 538              		.loc 3 140 3 view .LVU83
 539              		.loc 3 140 18 is_stmt 0 view .LVU84
 540 0000 00F19C01 		add	r1, r0, #156
 541              	.LVL36:
 542              		.loc 3 140 18 view .LVU85
 543 0004 FFF7FEBF 		b	sVarf_onMessage
 544              	.LVL37:
 545              		.loc 3 140 18 view .LVU86
 546              		.cfi_endproc
 547              	.LFE1004:
 549              		.section	.text._ZN19Heavy_daisy_control29cReceive_GE5qdYgZ_sendMessageEP21HeavyContextInterfaceiPK
 550              		.align	1
 551              		.p2align 2,,3
 552              		.global	_ZN19Heavy_daisy_control29cReceive_GE5qdYgZ_sendMessageEP21HeavyContextInterfaceiPK9HvMess
 553              		.syntax unified
 554              		.thumb
 555              		.thumb_func
 557              	_ZN19Heavy_daisy_control29cReceive_GE5qdYgZ_sendMessageEP21HeavyContextInterfaceiPK9HvMessage:
 558              	.LVL38:
 559              	.LFB1005:
 141:source/Heavy_daisy_control.cpp **** }
 142:source/Heavy_daisy_control.cpp **** 
 143:source/Heavy_daisy_control.cpp **** void Heavy_daisy_control::cReceive_GE5qdYgZ_sendMessage(HeavyContextInterface *_c, int letIn, const
 560              		.loc 3 143 115 is_stmt 1 view -0
 561              		.cfi_startproc
 562              		@ args = 0, pretend = 0, frame = 0
 563              		@ frame_needed = 0, uses_anonymous_args = 0
 144:source/Heavy_daisy_control.cpp ****   cBinop_k_onMessage(_c, NULL, HV_BINOP_MULTIPLY, 1000.0f, 0, m, &cBinop_TJ0Cw5i4_sendMessage);
 564              		.loc 3 144 3 view .LVU88
 143:source/Heavy_daisy_control.cpp ****   cBinop_k_onMessage(_c, NULL, HV_BINOP_MULTIPLY, 1000.0f, 0, m, &cBinop_TJ0Cw5i4_sendMessage);
 565              		.loc 3 143 115 is_stmt 0 view .LVU89
 566 0000 10B5     		push	{r4, lr}
 567              		.cfi_def_cfa_offset 8
 568              		.cfi_offset 4, -8
 569              		.cfi_offset 14, -4
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s 			page 15


 570 0002 1146     		mov	r1, r2
 571              	.LVL39:
 143:source/Heavy_daisy_control.cpp ****   cBinop_k_onMessage(_c, NULL, HV_BINOP_MULTIPLY, 1000.0f, 0, m, &cBinop_TJ0Cw5i4_sendMessage);
 572              		.loc 3 143 115 view .LVU90
 573 0004 82B0     		sub	sp, sp, #8
 574              		.cfi_def_cfa_offset 16
 575              		.loc 3 144 21 view .LVU91
 576 0006 0023     		movs	r3, #0
 577 0008 054C     		ldr	r4, .L32
 578 000a 9FED060A 		vldr.32	s0, .L32+4
 579 000e 0222     		movs	r2, #2
 580              	.LVL40:
 581              		.loc 3 144 21 view .LVU92
 582 0010 CDE90014 		strd	r1, r4, [sp]
 583 0014 1946     		mov	r1, r3
 584              	.LVL41:
 585              		.loc 3 144 21 view .LVU93
 586 0016 FFF7FEFF 		bl	cBinop_k_onMessage
 587              	.LVL42:
 145:source/Heavy_daisy_control.cpp **** }
 588              		.loc 3 145 1 view .LVU94
 589 001a 02B0     		add	sp, sp, #8
 590              		.cfi_def_cfa_offset 8
 591              		@ sp needed
 592 001c 10BD     		pop	{r4, pc}
 593              	.L33:
 594 001e 00BF     		.align	2
 595              	.L32:
 596 0020 00000000 		.word	_ZN19Heavy_daisy_control27cBinop_TJ0Cw5i4_sendMessageEP21HeavyContextInterfaceiPK9HvMessage
 597 0024 00007A44 		.word	1148846080
 598              		.cfi_endproc
 599              	.LFE1005:
 601              		.section	.text._ZN19Heavy_daisy_control29cReceive_S07AdeHm_sendMessageEP21HeavyContextInterfaceiPK
 602              		.align	1
 603              		.p2align 2,,3
 604              		.global	_ZN19Heavy_daisy_control29cReceive_S07AdeHm_sendMessageEP21HeavyContextInterfaceiPK9HvMess
 605              		.syntax unified
 606              		.thumb
 607              		.thumb_func
 609              	_ZN19Heavy_daisy_control29cReceive_S07AdeHm_sendMessageEP21HeavyContextInterfaceiPK9HvMessage:
 610              	.LVL43:
 611              	.LFB1006:
 146:source/Heavy_daisy_control.cpp **** 
 147:source/Heavy_daisy_control.cpp **** void Heavy_daisy_control::cReceive_S07AdeHm_sendMessage(HeavyContextInterface *_c, int letIn, const
 612              		.loc 3 147 115 is_stmt 1 view -0
 613              		.cfi_startproc
 614              		@ args = 0, pretend = 0, frame = 0
 615              		@ frame_needed = 0, uses_anonymous_args = 0
 148:source/Heavy_daisy_control.cpp ****   cBinop_k_onMessage(_c, NULL, HV_BINOP_MULTIPLY, 1000.0f, 0, m, &cBinop_mb7cZkKx_sendMessage);
 616              		.loc 3 148 3 view .LVU96
 147:source/Heavy_daisy_control.cpp ****   cBinop_k_onMessage(_c, NULL, HV_BINOP_MULTIPLY, 1000.0f, 0, m, &cBinop_mb7cZkKx_sendMessage);
 617              		.loc 3 147 115 is_stmt 0 view .LVU97
 618 0000 10B5     		push	{r4, lr}
 619              		.cfi_def_cfa_offset 8
 620              		.cfi_offset 4, -8
 621              		.cfi_offset 14, -4
 622 0002 1146     		mov	r1, r2
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s 			page 16


 623              	.LVL44:
 147:source/Heavy_daisy_control.cpp ****   cBinop_k_onMessage(_c, NULL, HV_BINOP_MULTIPLY, 1000.0f, 0, m, &cBinop_mb7cZkKx_sendMessage);
 624              		.loc 3 147 115 view .LVU98
 625 0004 82B0     		sub	sp, sp, #8
 626              		.cfi_def_cfa_offset 16
 627              		.loc 3 148 21 view .LVU99
 628 0006 0023     		movs	r3, #0
 629 0008 054C     		ldr	r4, .L36
 630 000a 9FED060A 		vldr.32	s0, .L36+4
 631 000e 0222     		movs	r2, #2
 632              	.LVL45:
 633              		.loc 3 148 21 view .LVU100
 634 0010 CDE90014 		strd	r1, r4, [sp]
 635 0014 1946     		mov	r1, r3
 636              	.LVL46:
 637              		.loc 3 148 21 view .LVU101
 638 0016 FFF7FEFF 		bl	cBinop_k_onMessage
 639              	.LVL47:
 149:source/Heavy_daisy_control.cpp **** }
 640              		.loc 3 149 1 view .LVU102
 641 001a 02B0     		add	sp, sp, #8
 642              		.cfi_def_cfa_offset 8
 643              		@ sp needed
 644 001c 10BD     		pop	{r4, pc}
 645              	.L37:
 646 001e 00BF     		.align	2
 647              	.L36:
 648 0020 00000000 		.word	_ZN19Heavy_daisy_control27cBinop_mb7cZkKx_sendMessageEP21HeavyContextInterfaceiPK9HvMessage
 649 0024 00007A44 		.word	1148846080
 650              		.cfi_endproc
 651              	.LFE1006:
 653              		.section	.text._ZN19Heavy_daisy_control13processInlineEPfS0_i,"ax",%progbits
 654              		.align	1
 655              		.p2align 2,,3
 656              		.global	_ZN19Heavy_daisy_control13processInlineEPfS0_i
 657              		.syntax unified
 658              		.thumb
 659              		.thumb_func
 661              	_ZN19Heavy_daisy_control13processInlineEPfS0_i:
 662              	.LVL48:
 663              	.LFB1008:
 150:source/Heavy_daisy_control.cpp **** 
 151:source/Heavy_daisy_control.cpp **** 
 152:source/Heavy_daisy_control.cpp **** 
 153:source/Heavy_daisy_control.cpp **** 
 154:source/Heavy_daisy_control.cpp **** /*
 155:source/Heavy_daisy_control.cpp ****  * Context Process Implementation
 156:source/Heavy_daisy_control.cpp ****  */
 157:source/Heavy_daisy_control.cpp **** 
 158:source/Heavy_daisy_control.cpp **** int Heavy_daisy_control::process(float **inputBuffers, float **outputBuffers, int n) {
 159:source/Heavy_daisy_control.cpp ****   while (hLp_hasData(&inQueue)) {
 160:source/Heavy_daisy_control.cpp ****     hv_uint32_t numBytes = 0;
 161:source/Heavy_daisy_control.cpp ****     ReceiverMessagePair *p = reinterpret_cast<ReceiverMessagePair *>(hLp_getReadBuffer(&inQueue, &n
 162:source/Heavy_daisy_control.cpp ****     hv_assert(numBytes >= sizeof(ReceiverMessagePair));
 163:source/Heavy_daisy_control.cpp ****     scheduleMessageForReceiver(p->receiverHash, &p->msg);
 164:source/Heavy_daisy_control.cpp ****     hLp_consume(&inQueue);
 165:source/Heavy_daisy_control.cpp ****   }
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s 			page 17


 166:source/Heavy_daisy_control.cpp ****   const int n4 = n & ~HV_N_SIMD_MASK; // ensure that the block size is a multiple of HV_N_SIMD
 167:source/Heavy_daisy_control.cpp **** 
 168:source/Heavy_daisy_control.cpp ****   // temporary signal vars
 169:source/Heavy_daisy_control.cpp ****   hv_bufferf_t Bf0, Bf1, Bf2, Bf3, Bf4;
 170:source/Heavy_daisy_control.cpp **** 
 171:source/Heavy_daisy_control.cpp ****   // input and output vars
 172:source/Heavy_daisy_control.cpp ****   hv_bufferf_t O0, O1;
 173:source/Heavy_daisy_control.cpp **** 
 174:source/Heavy_daisy_control.cpp ****   // declare and init the zero buffer
 175:source/Heavy_daisy_control.cpp ****   hv_bufferf_t ZERO; __hv_zero_f(VOf(ZERO));
 176:source/Heavy_daisy_control.cpp **** 
 177:source/Heavy_daisy_control.cpp ****   hv_uint32_t nextBlock = blockStartTimestamp;
 178:source/Heavy_daisy_control.cpp ****   for (int n = 0; n < n4; n += HV_N_SIMD) {
 179:source/Heavy_daisy_control.cpp **** 
 180:source/Heavy_daisy_control.cpp ****     // process all of the messages for this block
 181:source/Heavy_daisy_control.cpp ****     nextBlock += HV_N_SIMD;
 182:source/Heavy_daisy_control.cpp ****     while (mq_hasMessageBefore(&mq, nextBlock)) {
 183:source/Heavy_daisy_control.cpp ****       MessageNode *const node = mq_peek(&mq);
 184:source/Heavy_daisy_control.cpp ****       node->sendMessage(this, node->let, node->m);
 185:source/Heavy_daisy_control.cpp ****       mq_pop(&mq);
 186:source/Heavy_daisy_control.cpp ****     }
 187:source/Heavy_daisy_control.cpp **** 
 188:source/Heavy_daisy_control.cpp ****     
 189:source/Heavy_daisy_control.cpp **** 
 190:source/Heavy_daisy_control.cpp ****     // zero output buffers
 191:source/Heavy_daisy_control.cpp ****     __hv_zero_f(VOf(O0));
 192:source/Heavy_daisy_control.cpp ****     __hv_zero_f(VOf(O1));
 193:source/Heavy_daisy_control.cpp **** 
 194:source/Heavy_daisy_control.cpp ****     // process all signal functions
 195:source/Heavy_daisy_control.cpp ****     __hv_phasor_k_f(&sPhasor_CtPFZn4z, VOf(Bf0));
 196:source/Heavy_daisy_control.cpp ****     __hv_var_k_f(VOf(Bf1), 0.5f, 0.5f, 0.5f, 0.5f, 0.5f, 0.5f, 0.5f, 0.5f);
 197:source/Heavy_daisy_control.cpp ****     __hv_sub_f(VIf(Bf0), VIf(Bf1), VOf(Bf1));
 198:source/Heavy_daisy_control.cpp ****     __hv_abs_f(VIf(Bf1), VOf(Bf1));
 199:source/Heavy_daisy_control.cpp ****     __hv_var_k_f(VOf(Bf0), 0.25f, 0.25f, 0.25f, 0.25f, 0.25f, 0.25f, 0.25f, 0.25f);
 200:source/Heavy_daisy_control.cpp ****     __hv_sub_f(VIf(Bf1), VIf(Bf0), VOf(Bf0));
 201:source/Heavy_daisy_control.cpp ****     __hv_var_k_f(VOf(Bf1), 6.283185307179586f, 6.283185307179586f, 6.283185307179586f, 6.2831853071
 202:source/Heavy_daisy_control.cpp ****     __hv_mul_f(VIf(Bf0), VIf(Bf1), VOf(Bf1));
 203:source/Heavy_daisy_control.cpp ****     __hv_mul_f(VIf(Bf1), VIf(Bf1), VOf(Bf0));
 204:source/Heavy_daisy_control.cpp ****     __hv_mul_f(VIf(Bf1), VIf(Bf0), VOf(Bf2));
 205:source/Heavy_daisy_control.cpp ****     __hv_mul_f(VIf(Bf2), VIf(Bf0), VOf(Bf0));
 206:source/Heavy_daisy_control.cpp ****     __hv_var_k_f(VOf(Bf3), 0.007833333333333f, 0.007833333333333f, 0.007833333333333f, 0.0078333333
 207:source/Heavy_daisy_control.cpp ****     __hv_var_k_f(VOf(Bf4), -0.166666666666667f, -0.166666666666667f, -0.166666666666667f, -0.166666
 208:source/Heavy_daisy_control.cpp ****     __hv_fma_f(VIf(Bf2), VIf(Bf4), VIf(Bf1), VOf(Bf1));
 209:source/Heavy_daisy_control.cpp ****     __hv_fma_f(VIf(Bf0), VIf(Bf3), VIf(Bf1), VOf(Bf1));
 210:source/Heavy_daisy_control.cpp ****     __hv_varread_f(&sVarf_xX5dYQQb, VOf(Bf3));
 211:source/Heavy_daisy_control.cpp ****     __hv_mul_f(VIf(Bf1), VIf(Bf3), VOf(Bf3));
 212:source/Heavy_daisy_control.cpp ****     __hv_add_f(VIf(Bf3), VIf(O1), VOf(O1));
 213:source/Heavy_daisy_control.cpp ****     __hv_add_f(VIf(Bf3), VIf(O0), VOf(O0));
 214:source/Heavy_daisy_control.cpp **** 
 215:source/Heavy_daisy_control.cpp ****     // save output vars to output buffer
 216:source/Heavy_daisy_control.cpp ****     __hv_store_f(outputBuffers[0]+n, VIf(O0));
 217:source/Heavy_daisy_control.cpp ****     __hv_store_f(outputBuffers[1]+n, VIf(O1));
 218:source/Heavy_daisy_control.cpp ****   }
 219:source/Heavy_daisy_control.cpp **** 
 220:source/Heavy_daisy_control.cpp ****   blockStartTimestamp = nextBlock;
 221:source/Heavy_daisy_control.cpp **** 
 222:source/Heavy_daisy_control.cpp ****   return n4; // return the number of frames processed
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s 			page 18


 223:source/Heavy_daisy_control.cpp **** }
 224:source/Heavy_daisy_control.cpp **** 
 225:source/Heavy_daisy_control.cpp **** int Heavy_daisy_control::processInline(float *inputBuffers, float *outputBuffers, int n4) {
 664              		.loc 3 225 91 is_stmt 1 view -0
 665              		.cfi_startproc
 666              		@ args = 0, pretend = 0, frame = 0
 667              		@ frame_needed = 1, uses_anonymous_args = 0
 226:source/Heavy_daisy_control.cpp ****   hv_assert(!(n4 & HV_N_SIMD_MASK)); // ensure that n4 is a multiple of HV_N_SIMD
 668              		.loc 3 226 3 view .LVU104
 227:source/Heavy_daisy_control.cpp **** 
 228:source/Heavy_daisy_control.cpp ****   // define the heavy input buffer for 0 channel(s)
 229:source/Heavy_daisy_control.cpp ****   float **const bIn = NULL;
 669              		.loc 3 229 3 view .LVU105
 230:source/Heavy_daisy_control.cpp **** 
 231:source/Heavy_daisy_control.cpp ****   // define the heavy output buffer for 2 channel(s)
 232:source/Heavy_daisy_control.cpp ****   float **const bOut = reinterpret_cast<float **>(hv_alloca(2*sizeof(float *)));
 670              		.loc 3 232 3 view .LVU106
 225:source/Heavy_daisy_control.cpp ****   hv_assert(!(n4 & HV_N_SIMD_MASK)); // ensure that n4 is a multiple of HV_N_SIMD
 671              		.loc 3 225 91 is_stmt 0 view .LVU107
 672 0000 B0B5     		push	{r4, r5, r7, lr}
 673              		.cfi_def_cfa_offset 16
 674              		.cfi_offset 4, -16
 675              		.cfi_offset 5, -12
 676              		.cfi_offset 7, -8
 677              		.cfi_offset 14, -4
 678 0002 1146     		mov	r1, r2
 679              	.LVL49:
 225:source/Heavy_daisy_control.cpp ****   hv_assert(!(n4 & HV_N_SIMD_MASK)); // ensure that n4 is a multiple of HV_N_SIMD
 680              		.loc 3 225 91 view .LVU108
 681 0004 00AF     		add	r7, sp, #0
 682              		.cfi_def_cfa_register 7
 683              		.loc 3 232 51 view .LVU109
 684 0006 82B0     		sub	sp, sp, #8
 233:source/Heavy_daisy_control.cpp ****   bOut[0] = outputBuffers+(0*n4);
 234:source/Heavy_daisy_control.cpp ****   bOut[1] = outputBuffers+(1*n4);
 235:source/Heavy_daisy_control.cpp **** 
 236:source/Heavy_daisy_control.cpp ****   int n = process(bIn, bOut, n4);
 685              		.loc 3 236 32 view .LVU110
 686 0008 0568     		ldr	r5, [r0]
 234:source/Heavy_daisy_control.cpp **** 
 687              		.loc 3 234 26 view .LVU111
 688 000a 01EB8304 		add	r4, r1, r3, lsl #2
 232:source/Heavy_daisy_control.cpp ****   bOut[0] = outputBuffers+(0*n4);
 689              		.loc 3 232 51 view .LVU112
 690 000e 6A46     		mov	r2, sp
 691              	.LVL50:
 233:source/Heavy_daisy_control.cpp ****   bOut[0] = outputBuffers+(0*n4);
 692              		.loc 3 233 3 is_stmt 1 view .LVU113
 693              		.loc 3 236 18 is_stmt 0 view .LVU114
 694 0010 2D6C     		ldr	r5, [r5, #64]
 234:source/Heavy_daisy_control.cpp **** 
 695              		.loc 3 234 11 view .LVU115
 696 0012 C2E90014 		strd	r1, r4, [r2]
 697              		.loc 3 236 3 is_stmt 1 view .LVU116
 698              		.loc 3 236 18 is_stmt 0 view .LVU117
 699 0016 0021     		movs	r1, #0
 700              	.LVL51:
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s 			page 19


 701              		.loc 3 236 18 view .LVU118
 702 0018 A847     		blx	r5
 703              	.LVL52:
 237:source/Heavy_daisy_control.cpp ****   return n;
 704              		.loc 3 237 3 is_stmt 1 view .LVU119
 238:source/Heavy_daisy_control.cpp **** }
 705              		.loc 3 238 1 is_stmt 0 view .LVU120
 706 001a BD46     		mov	sp, r7
 707              		.cfi_def_cfa_register 13
 708              	.LVL53:
 709              		.loc 3 238 1 view .LVU121
 710              		@ sp needed
 711 001c B0BD     		pop	{r4, r5, r7, pc}
 712              		.cfi_endproc
 713              	.LFE1008:
 715 001e 00BF     		.section	.rodata._ZN19Heavy_daisy_control24processInlineInterleavedEPfS0_i.str1.4,"aMS",%progbits,
 716              		.align	2
 717              	.LC1:
 718 0000 6E342026 		.ascii	"n4 & ~(1-1)\000"
 718      207E2831 
 718      2D312900 
 719              		.align	2
 720              	.LC2:
 721 000c 76697274 		.ascii	"virtual int Heavy_daisy_control::processInlineInter"
 721      75616C20 
 721      696E7420 
 721      48656176 
 721      795F6461 
 722 003f 6C656176 		.ascii	"leaved(float*, float*, int)\000"
 722      65642866 
 722      6C6F6174 
 722      2A2C2066 
 722      6C6F6174 
 723 005b 00       		.align	2
 724              	.LC3:
 725 005c 736F7572 		.ascii	"source/Heavy_daisy_control.cpp\000"
 725      63652F48 
 725      65617679 
 725      5F646169 
 725      73795F63 
 726              		.section	.text._ZN19Heavy_daisy_control24processInlineInterleavedEPfS0_i,"ax",%progbits
 727              		.align	1
 728              		.p2align 2,,3
 729              		.global	_ZN19Heavy_daisy_control24processInlineInterleavedEPfS0_i
 730              		.syntax unified
 731              		.thumb
 732              		.thumb_func
 734              	_ZN19Heavy_daisy_control24processInlineInterleavedEPfS0_i:
 735              	.LVL54:
 736              	.LFB1009:
 239:source/Heavy_daisy_control.cpp **** 
 240:source/Heavy_daisy_control.cpp **** int Heavy_daisy_control::processInlineInterleaved(float *inputBuffers, float *outputBuffers, int n4
 737              		.loc 3 240 102 is_stmt 1 view -0
 738              		.cfi_startproc
 739              		@ args = 0, pretend = 0, frame = 0
 740              		@ frame_needed = 1, uses_anonymous_args = 0
 241:source/Heavy_daisy_control.cpp ****   hv_assert(n4 & ~HV_N_SIMD_MASK); // ensure that n4 is a multiple of HV_N_SIMD
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s 			page 20


 741              		.loc 3 241 3 view .LVU123
 240:source/Heavy_daisy_control.cpp ****   hv_assert(n4 & ~HV_N_SIMD_MASK); // ensure that n4 is a multiple of HV_N_SIMD
 742              		.loc 3 240 102 is_stmt 0 view .LVU124
 743 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 744              		.cfi_def_cfa_offset 32
 745              		.cfi_offset 3, -32
 746              		.cfi_offset 4, -28
 747              		.cfi_offset 5, -24
 748              		.cfi_offset 6, -20
 749              		.cfi_offset 7, -16
 750              		.cfi_offset 8, -12
 751              		.cfi_offset 9, -8
 752              		.cfi_offset 14, -4
 753 0004 00AF     		add	r7, sp, #0
 754              		.cfi_def_cfa_register 7
 755              		.loc 3 241 3 view .LVU125
 756 0006 2BB3     		cbz	r3, .L48
 242:source/Heavy_daisy_control.cpp **** 
 243:source/Heavy_daisy_control.cpp ****   // define the heavy input buffer for 0 channel(s), uninterleave
 244:source/Heavy_daisy_control.cpp ****   float *const bIn = NULL;
 757              		.loc 3 244 3 is_stmt 1 view .LVU126
 758              	.LVL55:
 245:source/Heavy_daisy_control.cpp **** 
 246:source/Heavy_daisy_control.cpp ****   // define the heavy output buffer for 2 channel(s)
 247:source/Heavy_daisy_control.cpp ****   float *const bOut = reinterpret_cast<float *>(hv_alloca(2*n4*sizeof(float)));
 759              		.loc 3 247 3 view .LVU127
 760 0008 1646     		mov	r6, r2
 761              		.loc 3 247 49 is_stmt 0 view .LVU128
 762 000a 6A46     		mov	r2, sp
 763              	.LVL56:
 248:source/Heavy_daisy_control.cpp **** 
 249:source/Heavy_daisy_control.cpp ****   int n = processInline(bIn, bOut, n4);
 764              		.loc 3 249 24 view .LVU129
 765 000c 0021     		movs	r1, #0
 766              	.LVL57:
 767              		.loc 3 249 24 view .LVU130
 768 000e 1D46     		mov	r5, r3
 247:source/Heavy_daisy_control.cpp **** 
 769              		.loc 3 247 49 view .LVU131
 770 0010 A2EBC302 		sub	r2, r2, r3, lsl #3
 771 0014 4FEA8509 		lsl	r9, r5, #2
 772 0018 9546     		mov	sp, r2
 773              		.loc 3 249 38 view .LVU132
 774 001a 0268     		ldr	r2, [r0]
 247:source/Heavy_daisy_control.cpp **** 
 775              		.loc 3 247 49 view .LVU133
 776 001c E846     		mov	r8, sp
 777              	.LVL58:
 778              		.loc 3 249 3 is_stmt 1 view .LVU134
 779              		.loc 3 249 24 is_stmt 0 view .LVU135
 780 001e 546C     		ldr	r4, [r2, #68]
 781 0020 4246     		mov	r2, r8
 782 0022 A047     		blx	r4
 783              	.LVL59:
 784              		.loc 3 249 24 view .LVU136
 785 0024 0023     		movs	r3, #0
 786 0026 08EB8504 		add	r4, r8, r5, lsl #2
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s 			page 21


 787              	.LVL60:
 250:source/Heavy_daisy_control.cpp **** 
 251:source/Heavy_daisy_control.cpp ****   // interleave the heavy output into the output buffer
 252:source/Heavy_daisy_control.cpp ****   #if HV_SIMD_AVX
 253:source/Heavy_daisy_control.cpp ****   for (int i = 0, j = 0; j < n4; j += 8, i += 16) {
 254:source/Heavy_daisy_control.cpp ****     __m256 x = _mm256_load_ps(bOut+j);    // LLLLLLLL
 255:source/Heavy_daisy_control.cpp ****     __m256 y = _mm256_load_ps(bOut+n4+j); // RRRRRRRR
 256:source/Heavy_daisy_control.cpp ****     __m256 a = _mm256_unpacklo_ps(x, y);  // LRLRLRLR
 257:source/Heavy_daisy_control.cpp ****     __m256 b = _mm256_unpackhi_ps(x, y);  // LRLRLRLR
 258:source/Heavy_daisy_control.cpp ****     _mm256_store_ps(outputBuffers+i, a);
 259:source/Heavy_daisy_control.cpp ****     _mm256_store_ps(outputBuffers+8+i, b);
 260:source/Heavy_daisy_control.cpp ****   }
 261:source/Heavy_daisy_control.cpp ****   #elif HV_SIMD_SSE
 262:source/Heavy_daisy_control.cpp ****   for (int i = 0, j = 0; j < n4; j += 4, i += 8) {
 263:source/Heavy_daisy_control.cpp ****     __m128 x = _mm_load_ps(bOut+j);    // LLLL
 264:source/Heavy_daisy_control.cpp ****     __m128 y = _mm_load_ps(bOut+n4+j); // RRRR
 265:source/Heavy_daisy_control.cpp ****     __m128 a = _mm_unpacklo_ps(x, y);  // LRLR
 266:source/Heavy_daisy_control.cpp ****     __m128 b = _mm_unpackhi_ps(x, y);  // LRLR
 267:source/Heavy_daisy_control.cpp ****     _mm_store_ps(outputBuffers+i, a);
 268:source/Heavy_daisy_control.cpp ****     _mm_store_ps(outputBuffers+4+i, b);
 269:source/Heavy_daisy_control.cpp ****   }
 270:source/Heavy_daisy_control.cpp ****   #elif HV_SIMD_NEON
 271:source/Heavy_daisy_control.cpp ****   // https://community.arm.com/groups/processors/blog/2012/03/13/coding-for-neon--part-5-rearrangin
 272:source/Heavy_daisy_control.cpp ****   for (int i = 0, j = 0; j < n4; j += 4, i += 8) {
 273:source/Heavy_daisy_control.cpp ****     float32x4_t x = vld1q_f32(bOut+j);
 274:source/Heavy_daisy_control.cpp ****     float32x4_t y = vld1q_f32(bOut+n4+j);
 275:source/Heavy_daisy_control.cpp ****     float32x4x2_t z = {x, y};
 276:source/Heavy_daisy_control.cpp ****     vst2q_f32(outputBuffers+i, z); // interleave and store
 277:source/Heavy_daisy_control.cpp ****   }
 278:source/Heavy_daisy_control.cpp ****   #else // HV_SIMD_NONE
 279:source/Heavy_daisy_control.cpp ****   for (int i = 0; i < 2; ++i) {
 788              		.loc 3 279 3 is_stmt 1 view .LVU137
 789              	.LBB69:
 790              		.loc 3 279 21 view .LVU138
 791              		.loc 3 279 12 is_stmt 0 view .LVU139
 792 002a 1A46     		mov	r2, r3
 793              	.LVL61:
 794              	.L44:
 795              	.LBB70:
 280:source/Heavy_daisy_control.cpp ****     for (int j = 0; j < n4; ++j) {
 796              		.loc 3 280 23 is_stmt 1 view .LVU140
 797 002c 002D     		cmp	r5, #0
 798 002e 09DD     		ble	.L42
 799 0030 08EB8301 		add	r1, r8, r3, lsl #2
 800 0034 06EB820C 		add	ip, r6, r2, lsl #2
 801              	.LVL62:
 802              	.L43:
 281:source/Heavy_daisy_control.cpp ****       outputBuffers[i+2*j] = bOut[i*n4+j];
 803              		.loc 3 281 7 discriminator 2 view .LVU141
 804              		.loc 3 281 41 is_stmt 0 discriminator 2 view .LVU142
 805 0038 51F804EB 		ldr	lr, [r1], #4	@ float
 280:source/Heavy_daisy_control.cpp ****     for (int j = 0; j < n4; ++j) {
 806              		.loc 3 280 23 discriminator 2 view .LVU143
 807 003c A142     		cmp	r1, r4
 808              		.loc 3 281 28 discriminator 2 view .LVU144
 809 003e 4CF808EB 		str	lr, [ip], #8	@ float
 280:source/Heavy_daisy_control.cpp ****     for (int j = 0; j < n4; ++j) {
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s 			page 22


 810              		.loc 3 280 5 is_stmt 1 discriminator 2 view .LVU145
 280:source/Heavy_daisy_control.cpp ****     for (int j = 0; j < n4; ++j) {
 811              		.loc 3 280 23 discriminator 2 view .LVU146
 812 0042 F9D1     		bne	.L43
 813              	.L42:
 280:source/Heavy_daisy_control.cpp ****     for (int j = 0; j < n4; ++j) {
 814              		.loc 3 280 23 is_stmt 0 discriminator 2 view .LVU147
 815              	.LBE70:
 279:source/Heavy_daisy_control.cpp ****     for (int j = 0; j < n4; ++j) {
 816              		.loc 3 279 3 is_stmt 1 view .LVU148
 817              	.LVL63:
 279:source/Heavy_daisy_control.cpp ****     for (int j = 0; j < n4; ++j) {
 818              		.loc 3 279 21 view .LVU149
 819 0044 2B44     		add	r3, r3, r5
 820 0046 4C44     		add	r4, r4, r9
 821 0048 12B1     		cbz	r2, .L45
 822              	.LBE69:
 282:source/Heavy_daisy_control.cpp ****     }
 283:source/Heavy_daisy_control.cpp ****   }
 284:source/Heavy_daisy_control.cpp ****   #endif
 285:source/Heavy_daisy_control.cpp **** 
 286:source/Heavy_daisy_control.cpp ****   return n;
 823              		.loc 3 286 3 view .LVU150
 287:source/Heavy_daisy_control.cpp **** }
 824              		.loc 3 287 1 is_stmt 0 view .LVU151
 825 004a BD46     		mov	sp, r7
 826              		.cfi_remember_state
 827              		.cfi_def_cfa_register 13
 828              		@ sp needed
 829 004c BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 830              	.LVL64:
 831              	.L45:
 832              		.cfi_restore_state
 833              	.LBB71:
 834              		.loc 3 287 1 view .LVU152
 835 0050 0122     		movs	r2, #1
 836              	.LVL65:
 837              		.loc 3 287 1 view .LVU153
 838 0052 EBE7     		b	.L44
 839              	.LVL66:
 840              	.L48:
 841              		.loc 3 287 1 view .LVU154
 842              	.LBE71:
 241:source/Heavy_daisy_control.cpp **** 
 843              		.loc 3 241 3 discriminator 1 view .LVU155
 844 0054 024B     		ldr	r3, .L49
 845              	.LVL67:
 241:source/Heavy_daisy_control.cpp **** 
 846              		.loc 3 241 3 discriminator 1 view .LVU156
 847 0056 F121     		movs	r1, #241
 848              	.LVL68:
 241:source/Heavy_daisy_control.cpp **** 
 849              		.loc 3 241 3 discriminator 1 view .LVU157
 850 0058 024A     		ldr	r2, .L49+4
 851              	.LVL69:
 241:source/Heavy_daisy_control.cpp **** 
 852              		.loc 3 241 3 discriminator 1 view .LVU158
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s 			page 23


 853 005a 0348     		ldr	r0, .L49+8
 854              	.LVL70:
 241:source/Heavy_daisy_control.cpp **** 
 855              		.loc 3 241 3 discriminator 1 view .LVU159
 856 005c FFF7FEFF 		bl	__assert_func
 857              	.LVL71:
 858              	.L50:
 859              		.align	2
 860              	.L49:
 861 0060 00000000 		.word	.LC1
 862 0064 0C000000 		.word	.LC2
 863 0068 5C000000 		.word	.LC3
 864              		.cfi_endproc
 865              	.LFE1009:
 867              		.section	.text._ZN12HeavyContext21millisecondsToSamplesEf,"axG",%progbits,_ZN12HeavyContext21milli
 868              		.align	1
 869              		.p2align 2,,3
 870              		.weak	_ZN12HeavyContext21millisecondsToSamplesEf
 871              		.syntax unified
 872              		.thumb
 873              		.thumb_func
 875              	_ZN12HeavyContext21millisecondsToSamplesEf:
 876              	.LVL72:
 877              	.LFB969:
  39:source/HeavyContext.hpp **** 
 878              		.loc 1 39 15 is_stmt 1 view -0
 879              		.cfi_startproc
 880              		@ args = 0, pretend = 0, frame = 0
 881              		@ frame_needed = 0, uses_anonymous_args = 0
 882              		@ link register save eliminated.
  39:source/HeavyContext.hpp **** 
 883              		.loc 1 39 58 view .LVU161
  39:source/HeavyContext.hpp **** 
 884              		.loc 1 39 80 is_stmt 0 view .LVU162
 885 0000 DFED0B7A 		vldr.32	s15, .L52+8
  39:source/HeavyContext.hpp **** 
 886              		.loc 1 39 97 view .LVU163
 887 0004 90ED025B 		vldr.64	d5, [r0, #8]
  39:source/HeavyContext.hpp **** 
 888              		.loc 1 39 80 view .LVU164
 889 0008 87FE800A 		vmaxnm.f32	s0, s15, s0
 890              	.LVL73:
  39:source/HeavyContext.hpp **** 
 891              		.loc 1 39 80 view .LVU165
 892 000c B7EEC00A 		vcvt.f64.f32	d0, s0
  39:source/HeavyContext.hpp **** 
 893              		.loc 1 39 108 view .LVU166
 894 0010 9FED056B 		vldr.64	d6, .L52
  39:source/HeavyContext.hpp **** 
 895              		.loc 1 39 97 view .LVU167
 896 0014 20EE050B 		vmul.f64	d0, d0, d5
  39:source/HeavyContext.hpp **** 
 897              		.loc 1 39 108 view .LVU168
 898 0018 80EE067B 		vdiv.f64	d7, d0, d6
  39:source/HeavyContext.hpp **** 
 899              		.loc 1 39 118 view .LVU169
 900 001c FCEEC77B 		vcvt.u32.f64	s15, d7
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s 			page 24


 901 0020 17EE900A 		vmov	r0, s15	@ int
 902              	.LVL74:
  39:source/HeavyContext.hpp **** 
 903              		.loc 1 39 118 view .LVU170
 904 0024 7047     		bx	lr
 905              	.L53:
 906 0026 00BF     		.align	3
 907              	.L52:
 908 0028 00000000 		.word	0
 909 002c 00408F40 		.word	1083129856
 910 0030 00000000 		.word	0
 911              		.cfi_endproc
 912              	.LFE969:
 914              		.section	.rodata._ZN19Heavy_daisy_control16getParameterInfoEiP15HvParameterInfo.str1.4,"aMS",%prog
 915              		.align	2
 916              	.LC4:
 917 0000 6374726C 		.ascii	"ctrl1\000"
 917      3100
 918 0006 0000     		.align	2
 919              	.LC5:
 920 0008 6374726C 		.ascii	"ctrl2\000"
 920      3200
 921 000e 0000     		.align	2
 922              	.LC6:
 923 0010 696E7661 		.ascii	"invalid parameter index\000"
 923      6C696420 
 923      70617261 
 923      6D657465 
 923      7220696E 
 924              		.section	.text._ZN19Heavy_daisy_control16getParameterInfoEiP15HvParameterInfo,"ax",%progbits
 925              		.align	1
 926              		.p2align 2,,3
 927              		.global	_ZN19Heavy_daisy_control16getParameterInfoEiP15HvParameterInfo
 928              		.syntax unified
 929              		.thumb
 930              		.thumb_func
 932              	_ZN19Heavy_daisy_control16getParameterInfoEiP15HvParameterInfo:
 933              	.LVL75:
 934              	.LFB1002:
  93:source/Heavy_daisy_control.cpp ****   if (info != nullptr) {
 935              		.loc 3 93 77 is_stmt 1 view -0
 936              		.cfi_startproc
 937              		@ args = 0, pretend = 0, frame = 0
 938              		@ frame_needed = 0, uses_anonymous_args = 0
 939              		@ link register save eliminated.
  94:source/Heavy_daisy_control.cpp ****     switch (index) {
 940              		.loc 3 94 3 view .LVU172
 941 0000 5AB1     		cbz	r2, .L64
  95:source/Heavy_daisy_control.cpp ****       case 0: {
 942              		.loc 3 95 5 view .LVU173
 943 0002 E9B1     		cbz	r1, .L56
 944 0004 0129     		cmp	r1, #1
 945 0006 0AD0     		beq	.L57
 946              	.LVL76:
 947              	.LBB74:
 948              	.LBI74:
  93:source/Heavy_daisy_control.cpp ****   if (info != nullptr) {
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s 			page 25


 949              		.loc 3 93 5 view .LVU174
 950              	.LBB75:
 114:source/Heavy_daisy_control.cpp ****         info->name = "invalid parameter index";
 951              		.loc 3 114 7 view .LVU175
 114:source/Heavy_daisy_control.cpp ****         info->name = "invalid parameter index";
 952              		.loc 3 114 16 view .LVU176
 115:source/Heavy_daisy_control.cpp ****         info->hash = 0;
 953              		.loc 3 115 9 view .LVU177
 118:source/Heavy_daisy_control.cpp ****         info->maxVal = 0.0f;
 954              		.loc 3 118 22 is_stmt 0 view .LVU178
 955 0008 0023     		movs	r3, #0
 116:source/Heavy_daisy_control.cpp ****         info->type = HvParameterType::HV_PARAM_TYPE_PARAMETER_IN;
 956              		.loc 3 116 20 view .LVU179
 957 000a 0021     		movs	r1, #0
 958              	.LVL77:
 115:source/Heavy_daisy_control.cpp ****         info->hash = 0;
 959              		.loc 3 115 20 view .LVU180
 960 000c 1648     		ldr	r0, .L66
 961              	.LVL78:
 116:source/Heavy_daisy_control.cpp ****         info->type = HvParameterType::HV_PARAM_TYPE_PARAMETER_IN;
 962              		.loc 3 116 20 view .LVU181
 963 000e 5160     		str	r1, [r2, #4]
 117:source/Heavy_daisy_control.cpp ****         info->minVal = 0.0f;
 964              		.loc 3 117 20 view .LVU182
 965 0010 1172     		strb	r1, [r2, #8]
 115:source/Heavy_daisy_control.cpp ****         info->hash = 0;
 966              		.loc 3 115 20 view .LVU183
 967 0012 1060     		str	r0, [r2]
 116:source/Heavy_daisy_control.cpp ****         info->type = HvParameterType::HV_PARAM_TYPE_PARAMETER_IN;
 968              		.loc 3 116 9 is_stmt 1 view .LVU184
 117:source/Heavy_daisy_control.cpp ****         info->minVal = 0.0f;
 969              		.loc 3 117 9 view .LVU185
 118:source/Heavy_daisy_control.cpp ****         info->maxVal = 0.0f;
 970              		.loc 3 118 9 view .LVU186
 118:source/Heavy_daisy_control.cpp ****         info->maxVal = 0.0f;
 971              		.loc 3 118 22 is_stmt 0 view .LVU187
 972 0014 D360     		str	r3, [r2, #12]	@ float
 119:source/Heavy_daisy_control.cpp ****         info->defaultVal = 0.0f;
 973              		.loc 3 119 9 is_stmt 1 view .LVU188
 119:source/Heavy_daisy_control.cpp ****         info->defaultVal = 0.0f;
 974              		.loc 3 119 22 is_stmt 0 view .LVU189
 975 0016 1361     		str	r3, [r2, #16]	@ float
 120:source/Heavy_daisy_control.cpp ****         break;
 976              		.loc 3 120 9 is_stmt 1 view .LVU190
 120:source/Heavy_daisy_control.cpp ****         break;
 977              		.loc 3 120 26 is_stmt 0 view .LVU191
 978 0018 5361     		str	r3, [r2, #20]	@ float
 121:source/Heavy_daisy_control.cpp ****       }
 979              		.loc 3 121 9 is_stmt 1 view .LVU192
 980              	.LVL79:
 981              	.L64:
 121:source/Heavy_daisy_control.cpp ****       }
 982              		.loc 3 121 9 is_stmt 0 view .LVU193
 983              	.LBE75:
 984              	.LBE74:
 125:source/Heavy_daisy_control.cpp **** }
 985              		.loc 3 125 3 is_stmt 1 view .LVU194
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s 			page 26


 126:source/Heavy_daisy_control.cpp **** 
 986              		.loc 3 126 1 is_stmt 0 view .LVU195
 987 001a 0220     		movs	r0, #2
 988 001c 7047     		bx	lr
 989              	.LVL80:
 990              	.L57:
 105:source/Heavy_daisy_control.cpp ****         info->name = "ctrl2";
 991              		.loc 3 105 7 is_stmt 1 view .LVU196
 105:source/Heavy_daisy_control.cpp ****         info->name = "ctrl2";
 992              		.loc 3 105 15 view .LVU197
 106:source/Heavy_daisy_control.cpp ****         info->hash = 0x30F9495D;
 993              		.loc 3 106 9 view .LVU198
 106:source/Heavy_daisy_control.cpp ****         info->hash = 0x30F9495D;
 994              		.loc 3 106 20 is_stmt 0 view .LVU199
 995 001e 1349     		ldr	r1, .L66+4
 996              	.LVL81:
 110:source/Heavy_daisy_control.cpp ****         info->defaultVal = 0.5f;
 997              		.loc 3 110 22 view .LVU200
 998 0020 4FF07E5C 		mov	ip, #1065353216
 107:source/Heavy_daisy_control.cpp ****         info->type = HvParameterType::HV_PARAM_TYPE_PARAMETER_IN;
 999              		.loc 3 107 20 view .LVU201
 1000 0024 124B     		ldr	r3, .L66+8
 111:source/Heavy_daisy_control.cpp ****         break;
 1001              		.loc 3 111 26 view .LVU202
 1002 0026 4FF07C50 		mov	r0, #1056964608
 1003              	.LVL82:
 110:source/Heavy_daisy_control.cpp ****         info->defaultVal = 0.5f;
 1004              		.loc 3 110 22 view .LVU203
 1005 002a C2F810C0 		str	ip, [r2, #16]	@ float
 111:source/Heavy_daisy_control.cpp ****         break;
 1006              		.loc 3 111 26 view .LVU204
 1007 002e 5061     		str	r0, [r2, #20]	@ float
 126:source/Heavy_daisy_control.cpp **** 
 1008              		.loc 3 126 1 view .LVU205
 1009 0030 0220     		movs	r0, #2
 107:source/Heavy_daisy_control.cpp ****         info->type = HvParameterType::HV_PARAM_TYPE_PARAMETER_IN;
 1010              		.loc 3 107 20 view .LVU206
 1011 0032 C2E90013 		strd	r1, r3, [r2]
 108:source/Heavy_daisy_control.cpp ****         info->minVal = 0.0f;
 1012              		.loc 3 108 9 is_stmt 1 view .LVU207
 108:source/Heavy_daisy_control.cpp ****         info->minVal = 0.0f;
 1013              		.loc 3 108 20 is_stmt 0 view .LVU208
 1014 0036 0021     		movs	r1, #0
 109:source/Heavy_daisy_control.cpp ****         info->maxVal = 1.0f;
 1015              		.loc 3 109 22 view .LVU209
 1016 0038 0023     		movs	r3, #0
 108:source/Heavy_daisy_control.cpp ****         info->minVal = 0.0f;
 1017              		.loc 3 108 20 view .LVU210
 1018 003a 1172     		strb	r1, [r2, #8]
 109:source/Heavy_daisy_control.cpp ****         info->maxVal = 1.0f;
 1019              		.loc 3 109 9 is_stmt 1 view .LVU211
 109:source/Heavy_daisy_control.cpp ****         info->maxVal = 1.0f;
 1020              		.loc 3 109 22 is_stmt 0 view .LVU212
 1021 003c D360     		str	r3, [r2, #12]	@ float
 110:source/Heavy_daisy_control.cpp ****         info->defaultVal = 0.5f;
 1022              		.loc 3 110 9 is_stmt 1 view .LVU213
 111:source/Heavy_daisy_control.cpp ****         break;
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s 			page 27


 1023              		.loc 3 111 9 view .LVU214
 112:source/Heavy_daisy_control.cpp ****       }
 1024              		.loc 3 112 9 view .LVU215
 125:source/Heavy_daisy_control.cpp **** }
 1025              		.loc 3 125 3 view .LVU216
 126:source/Heavy_daisy_control.cpp **** 
 1026              		.loc 3 126 1 is_stmt 0 view .LVU217
 1027 003e 7047     		bx	lr
 1028              	.LVL83:
 1029              	.L56:
  96:source/Heavy_daisy_control.cpp ****         info->name = "ctrl1";
 1030              		.loc 3 96 7 is_stmt 1 view .LVU218
  96:source/Heavy_daisy_control.cpp ****         info->name = "ctrl1";
 1031              		.loc 3 96 15 view .LVU219
  97:source/Heavy_daisy_control.cpp ****         info->hash = 0xB2FCD18D;
 1032              		.loc 3 97 9 view .LVU220
 101:source/Heavy_daisy_control.cpp ****         info->defaultVal = 0.5f;
 1033              		.loc 3 101 22 is_stmt 0 view .LVU221
 1034 0040 4FF07E50 		mov	r0, #1065353216
 1035              	.LVL84:
 102:source/Heavy_daisy_control.cpp ****         break;
 1036              		.loc 3 102 26 view .LVU222
 1037 0044 4FF07C53 		mov	r3, #1056964608
 100:source/Heavy_daisy_control.cpp ****         info->maxVal = 1.0f;
 1038              		.loc 3 100 22 view .LVU223
 1039 0048 4FF0000C 		mov	ip, #0
  99:source/Heavy_daisy_control.cpp ****         info->minVal = 0.0f;
 1040              		.loc 3 99 20 view .LVU224
 1041 004c 1172     		strb	r1, [r2, #8]
  98:source/Heavy_daisy_control.cpp ****         info->type = HvParameterType::HV_PARAM_TYPE_PARAMETER_IN;
 1042              		.loc 3 98 20 view .LVU225
 1043 004e 0949     		ldr	r1, .L66+12
 1044              	.LVL85:
 101:source/Heavy_daisy_control.cpp ****         info->defaultVal = 0.5f;
 1045              		.loc 3 101 22 view .LVU226
 1046 0050 1061     		str	r0, [r2, #16]	@ float
 126:source/Heavy_daisy_control.cpp **** 
 1047              		.loc 3 126 1 view .LVU227
 1048 0052 0220     		movs	r0, #2
 100:source/Heavy_daisy_control.cpp ****         info->maxVal = 1.0f;
 1049              		.loc 3 100 22 view .LVU228
 1050 0054 C2F80CC0 		str	ip, [r2, #12]	@ float
  98:source/Heavy_daisy_control.cpp ****         info->type = HvParameterType::HV_PARAM_TYPE_PARAMETER_IN;
 1051              		.loc 3 98 20 view .LVU229
 1052 0058 5160     		str	r1, [r2, #4]
 102:source/Heavy_daisy_control.cpp ****         break;
 1053              		.loc 3 102 26 view .LVU230
 1054 005a 5361     		str	r3, [r2, #20]	@ float
  93:source/Heavy_daisy_control.cpp ****   if (info != nullptr) {
 1055              		.loc 3 93 77 view .LVU231
 1056 005c 10B4     		push	{r4}
 1057              		.cfi_def_cfa_offset 4
 1058              		.cfi_offset 4, -4
  97:source/Heavy_daisy_control.cpp ****         info->hash = 0xB2FCD18D;
 1059              		.loc 3 97 20 view .LVU232
 1060 005e 064C     		ldr	r4, .L66+16
 1061 0060 1460     		str	r4, [r2]
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s 			page 28


  98:source/Heavy_daisy_control.cpp ****         info->type = HvParameterType::HV_PARAM_TYPE_PARAMETER_IN;
 1062              		.loc 3 98 9 is_stmt 1 view .LVU233
  99:source/Heavy_daisy_control.cpp ****         info->minVal = 0.0f;
 1063              		.loc 3 99 9 view .LVU234
 100:source/Heavy_daisy_control.cpp ****         info->maxVal = 1.0f;
 1064              		.loc 3 100 9 view .LVU235
 101:source/Heavy_daisy_control.cpp ****         info->defaultVal = 0.5f;
 1065              		.loc 3 101 9 view .LVU236
 102:source/Heavy_daisy_control.cpp ****         break;
 1066              		.loc 3 102 9 view .LVU237
 103:source/Heavy_daisy_control.cpp ****       }
 1067              		.loc 3 103 9 view .LVU238
 125:source/Heavy_daisy_control.cpp **** }
 1068              		.loc 3 125 3 view .LVU239
 126:source/Heavy_daisy_control.cpp **** 
 1069              		.loc 3 126 1 is_stmt 0 view .LVU240
 1070 0062 5DF8044B 		ldr	r4, [sp], #4
 1071              		.cfi_restore 4
 1072              		.cfi_def_cfa_offset 0
 1073 0066 7047     		bx	lr
 1074              	.L67:
 1075              		.align	2
 1076              	.L66:
 1077 0068 10000000 		.word	.LC6
 1078 006c 08000000 		.word	.LC5
 1079 0070 5D49F930 		.word	821643613
 1080 0074 8DD1FCB2 		.word	-1292054131
 1081 0078 00000000 		.word	.LC4
 1082              		.cfi_endproc
 1083              	.LFE1002:
 1085              		.section	.text._ZN19Heavy_daisy_control26scheduleMessageForReceiverEmP9HvMessage,"ax",%progbits
 1086              		.align	1
 1087              		.p2align 2,,3
 1088              		.global	_ZN19Heavy_daisy_control26scheduleMessageForReceiverEmP9HvMessage
 1089              		.syntax unified
 1090              		.thumb
 1091              		.thumb_func
 1093              	_ZN19Heavy_daisy_control26scheduleMessageForReceiverEmP9HvMessage:
 1094              	.LVL86:
 1095              	.LFB1001:
  79:source/Heavy_daisy_control.cpp ****   switch (receiverHash) {
 1096              		.loc 3 79 94 is_stmt 1 view -0
 1097              		.cfi_startproc
 1098              		@ args = 0, pretend = 0, frame = 0
 1099              		@ frame_needed = 0, uses_anonymous_args = 0
 1100              		@ link register save eliminated.
  80:source/Heavy_daisy_control.cpp ****     case 0xB2FCD18D: { // ctrl1
 1101              		.loc 3 80 3 view .LVU242
 1102 0000 094B     		ldr	r3, .L71
  79:source/Heavy_daisy_control.cpp ****   switch (receiverHash) {
 1103              		.loc 3 79 94 is_stmt 0 view .LVU243
 1104 0002 9446     		mov	ip, r2
  80:source/Heavy_daisy_control.cpp ****     case 0xB2FCD18D: { // ctrl1
 1105              		.loc 3 80 3 view .LVU244
 1106 0004 9942     		cmp	r1, r3
 1107 0006 08D0     		beq	.L69
 1108 0008 084B     		ldr	r3, .L71+4
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s 			page 29


 1109 000a 9942     		cmp	r1, r3
 1110 000c 0BD1     		bne	.L68
  81:source/Heavy_daisy_control.cpp ****       mq_addMessageByTimestamp(&mq, m, 0, &cReceive_GE5qdYgZ_sendMessage);
 1111              		.loc 3 81 5 is_stmt 1 view .LVU245
  81:source/Heavy_daisy_control.cpp ****       mq_addMessageByTimestamp(&mq, m, 0, &cReceive_GE5qdYgZ_sendMessage);
 1112              		.loc 3 81 22 view .LVU246
  82:source/Heavy_daisy_control.cpp ****       break;
 1113              		.loc 3 82 7 view .LVU247
  82:source/Heavy_daisy_control.cpp ****       break;
 1114              		.loc 3 82 31 is_stmt 0 view .LVU248
 1115 000e 084B     		ldr	r3, .L71+8
 1116 0010 0022     		movs	r2, #0
 1117              	.LVL87:
  82:source/Heavy_daisy_control.cpp ****       break;
 1118              		.loc 3 82 31 view .LVU249
 1119 0012 6146     		mov	r1, ip
 1120              	.LVL88:
  82:source/Heavy_daisy_control.cpp ****       break;
 1121              		.loc 3 82 31 view .LVU250
 1122 0014 1830     		adds	r0, r0, #24
 1123              	.LVL89:
  82:source/Heavy_daisy_control.cpp ****       break;
 1124              		.loc 3 82 31 view .LVU251
 1125 0016 FFF7FEBF 		b	mq_addMessageByTimestamp
 1126              	.LVL90:
 1127              	.L69:
 1128              	.LBB78:
 1129              	.LBI78:
  79:source/Heavy_daisy_control.cpp ****   switch (receiverHash) {
 1130              		.loc 3 79 6 is_stmt 1 view .LVU252
 1131              	.LBB79:
  85:source/Heavy_daisy_control.cpp ****       mq_addMessageByTimestamp(&mq, m, 0, &cReceive_S07AdeHm_sendMessage);
 1132              		.loc 3 85 5 view .LVU253
  85:source/Heavy_daisy_control.cpp ****       mq_addMessageByTimestamp(&mq, m, 0, &cReceive_S07AdeHm_sendMessage);
 1133              		.loc 3 85 22 view .LVU254
  86:source/Heavy_daisy_control.cpp ****       break;
 1134              		.loc 3 86 7 view .LVU255
  86:source/Heavy_daisy_control.cpp ****       break;
 1135              		.loc 3 86 31 is_stmt 0 view .LVU256
 1136 001a 064B     		ldr	r3, .L71+12
 1137 001c 0022     		movs	r2, #0
 1138              	.LVL91:
  86:source/Heavy_daisy_control.cpp ****       break;
 1139              		.loc 3 86 31 view .LVU257
 1140 001e 6146     		mov	r1, ip
 1141              	.LVL92:
  86:source/Heavy_daisy_control.cpp ****       break;
 1142              		.loc 3 86 31 view .LVU258
 1143 0020 1830     		adds	r0, r0, #24
 1144              	.LVL93:
  86:source/Heavy_daisy_control.cpp ****       break;
 1145              		.loc 3 86 31 view .LVU259
 1146 0022 FFF7FEBF 		b	mq_addMessageByTimestamp
 1147              	.LVL94:
 1148              	.L68:
  86:source/Heavy_daisy_control.cpp ****       break;
 1149              		.loc 3 86 31 view .LVU260
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s 			page 30


 1150              	.LBE79:
 1151              	.LBE78:
  91:source/Heavy_daisy_control.cpp **** 
 1152              		.loc 3 91 1 view .LVU261
 1153 0026 7047     		bx	lr
 1154              	.L72:
 1155              		.align	2
 1156              	.L71:
 1157 0028 5D49F930 		.word	821643613
 1158 002c 8DD1FCB2 		.word	-1292054131
 1159 0030 00000000 		.word	_ZN19Heavy_daisy_control29cReceive_GE5qdYgZ_sendMessageEP21HeavyContextInterfaceiPK9HvMessag
 1160 0034 00000000 		.word	_ZN19Heavy_daisy_control29cReceive_S07AdeHm_sendMessageEP21HeavyContextInterfaceiPK9HvMessag
 1161              		.cfi_endproc
 1162              	.LFE1001:
 1164              		.section	.rodata._ZN19Heavy_daisy_control7processEPPfS1_i.str1.4,"aMS",%progbits,1
 1165              		.align	2
 1166              	.LC7:
 1167 0000 6E756D42 		.ascii	"numBytes >= sizeof(ReceiverMessagePair)\000"
 1167      79746573 
 1167      203E3D20 
 1167      73697A65 
 1167      6F662852 
 1168              		.align	2
 1169              	.LC8:
 1170 0028 76697274 		.ascii	"virtual int Heavy_daisy_control::process(float**, f"
 1170      75616C20 
 1170      696E7420 
 1170      48656176 
 1170      795F6461 
 1171 005b 6C6F6174 		.ascii	"loat**, int)\000"
 1171      2A2A2C20 
 1171      696E7429 
 1171      00
 1172              		.section	.text._ZN19Heavy_daisy_control7processEPPfS1_i,"ax",%progbits
 1173              		.align	1
 1174              		.p2align 2,,3
 1175              		.global	_ZN19Heavy_daisy_control7processEPPfS1_i
 1176              		.syntax unified
 1177              		.thumb
 1178              		.thumb_func
 1180              	_ZN19Heavy_daisy_control7processEPPfS1_i:
 1181              	.LVL95:
 1182              	.LFB1007:
 158:source/Heavy_daisy_control.cpp ****   while (hLp_hasData(&inQueue)) {
 1183              		.loc 3 158 86 is_stmt 1 view -0
 1184              		.cfi_startproc
 1185              		@ args = 0, pretend = 0, frame = 8
 1186              		@ frame_needed = 0, uses_anonymous_args = 0
 158:source/Heavy_daisy_control.cpp ****   while (hLp_hasData(&inQueue)) {
 1187              		.loc 3 158 86 is_stmt 0 view .LVU263
 1188 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 1189              		.cfi_def_cfa_offset 32
 1190              		.cfi_offset 4, -32
 1191              		.cfi_offset 5, -28
 1192              		.cfi_offset 6, -24
 1193              		.cfi_offset 7, -20
 1194              		.cfi_offset 8, -16
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s 			page 31


 1195              		.cfi_offset 9, -12
 1196              		.cfi_offset 10, -8
 1197              		.cfi_offset 14, -4
 1198 0004 0446     		mov	r4, r0
 1199 0006 82B0     		sub	sp, sp, #8
 1200              		.cfi_def_cfa_offset 40
 158:source/Heavy_daisy_control.cpp ****   while (hLp_hasData(&inQueue)) {
 1201              		.loc 3 158 86 view .LVU264
 1202 0008 1546     		mov	r5, r2
 1203 000a 9A46     		mov	r10, r3
 159:source/Heavy_daisy_control.cpp ****     hv_uint32_t numBytes = 0;
 1204              		.loc 3 159 21 view .LVU265
 1205 000c 00F15C08 		add	r8, r0, #92
 1206 0010 0BE0     		b	.L79
 1207              	.LVL96:
 1208              	.L89:
 1209              	.LBB126:
 1210              	.LBB127:
 1211              	.LBB128:
  80:source/Heavy_daisy_control.cpp ****     case 0xB2FCD18D: { // ctrl1
 1212              		.loc 3 80 3 view .LVU266
 1213 0012 4E4A     		ldr	r2, .L90
 1214 0014 9342     		cmp	r3, r2
 1215 0016 05D1     		bne	.L78
  81:source/Heavy_daisy_control.cpp ****       mq_addMessageByTimestamp(&mq, m, 0, &cReceive_GE5qdYgZ_sendMessage);
 1216              		.loc 3 81 5 is_stmt 1 view .LVU267
  81:source/Heavy_daisy_control.cpp ****       mq_addMessageByTimestamp(&mq, m, 0, &cReceive_GE5qdYgZ_sendMessage);
 1217              		.loc 3 81 22 view .LVU268
  82:source/Heavy_daisy_control.cpp ****       break;
 1218              		.loc 3 82 7 view .LVU269
  82:source/Heavy_daisy_control.cpp ****       break;
 1219              		.loc 3 82 31 is_stmt 0 view .LVU270
 1220 0018 4D4B     		ldr	r3, .L90+4
 1221              	.LVL97:
  82:source/Heavy_daisy_control.cpp ****       break;
 1222              		.loc 3 82 31 view .LVU271
 1223 001a 3A46     		mov	r2, r7
 1224 001c 04F11800 		add	r0, r4, #24
 1225              	.LVL98:
  82:source/Heavy_daisy_control.cpp ****       break;
 1226              		.loc 3 82 31 view .LVU272
 1227 0020 FFF7FEFF 		bl	mq_addMessageByTimestamp
 1228              	.LVL99:
  83:source/Heavy_daisy_control.cpp ****     }
 1229              		.loc 3 83 7 is_stmt 1 view .LVU273
 1230              	.L78:
  83:source/Heavy_daisy_control.cpp ****     }
 1231              		.loc 3 83 7 is_stmt 0 view .LVU274
 1232              	.LBE128:
 1233              	.LBE127:
 164:source/Heavy_daisy_control.cpp ****   }
 1234              		.loc 3 164 5 is_stmt 1 discriminator 1 view .LVU275
 164:source/Heavy_daisy_control.cpp ****   }
 1235              		.loc 3 164 16 is_stmt 0 discriminator 1 view .LVU276
 1236 0024 4046     		mov	r0, r8
 1237 0026 FFF7FEFF 		bl	hLp_consume
 1238              	.LVL100:
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s 			page 32


 1239              	.L79:
 164:source/Heavy_daisy_control.cpp ****   }
 1240              		.loc 3 164 16 discriminator 1 view .LVU277
 1241              	.LBE126:
 159:source/Heavy_daisy_control.cpp ****     hv_uint32_t numBytes = 0;
 1242              		.loc 3 159 3 is_stmt 1 view .LVU278
 159:source/Heavy_daisy_control.cpp ****     hv_uint32_t numBytes = 0;
 1243              		.loc 3 159 21 view .LVU279
 1244 002a 4046     		mov	r0, r8
 1245 002c FFF7FEFF 		bl	hLp_hasData
 1246              	.LVL101:
 1247 0030 0746     		mov	r7, r0
 1248 0032 00B3     		cbz	r0, .L74
 1249              	.LBB133:
 160:source/Heavy_daisy_control.cpp ****     ReceiverMessagePair *p = reinterpret_cast<ReceiverMessagePair *>(hLp_getReadBuffer(&inQueue, &n
 1250              		.loc 3 160 5 view .LVU280
 160:source/Heavy_daisy_control.cpp ****     ReceiverMessagePair *p = reinterpret_cast<ReceiverMessagePair *>(hLp_getReadBuffer(&inQueue, &n
 1251              		.loc 3 160 17 is_stmt 0 view .LVU281
 1252 0034 0027     		movs	r7, #0
 161:source/Heavy_daisy_control.cpp ****     hv_assert(numBytes >= sizeof(ReceiverMessagePair));
 1253              		.loc 3 161 87 view .LVU282
 1254 0036 01A9     		add	r1, sp, #4
 1255 0038 4046     		mov	r0, r8
 160:source/Heavy_daisy_control.cpp ****     ReceiverMessagePair *p = reinterpret_cast<ReceiverMessagePair *>(hLp_getReadBuffer(&inQueue, &n
 1256              		.loc 3 160 17 view .LVU283
 1257 003a 0197     		str	r7, [sp, #4]
 161:source/Heavy_daisy_control.cpp ****     hv_assert(numBytes >= sizeof(ReceiverMessagePair));
 1258              		.loc 3 161 5 is_stmt 1 view .LVU284
 161:source/Heavy_daisy_control.cpp ****     hv_assert(numBytes >= sizeof(ReceiverMessagePair));
 1259              		.loc 3 161 87 is_stmt 0 view .LVU285
 1260 003c FFF7FEFF 		bl	hLp_getReadBuffer
 1261              	.LVL102:
 162:source/Heavy_daisy_control.cpp ****     scheduleMessageForReceiver(p->receiverHash, &p->msg);
 1262              		.loc 3 162 5 view .LVU286
 1263 0040 019B     		ldr	r3, [sp, #4]
 161:source/Heavy_daisy_control.cpp ****     hv_assert(numBytes >= sizeof(ReceiverMessagePair));
 1264              		.loc 3 161 87 view .LVU287
 1265 0042 0146     		mov	r1, r0
 1266              	.LVL103:
 162:source/Heavy_daisy_control.cpp ****     scheduleMessageForReceiver(p->receiverHash, &p->msg);
 1267              		.loc 3 162 5 is_stmt 1 view .LVU288
 1268 0044 132B     		cmp	r3, #19
 1269 0046 7BD9     		bls	.L88
 163:source/Heavy_daisy_control.cpp ****     hLp_consume(&inQueue);
 1270              		.loc 3 163 5 discriminator 1 view .LVU289
 163:source/Heavy_daisy_control.cpp ****     hLp_consume(&inQueue);
 1271              		.loc 3 163 56 is_stmt 0 discriminator 1 view .LVU290
 1272 0048 2368     		ldr	r3, [r4]
 1273 004a 424A     		ldr	r2, .L90+8
 1274 004c D3F89090 		ldr	r9, [r3, #144]
 163:source/Heavy_daisy_control.cpp ****     hLp_consume(&inQueue);
 1275              		.loc 3 163 31 discriminator 1 view .LVU291
 1276 0050 51F8043B 		ldr	r3, [r1], #4
 1277 0054 9145     		cmp	r9, r2
 1278 0056 09D1     		bne	.L76
 1279              	.LVL104:
 1280              	.LBB132:
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s 			page 33


 1281              	.LBI127:
  79:source/Heavy_daisy_control.cpp ****   switch (receiverHash) {
 1282              		.loc 3 79 6 is_stmt 1 view .LVU292
 1283              	.LBB131:
  80:source/Heavy_daisy_control.cpp ****     case 0xB2FCD18D: { // ctrl1
 1284              		.loc 3 80 3 view .LVU293
 1285 0058 3F4A     		ldr	r2, .L90+12
 1286 005a 9342     		cmp	r3, r2
 1287 005c D9D1     		bne	.L89
 1288              	.LVL105:
 1289              	.LBB129:
 1290              	.LBI129:
  79:source/Heavy_daisy_control.cpp ****   switch (receiverHash) {
 1291              		.loc 3 79 6 view .LVU294
 1292              	.LBB130:
  85:source/Heavy_daisy_control.cpp ****       mq_addMessageByTimestamp(&mq, m, 0, &cReceive_S07AdeHm_sendMessage);
 1293              		.loc 3 85 5 view .LVU295
  85:source/Heavy_daisy_control.cpp ****       mq_addMessageByTimestamp(&mq, m, 0, &cReceive_S07AdeHm_sendMessage);
 1294              		.loc 3 85 22 view .LVU296
  86:source/Heavy_daisy_control.cpp ****       break;
 1295              		.loc 3 86 7 view .LVU297
  86:source/Heavy_daisy_control.cpp ****       break;
 1296              		.loc 3 86 31 is_stmt 0 view .LVU298
 1297 005e 3F4B     		ldr	r3, .L90+16
 1298              	.LVL106:
  86:source/Heavy_daisy_control.cpp ****       break;
 1299              		.loc 3 86 31 view .LVU299
 1300 0060 3A46     		mov	r2, r7
 1301 0062 04F11800 		add	r0, r4, #24
 1302              	.LVL107:
  86:source/Heavy_daisy_control.cpp ****       break;
 1303              		.loc 3 86 31 view .LVU300
 1304 0066 FFF7FEFF 		bl	mq_addMessageByTimestamp
 1305              	.LVL108:
  87:source/Heavy_daisy_control.cpp ****     }
 1306              		.loc 3 87 7 is_stmt 1 view .LVU301
 1307 006a DBE7     		b	.L78
 1308              	.LVL109:
 1309              	.L76:
  87:source/Heavy_daisy_control.cpp ****     }
 1310              		.loc 3 87 7 is_stmt 0 view .LVU302
 1311              	.LBE130:
 1312              	.LBE129:
 1313              	.LBE131:
 1314              	.LBE132:
 163:source/Heavy_daisy_control.cpp ****     hLp_consume(&inQueue);
 1315              		.loc 3 163 31 discriminator 1 view .LVU303
 1316 006c 0A46     		mov	r2, r1
 1317 006e 2046     		mov	r0, r4
 1318              	.LVL110:
 163:source/Heavy_daisy_control.cpp ****     hLp_consume(&inQueue);
 1319              		.loc 3 163 31 discriminator 1 view .LVU304
 1320 0070 1946     		mov	r1, r3
 1321              	.LVL111:
 163:source/Heavy_daisy_control.cpp ****     hLp_consume(&inQueue);
 1322              		.loc 3 163 31 discriminator 1 view .LVU305
 1323 0072 C847     		blx	r9
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s 			page 34


 1324              	.LVL112:
 163:source/Heavy_daisy_control.cpp ****     hLp_consume(&inQueue);
 1325              		.loc 3 163 31 discriminator 1 view .LVU306
 1326 0074 D6E7     		b	.L78
 1327              	.L74:
 163:source/Heavy_daisy_control.cpp ****     hLp_consume(&inQueue);
 1328              		.loc 3 163 31 discriminator 1 view .LVU307
 1329              	.LBE133:
 166:source/Heavy_daisy_control.cpp **** 
 1330              		.loc 3 166 3 is_stmt 1 view .LVU308
 1331              	.LVL113:
 169:source/Heavy_daisy_control.cpp **** 
 1332              		.loc 3 169 3 view .LVU309
 172:source/Heavy_daisy_control.cpp **** 
 1333              		.loc 3 172 3 view .LVU310
 175:source/Heavy_daisy_control.cpp **** 
 1334              		.loc 3 175 3 view .LVU311
 175:source/Heavy_daisy_control.cpp **** 
 1335              		.loc 3 175 22 view .LVU312
 1336              		.file 4 "source/HvMath.h"
   1:source/HvMath.h **** /**
   2:source/HvMath.h ****  * Copyright (c) 2014-2018 Enzien Audio Ltd.
   3:source/HvMath.h ****  *
   4:source/HvMath.h ****  * Permission to use, copy, modify, and/or distribute this software for any
   5:source/HvMath.h ****  * purpose with or without fee is hereby granted, provided that the above
   6:source/HvMath.h ****  * copyright notice and this permission notice appear in all copies.
   7:source/HvMath.h ****  *
   8:source/HvMath.h ****  * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
   9:source/HvMath.h ****  * REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
  10:source/HvMath.h ****  * AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
  11:source/HvMath.h ****  * INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
  12:source/HvMath.h ****  * LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
  13:source/HvMath.h ****  * OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
  14:source/HvMath.h ****  * PERFORMANCE OF THIS SOFTWARE.
  15:source/HvMath.h ****  */
  16:source/HvMath.h **** 
  17:source/HvMath.h **** #ifndef _HEAVY_MATH_H_
  18:source/HvMath.h **** #define _HEAVY_MATH_H_
  19:source/HvMath.h **** 
  20:source/HvMath.h **** #include "HvUtils.h"
  21:source/HvMath.h **** 
  22:source/HvMath.h **** // https://software.intel.com/sites/landingpage/IntrinsicsGuide/
  23:source/HvMath.h **** // https://gcc.gnu.org/onlinedocs/gcc-4.8.1/gcc/ARM-NEON-Intrinsics.html
  24:source/HvMath.h **** // http://codesuppository.blogspot.co.uk/2015/02/sse2neonh-porting-guide-and-header-file.html
  25:source/HvMath.h **** 
  26:source/HvMath.h **** static inline void __hv_zero_f(hv_bOutf_t bOut) {
  27:source/HvMath.h **** #if HV_SIMD_AVX
  28:source/HvMath.h ****   *bOut = _mm256_setzero_ps();
  29:source/HvMath.h **** #elif HV_SIMD_SSE
  30:source/HvMath.h ****   *bOut = _mm_setzero_ps();
  31:source/HvMath.h **** #elif HV_SIMD_NEON
  32:source/HvMath.h ****   *bOut = vdupq_n_f32(0.0f);
  33:source/HvMath.h **** #else // HV_SIMD_NONE
  34:source/HvMath.h ****   *bOut = 0.0f;
 1337              		.loc 4 34 3 view .LVU313
 177:source/Heavy_daisy_control.cpp ****   for (int n = 0; n < n4; n += HV_N_SIMD) {
 1338              		.loc 3 177 3 view .LVU314
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s 			page 35


 1339              	.LBB134:
 178:source/Heavy_daisy_control.cpp **** 
 1340              		.loc 3 178 21 is_stmt 0 view .LVU315
 1341 0076 BAF1000F 		cmp	r10, #0
 1342              	.LBE134:
 177:source/Heavy_daisy_control.cpp ****   for (int n = 0; n < n4; n += HV_N_SIMD) {
 1343              		.loc 3 177 15 view .LVU316
 1344 007a D4F81080 		ldr	r8, [r4, #16]
 1345              	.LVL114:
 178:source/Heavy_daisy_control.cpp **** 
 1346              		.loc 3 178 3 is_stmt 1 view .LVU317
 1347              	.LBB231:
 178:source/Heavy_daisy_control.cpp **** 
 1348              		.loc 3 178 21 view .LVU318
 1349 007e 58DD     		ble	.L84
 1350 0080 0AEB0809 		add	r9, r10, r8
 1351 0084 A069     		ldr	r0, [r4, #24]
 1352              	.L82:
 1353              	.LBB135:
 181:source/Heavy_daisy_control.cpp ****     while (mq_hasMessageBefore(&mq, nextBlock)) {
 1354              		.loc 3 181 5 view .LVU319
 181:source/Heavy_daisy_control.cpp ****     while (mq_hasMessageBefore(&mq, nextBlock)) {
 1355              		.loc 3 181 15 is_stmt 0 view .LVU320
 1356 0086 08F10108 		add	r8, r8, #1
 1357              	.LVL115:
 182:source/Heavy_daisy_control.cpp ****       MessageNode *const node = mq_peek(&mq);
 1358              		.loc 3 182 5 is_stmt 1 view .LVU321
 182:source/Heavy_daisy_control.cpp ****       MessageNode *const node = mq_peek(&mq);
 1359              		.loc 3 182 31 view .LVU322
 1360              	.LBB136:
 1361              	.LBI136:
 1362              		.file 5 "source/HvMessageQueue.h"
   1:source/HvMessageQueue.h **** /**
   2:source/HvMessageQueue.h ****  * Copyright (c) 2014-2018 Enzien Audio Ltd.
   3:source/HvMessageQueue.h ****  *
   4:source/HvMessageQueue.h ****  * Permission to use, copy, modify, and/or distribute this software for any
   5:source/HvMessageQueue.h ****  * purpose with or without fee is hereby granted, provided that the above
   6:source/HvMessageQueue.h ****  * copyright notice and this permission notice appear in all copies.
   7:source/HvMessageQueue.h ****  *
   8:source/HvMessageQueue.h ****  * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
   9:source/HvMessageQueue.h ****  * REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
  10:source/HvMessageQueue.h ****  * AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
  11:source/HvMessageQueue.h ****  * INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
  12:source/HvMessageQueue.h ****  * LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
  13:source/HvMessageQueue.h ****  * OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
  14:source/HvMessageQueue.h ****  * PERFORMANCE OF THIS SOFTWARE.
  15:source/HvMessageQueue.h ****  */
  16:source/HvMessageQueue.h **** 
  17:source/HvMessageQueue.h **** #ifndef _MESSAGE_QUEUE_H_
  18:source/HvMessageQueue.h **** #define _MESSAGE_QUEUE_H_
  19:source/HvMessageQueue.h **** 
  20:source/HvMessageQueue.h **** #include "HvMessage.h"
  21:source/HvMessageQueue.h **** #include "HvMessagePool.h"
  22:source/HvMessageQueue.h **** 
  23:source/HvMessageQueue.h **** #ifdef __cplusplus
  24:source/HvMessageQueue.h **** extern "C" {
  25:source/HvMessageQueue.h **** #endif
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s 			page 36


  26:source/HvMessageQueue.h **** 
  27:source/HvMessageQueue.h **** #ifdef __cplusplus
  28:source/HvMessageQueue.h **** class HeavyContextInterface;
  29:source/HvMessageQueue.h **** #else
  30:source/HvMessageQueue.h **** typedef struct HeavyContextInterface HeavyContextInterface;
  31:source/HvMessageQueue.h **** #endif
  32:source/HvMessageQueue.h **** 
  33:source/HvMessageQueue.h **** typedef struct MessageNode {
  34:source/HvMessageQueue.h ****   struct MessageNode *prev; // doubly linked list
  35:source/HvMessageQueue.h ****   struct MessageNode *next;
  36:source/HvMessageQueue.h ****   HvMessage *m;
  37:source/HvMessageQueue.h ****   void (*sendMessage)(HeavyContextInterface *, int, const HvMessage *);
  38:source/HvMessageQueue.h ****   int let;
  39:source/HvMessageQueue.h **** } MessageNode;
  40:source/HvMessageQueue.h **** 
  41:source/HvMessageQueue.h **** /** A doubly linked list containing scheduled messages. */
  42:source/HvMessageQueue.h **** typedef struct HvMessageQueue {
  43:source/HvMessageQueue.h ****   MessageNode *head; // the head of the queue
  44:source/HvMessageQueue.h ****   MessageNode *tail; // the tail of the queue
  45:source/HvMessageQueue.h ****   MessageNode *pool; // the head of the reserve pool
  46:source/HvMessageQueue.h ****   HvMessagePool mp;
  47:source/HvMessageQueue.h **** } HvMessageQueue;
  48:source/HvMessageQueue.h **** 
  49:source/HvMessageQueue.h **** hv_size_t mq_initWithPoolSize(HvMessageQueue *q, hv_size_t poolSizeKB);
  50:source/HvMessageQueue.h **** 
  51:source/HvMessageQueue.h **** void mq_free(HvMessageQueue *q);
  52:source/HvMessageQueue.h **** 
  53:source/HvMessageQueue.h **** int mq_size(HvMessageQueue *q);
  54:source/HvMessageQueue.h **** 
  55:source/HvMessageQueue.h **** static inline HvMessage *mq_node_getMessage(MessageNode *n) {
  56:source/HvMessageQueue.h ****   return n->m;
  57:source/HvMessageQueue.h **** }
  58:source/HvMessageQueue.h **** 
  59:source/HvMessageQueue.h **** static inline int mq_node_getLet(MessageNode *n) {
  60:source/HvMessageQueue.h ****   return n->let;
  61:source/HvMessageQueue.h **** }
  62:source/HvMessageQueue.h **** 
  63:source/HvMessageQueue.h **** static inline bool mq_hasMessage(HvMessageQueue *q) {
  64:source/HvMessageQueue.h ****   return (q->head != NULL);
  65:source/HvMessageQueue.h **** }
  66:source/HvMessageQueue.h **** 
  67:source/HvMessageQueue.h **** // true if there is a message and it occurs before (<) timestamp
  68:source/HvMessageQueue.h **** static inline bool mq_hasMessageBefore(HvMessageQueue *const q, const hv_uint32_t timestamp) {
 1363              		.loc 5 68 20 view .LVU323
 1364              	.LBB137:
  69:source/HvMessageQueue.h ****   return mq_hasMessage(q) && (msg_getTimestamp(mq_node_getMessage(q->head)) < timestamp);
 1365              		.loc 5 69 3 view .LVU324
 1366              	.LBB138:
 1367              	.LBI138:
  63:source/HvMessageQueue.h ****   return (q->head != NULL);
 1368              		.loc 5 63 20 view .LVU325
 1369              	.LBB139:
  64:source/HvMessageQueue.h **** }
 1370              		.loc 5 64 3 view .LVU326
  64:source/HvMessageQueue.h **** }
 1371              		.loc 5 64 3 is_stmt 0 view .LVU327
 1372              	.LBE139:
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s 			page 37


 1373              	.LBE138:
 1374              		.loc 5 69 27 view .LVU328
 1375 008a 70B1     		cbz	r0, .L83
 1376              	.LVL116:
 1377              	.L81:
 1378              	.LBB141:
 1379              	.LBI141:
  55:source/HvMessageQueue.h ****   return n->m;
 1380              		.loc 5 55 26 is_stmt 1 view .LVU329
 1381              	.LBB142:
  56:source/HvMessageQueue.h **** }
 1382              		.loc 5 56 3 view .LVU330
  56:source/HvMessageQueue.h **** }
 1383              		.loc 5 56 13 is_stmt 0 view .LVU331
 1384 008c 8268     		ldr	r2, [r0, #8]
 1385              	.LVL117:
  56:source/HvMessageQueue.h **** }
 1386              		.loc 5 56 13 view .LVU332
 1387              	.LBE142:
 1388              	.LBE141:
 1389              	.LBB143:
 1390              	.LBI143:
 1391              		.file 6 "source/HvMessage.h"
   1:source/HvMessage.h **** /**
   2:source/HvMessage.h ****  * Copyright (c) 2014-2018 Enzien Audio Ltd.
   3:source/HvMessage.h ****  *
   4:source/HvMessage.h ****  * Permission to use, copy, modify, and/or distribute this software for any
   5:source/HvMessage.h ****  * purpose with or without fee is hereby granted, provided that the above
   6:source/HvMessage.h ****  * copyright notice and this permission notice appear in all copies.
   7:source/HvMessage.h ****  *
   8:source/HvMessage.h ****  * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
   9:source/HvMessage.h ****  * REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
  10:source/HvMessage.h ****  * AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
  11:source/HvMessage.h ****  * INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
  12:source/HvMessage.h ****  * LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
  13:source/HvMessage.h ****  * OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
  14:source/HvMessage.h ****  * PERFORMANCE OF THIS SOFTWARE.
  15:source/HvMessage.h ****  */
  16:source/HvMessage.h **** 
  17:source/HvMessage.h **** #ifndef _HEAVY_MESSAGE_H_
  18:source/HvMessage.h **** #define _HEAVY_MESSAGE_H_
  19:source/HvMessage.h **** 
  20:source/HvMessage.h **** #include "HvUtils.h"
  21:source/HvMessage.h **** 
  22:source/HvMessage.h **** #ifdef __cplusplus
  23:source/HvMessage.h **** extern "C" {
  24:source/HvMessage.h **** #endif
  25:source/HvMessage.h **** 
  26:source/HvMessage.h **** typedef enum ElementType {
  27:source/HvMessage.h ****   HV_MSG_BANG = 0,
  28:source/HvMessage.h ****   HV_MSG_FLOAT = 1,
  29:source/HvMessage.h ****   HV_MSG_SYMBOL = 2,
  30:source/HvMessage.h ****   HV_MSG_HASH = 3
  31:source/HvMessage.h **** } ElementType;
  32:source/HvMessage.h **** 
  33:source/HvMessage.h **** typedef struct Element {
  34:source/HvMessage.h ****   ElementType type;
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s 			page 38


  35:source/HvMessage.h ****   union {
  36:source/HvMessage.h ****     float f; // float
  37:source/HvMessage.h ****     const char *s; // symbol
  38:source/HvMessage.h ****     hv_uint32_t h; // hash
  39:source/HvMessage.h ****   } data;
  40:source/HvMessage.h **** } Element;
  41:source/HvMessage.h **** 
  42:source/HvMessage.h **** typedef struct HvMessage {
  43:source/HvMessage.h ****   hv_uint32_t timestamp; // the sample at which this message should be processed
  44:source/HvMessage.h ****   hv_uint16_t numElements;
  45:source/HvMessage.h ****   hv_uint16_t numBytes; // the total number of bytes that this message occupies in memory, includin
  46:source/HvMessage.h ****   Element elem;
  47:source/HvMessage.h **** } HvMessage;
  48:source/HvMessage.h **** 
  49:source/HvMessage.h **** typedef struct ReceiverMessagePair {
  50:source/HvMessage.h ****   hv_uint32_t receiverHash;
  51:source/HvMessage.h ****   HvMessage msg;
  52:source/HvMessage.h **** } ReceiverMessagePair;
  53:source/HvMessage.h **** 
  54:source/HvMessage.h **** #define HV_MESSAGE_ON_STACK(_x) (HvMessage *) hv_alloca(msg_getCoreSize(_x))
  55:source/HvMessage.h **** 
  56:source/HvMessage.h **** /** Returns the number of bytes that this message consumes in memory, not including strings. */
  57:source/HvMessage.h **** static inline hv_size_t msg_getCoreSize(hv_size_t numElements) {
  58:source/HvMessage.h ****   hv_assert(numElements > 0);
  59:source/HvMessage.h ****   return sizeof(HvMessage) + ((numElements-1) * sizeof(Element));
  60:source/HvMessage.h **** }
  61:source/HvMessage.h **** 
  62:source/HvMessage.h **** HvMessage *msg_copy(const HvMessage *m);
  63:source/HvMessage.h **** 
  64:source/HvMessage.h **** /** Copies the message into the given buffer. The buffer must be at least as large as msg_getNumHea
  65:source/HvMessage.h **** void msg_copyToBuffer(const HvMessage *m, char *buffer, hv_size_t len);
  66:source/HvMessage.h **** 
  67:source/HvMessage.h **** void msg_setElementToFrom(HvMessage *n, int indexN, const HvMessage *const m, int indexM);
  68:source/HvMessage.h **** 
  69:source/HvMessage.h **** /** Frees a message on the heap. Does nothing if argument is NULL. */
  70:source/HvMessage.h **** void msg_free(HvMessage *m);
  71:source/HvMessage.h **** 
  72:source/HvMessage.h **** HvMessage *msg_init(HvMessage *m, hv_size_t numElements, hv_uint32_t timestamp);
  73:source/HvMessage.h **** 
  74:source/HvMessage.h **** HvMessage *msg_initWithFloat(HvMessage *m, hv_uint32_t timestamp, float f);
  75:source/HvMessage.h **** 
  76:source/HvMessage.h **** HvMessage *msg_initWithBang(HvMessage *m, hv_uint32_t timestamp);
  77:source/HvMessage.h **** 
  78:source/HvMessage.h **** HvMessage *msg_initWithSymbol(HvMessage *m, hv_uint32_t timestamp, const char *s);
  79:source/HvMessage.h **** 
  80:source/HvMessage.h **** HvMessage *msg_initWithHash(HvMessage *m, hv_uint32_t timestamp, hv_uint32_t h);
  81:source/HvMessage.h **** 
  82:source/HvMessage.h **** static inline hv_uint32_t msg_getTimestamp(const HvMessage *m) {
 1392              		.loc 6 82 27 is_stmt 1 view .LVU333
 1393              	.LBB144:
  83:source/HvMessage.h ****   return m->timestamp;
 1394              		.loc 6 83 3 view .LVU334
 1395              		.loc 6 83 3 is_stmt 0 view .LVU335
 1396              	.LBE144:
 1397              	.LBE143:
 1398              		.loc 5 69 27 view .LVU336
 1399 008e 1368     		ldr	r3, [r2]
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s 			page 39


 1400 0090 9845     		cmp	r8, r3
 1401 0092 0AD9     		bls	.L83
 1402              	.LVL118:
 1403              		.loc 5 69 27 view .LVU337
 1404              	.LBE137:
 1405              	.LBE136:
 1406              	.LBB147:
 183:source/Heavy_daisy_control.cpp ****       node->sendMessage(this, node->let, node->m);
 1407              		.loc 3 183 7 is_stmt 1 view .LVU338
 183:source/Heavy_daisy_control.cpp ****       node->sendMessage(this, node->let, node->m);
 1408              		.loc 3 183 7 is_stmt 0 view .LVU339
 1409              	.LBE147:
 1410              	.LBE135:
 1411              	.LBE231:
  70:source/HvMessageQueue.h **** }
  71:source/HvMessageQueue.h **** 
  72:source/HvMessageQueue.h **** static inline MessageNode *mq_peek(HvMessageQueue *q) {
  73:source/HvMessageQueue.h ****   return q->head;
 1412              		.loc 5 73 3 is_stmt 1 view .LVU340
 1413              	.LBB232:
 1414              	.LBB224:
 1415              	.LBB148:
 184:source/Heavy_daisy_control.cpp ****       mq_pop(&mq);
 1416              		.loc 3 184 7 view .LVU341
 184:source/Heavy_daisy_control.cpp ****       mq_pop(&mq);
 1417              		.loc 3 184 24 is_stmt 0 view .LVU342
 1418 0094 D0E90331 		ldrd	r3, r1, [r0, #12]
 1419 0098 2046     		mov	r0, r4
 1420              	.LVL119:
 184:source/Heavy_daisy_control.cpp ****       mq_pop(&mq);
 1421              		.loc 3 184 24 view .LVU343
 1422 009a 9847     		blx	r3
 1423              	.LVL120:
 185:source/Heavy_daisy_control.cpp ****     }
 1424              		.loc 3 185 7 is_stmt 1 view .LVU344
 185:source/Heavy_daisy_control.cpp ****     }
 1425              		.loc 3 185 13 is_stmt 0 view .LVU345
 1426 009c 04F11800 		add	r0, r4, #24
 1427 00a0 FFF7FEFF 		bl	mq_pop
 1428              	.LVL121:
 1429              	.LBE148:
 182:source/Heavy_daisy_control.cpp ****       MessageNode *const node = mq_peek(&mq);
 1430              		.loc 3 182 5 is_stmt 1 view .LVU346
 182:source/Heavy_daisy_control.cpp ****       MessageNode *const node = mq_peek(&mq);
 1431              		.loc 3 182 31 view .LVU347
 1432              	.LBB149:
  68:source/HvMessageQueue.h ****   return mq_hasMessage(q) && (msg_getTimestamp(mq_node_getMessage(q->head)) < timestamp);
 1433              		.loc 5 68 20 view .LVU348
 1434              	.LBB146:
  69:source/HvMessageQueue.h **** }
 1435              		.loc 5 69 3 view .LVU349
 1436              	.LBB145:
  63:source/HvMessageQueue.h ****   return (q->head != NULL);
 1437              		.loc 5 63 20 view .LVU350
 1438              	.LBB140:
  64:source/HvMessageQueue.h **** }
 1439              		.loc 5 64 3 view .LVU351
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s 			page 40


  64:source/HvMessageQueue.h **** }
 1440              		.loc 5 64 14 is_stmt 0 view .LVU352
 1441 00a4 A069     		ldr	r0, [r4, #24]
 1442              	.LVL122:
  64:source/HvMessageQueue.h **** }
 1443              		.loc 5 64 14 view .LVU353
 1444              	.LBE140:
 1445              	.LBE145:
  69:source/HvMessageQueue.h **** }
 1446              		.loc 5 69 27 view .LVU354
 1447 00a6 0028     		cmp	r0, #0
 1448 00a8 F0D1     		bne	.L81
 1449              	.LVL123:
 1450              	.L83:
  69:source/HvMessageQueue.h **** }
 1451              		.loc 5 69 27 view .LVU355
 1452              	.LBE146:
 1453              	.LBE149:
 191:source/Heavy_daisy_control.cpp ****     __hv_zero_f(VOf(O1));
 1454              		.loc 3 191 5 is_stmt 1 view .LVU356
 191:source/Heavy_daisy_control.cpp ****     __hv_zero_f(VOf(O1));
 1455              		.loc 3 191 5 is_stmt 0 view .LVU357
 1456              	.LBE224:
 1457              	.LBE232:
 1458              		.loc 4 34 3 is_stmt 1 view .LVU358
 1459              	.LBB233:
 1460              	.LBB225:
 192:source/Heavy_daisy_control.cpp **** 
 1461              		.loc 3 192 5 view .LVU359
 192:source/Heavy_daisy_control.cpp **** 
 1462              		.loc 3 192 5 is_stmt 0 view .LVU360
 1463              	.LBE225:
 1464              	.LBE233:
 1465              		.loc 4 34 3 is_stmt 1 view .LVU361
 1466              	.LBB234:
 1467              	.LBB226:
 195:source/Heavy_daisy_control.cpp ****     __hv_var_k_f(VOf(Bf1), 0.5f, 0.5f, 0.5f, 0.5f, 0.5f, 0.5f, 0.5f, 0.5f);
 1468              		.loc 3 195 5 view .LVU362
 1469              	.LBB150:
 1470              	.LBI150:
 1471              		.file 7 "source/HvSignalPhasor.h"
   1:source/HvSignalPhasor.h **** /**
   2:source/HvSignalPhasor.h ****  * Copyright (c) 2014-2018 Enzien Audio Ltd.
   3:source/HvSignalPhasor.h ****  *
   4:source/HvSignalPhasor.h ****  * Permission to use, copy, modify, and/or distribute this software for any
   5:source/HvSignalPhasor.h ****  * purpose with or without fee is hereby granted, provided that the above
   6:source/HvSignalPhasor.h ****  * copyright notice and this permission notice appear in all copies.
   7:source/HvSignalPhasor.h ****  *
   8:source/HvSignalPhasor.h ****  * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
   9:source/HvSignalPhasor.h ****  * REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
  10:source/HvSignalPhasor.h ****  * AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
  11:source/HvSignalPhasor.h ****  * INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
  12:source/HvSignalPhasor.h ****  * LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
  13:source/HvSignalPhasor.h ****  * OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
  14:source/HvSignalPhasor.h ****  * PERFORMANCE OF THIS SOFTWARE.
  15:source/HvSignalPhasor.h ****  */
  16:source/HvSignalPhasor.h **** 
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s 			page 41


  17:source/HvSignalPhasor.h **** #ifndef _HEAVY_SIGNAL_PHASOR_H_
  18:source/HvSignalPhasor.h **** #define _HEAVY_SIGNAL_PHASOR_H_
  19:source/HvSignalPhasor.h **** 
  20:source/HvSignalPhasor.h **** #include "HvHeavyInternal.h"
  21:source/HvSignalPhasor.h **** 
  22:source/HvSignalPhasor.h **** #ifdef __cplusplus
  23:source/HvSignalPhasor.h **** extern "C" {
  24:source/HvSignalPhasor.h **** #endif
  25:source/HvSignalPhasor.h **** 
  26:source/HvSignalPhasor.h **** typedef struct SignalPhasor {
  27:source/HvSignalPhasor.h **** #if HV_SIMD_AVX
  28:source/HvSignalPhasor.h ****   __m256 phase; // current phase
  29:source/HvSignalPhasor.h ****   __m256 inc;   // phase increment
  30:source/HvSignalPhasor.h **** #elif HV_SIMD_SSE
  31:source/HvSignalPhasor.h ****   __m128i phase;
  32:source/HvSignalPhasor.h ****   __m128i inc;
  33:source/HvSignalPhasor.h **** #elif HV_SIMD_NEON
  34:source/HvSignalPhasor.h ****   uint32x4_t phase;
  35:source/HvSignalPhasor.h ****   int32x4_t inc;
  36:source/HvSignalPhasor.h **** #else // HV_SIMD_NONE
  37:source/HvSignalPhasor.h ****   hv_uint32_t phase;
  38:source/HvSignalPhasor.h ****   hv_int32_t inc;
  39:source/HvSignalPhasor.h **** #endif
  40:source/HvSignalPhasor.h ****   union {
  41:source/HvSignalPhasor.h ****     float f2sc; // float to step conversion (used for __phasor~f)
  42:source/HvSignalPhasor.h ****     hv_int32_t s; // step value (used for __phasor_k~f)
  43:source/HvSignalPhasor.h ****   } step;
  44:source/HvSignalPhasor.h **** } SignalPhasor;
  45:source/HvSignalPhasor.h **** 
  46:source/HvSignalPhasor.h **** hv_size_t sPhasor_init(SignalPhasor *o, double samplerate);
  47:source/HvSignalPhasor.h **** 
  48:source/HvSignalPhasor.h **** hv_size_t sPhasor_k_init(SignalPhasor *o, float frequency, double samplerate);
  49:source/HvSignalPhasor.h **** 
  50:source/HvSignalPhasor.h **** void sPhasor_k_onMessage(HeavyContextInterface *_c, SignalPhasor *o, int letIn, const HvMessage *m)
  51:source/HvSignalPhasor.h **** 
  52:source/HvSignalPhasor.h **** void sPhasor_onMessage(HeavyContextInterface *_c, SignalPhasor *o, int letIn, const HvMessage *m);
  53:source/HvSignalPhasor.h **** 
  54:source/HvSignalPhasor.h **** static inline void __hv_phasor_f(SignalPhasor *o, hv_bInf_t bIn, hv_bOutf_t bOut) {
  55:source/HvSignalPhasor.h **** #if HV_SIMD_AVX
  56:source/HvSignalPhasor.h ****   __m256 p = _mm256_mul_ps(bIn, _mm256_set1_ps(o->step.f2sc)); // a b c d e f g h
  57:source/HvSignalPhasor.h **** 
  58:source/HvSignalPhasor.h ****   __m256 z = _mm256_setzero_ps();
  59:source/HvSignalPhasor.h **** 
  60:source/HvSignalPhasor.h ****   // http://stackoverflow.com/questions/11906814/how-to-rotate-an-sse-avx-vector
  61:source/HvSignalPhasor.h ****   __m256 a = _mm256_permute_ps(p, _MM_SHUFFLE(2,1,0,3)); // d a b c h e f g
  62:source/HvSignalPhasor.h ****   __m256 b = _mm256_permute2f128_ps(a, a, 0x01);         // h e f g d a b c
  63:source/HvSignalPhasor.h ****   __m256 c = _mm256_blend_ps(a, b, 0x10);                // d a b c d e f g
  64:source/HvSignalPhasor.h ****   __m256 d = _mm256_blend_ps(c, z, 0x01);                // 0 a b c d e f g
  65:source/HvSignalPhasor.h ****   __m256 e = _mm256_add_ps(p, d); // a (a+b) (b+c) (c+d) (d+e) (e+f) (f+g) (g+h)
  66:source/HvSignalPhasor.h **** 
  67:source/HvSignalPhasor.h ****   __m256 f = _mm256_permute_ps(e, _MM_SHUFFLE(1,0,3,2)); // (b+c) (c+d) a (a+b) (f+g) (g+h) (d+e) (
  68:source/HvSignalPhasor.h ****   __m256 g = _mm256_permute2f128_ps(f, f, 0x01);         // (f+g) (g+h) (d+e) (e+f) (b+c) (c+d) a (
  69:source/HvSignalPhasor.h ****   __m256 h = _mm256_blend_ps(f, g, 0x33);                // (b+c) (c+d) a (a+b) (b+c) (c+d) (d+e) (
  70:source/HvSignalPhasor.h ****   __m256 i = _mm256_blend_ps(h, z, 0x03);                // 0 0 a (a+b) (b+c) (c+d) (d+e) (e+f)
  71:source/HvSignalPhasor.h ****   __m256 j = _mm256_add_ps(e, i); // a (a+b) (a+b+c) (a+b+c+d) (b+c+d+e) (c+d+e+f) (d+e+f+g) (e+f+g
  72:source/HvSignalPhasor.h **** 
  73:source/HvSignalPhasor.h ****   __m256 k = _mm256_permute2f128_ps(j, z, 0x02);         // 0 0 0 0 a (a+b) (a+b+c) (a+b+c+d) (b+c+
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s 			page 42


  74:source/HvSignalPhasor.h ****   __m256 m = _mm256_add_ps(j, k); // a (a+b) (a+b+c) (a+b+c+d) (a+b+c+d+e) (a+b+c+d+e+f) (a+b+c+d+e
  75:source/HvSignalPhasor.h **** 
  76:source/HvSignalPhasor.h ****   __m256 n = _mm256_or_ps(_mm256_andnot_ps(
  77:source/HvSignalPhasor.h ****       _mm256_set1_ps(-INFINITY),
  78:source/HvSignalPhasor.h ****       _mm256_add_ps(o->phase, m)),
  79:source/HvSignalPhasor.h ****       _mm256_set1_ps(1.0f));
  80:source/HvSignalPhasor.h **** 
  81:source/HvSignalPhasor.h ****   *bOut = _mm256_sub_ps(n, _mm256_set1_ps(1.0f));
  82:source/HvSignalPhasor.h **** 
  83:source/HvSignalPhasor.h ****   __m256 x = _mm256_permute_ps(n, _MM_SHUFFLE(3,3,3,3));
  84:source/HvSignalPhasor.h ****   o->phase = _mm256_permute2f128_ps(x, x, 0x11);
  85:source/HvSignalPhasor.h **** #elif HV_SIMD_SSE
  86:source/HvSignalPhasor.h ****   __m128i p = _mm_cvtps_epi32(_mm_mul_ps(bIn, _mm_set1_ps(o->step.f2sc))); // convert frequency to 
  87:source/HvSignalPhasor.h ****   p = _mm_add_epi32(p, _mm_slli_si128(p, 4)); // add incremental steps to phase (prefix sum)
  88:source/HvSignalPhasor.h ****   p = _mm_add_epi32(p, _mm_slli_si128(p, 8)); // http://stackoverflow.com/questions/10587598/simd-p
  89:source/HvSignalPhasor.h ****   p = _mm_add_epi32(o->phase, p);
  90:source/HvSignalPhasor.h ****   *bOut = _mm_sub_ps(_mm_castsi128_ps(
  91:source/HvSignalPhasor.h ****       _mm_or_si128(_mm_srli_epi32(p, 9),
  92:source/HvSignalPhasor.h ****       _mm_set_epi32(0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000))),
  93:source/HvSignalPhasor.h ****       _mm_set1_ps(1.0f));
  94:source/HvSignalPhasor.h ****   o->phase = _mm_shuffle_epi32(p, _MM_SHUFFLE(3,3,3,3));
  95:source/HvSignalPhasor.h **** #elif HV_SIMD_NEON
  96:source/HvSignalPhasor.h ****   int32x4_t p = vcvtq_s32_f32(vmulq_n_f32(bIn, o->step.f2sc));
  97:source/HvSignalPhasor.h ****   p = vaddq_s32(p, vextq_s32(vdupq_n_s32(0), p, 3)); // http://stackoverflow.com/questions/11259596
  98:source/HvSignalPhasor.h ****   p = vaddq_s32(p, vextq_s32(vdupq_n_s32(0), p, 2));
  99:source/HvSignalPhasor.h ****   uint32x4_t pp = vaddq_u32(o->phase, vreinterpretq_u32_s32(p));
 100:source/HvSignalPhasor.h ****   *bOut = vsubq_f32(vreinterpretq_f32_u32(vorrq_u32(vshrq_n_u32(pp, 9), vdupq_n_u32(0x3F800000))), 
 101:source/HvSignalPhasor.h ****   o->phase = vdupq_n_u32(pp[3]);
 102:source/HvSignalPhasor.h **** #else // HV_SIMD_NONE
 103:source/HvSignalPhasor.h ****   const hv_uint32_t p = (o->phase >> 9) | 0x3F800000;
 104:source/HvSignalPhasor.h ****   *bOut = *((float *) (&p)) - 1.0f;
 105:source/HvSignalPhasor.h ****   o->phase += ((int) (bIn * o->step.f2sc));
 106:source/HvSignalPhasor.h **** #endif
 107:source/HvSignalPhasor.h **** }
 108:source/HvSignalPhasor.h **** 
 109:source/HvSignalPhasor.h **** static inline void __hv_phasor_k_f(SignalPhasor *o, hv_bOutf_t bOut) {
 1472              		.loc 7 109 20 view .LVU363
 1473              	.LBB151:
 110:source/HvSignalPhasor.h **** #if HV_SIMD_AVX
 111:source/HvSignalPhasor.h ****   *bOut = _mm256_sub_ps(o->phase, _mm256_set1_ps(1.0f));
 112:source/HvSignalPhasor.h ****   o->phase = _mm256_or_ps(_mm256_andnot_ps(
 113:source/HvSignalPhasor.h ****       _mm256_set1_ps(-INFINITY),
 114:source/HvSignalPhasor.h ****       _mm256_add_ps(o->phase, o->inc)),
 115:source/HvSignalPhasor.h ****       _mm256_set1_ps(1.0f));
 116:source/HvSignalPhasor.h **** #elif HV_SIMD_SSE
 117:source/HvSignalPhasor.h ****   *bOut = _mm_sub_ps(_mm_castsi128_ps(
 118:source/HvSignalPhasor.h ****       _mm_or_si128(_mm_srli_epi32(o->phase, 9),
 119:source/HvSignalPhasor.h ****       _mm_set_epi32(0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000))),
 120:source/HvSignalPhasor.h ****       _mm_set1_ps(1.0f));
 121:source/HvSignalPhasor.h ****   o->phase = _mm_add_epi32(o->phase, o->inc);
 122:source/HvSignalPhasor.h **** #elif HV_SIMD_NEON
 123:source/HvSignalPhasor.h ****   *bOut = vsubq_f32(vreinterpretq_f32_u32(
 124:source/HvSignalPhasor.h ****       vorrq_u32(vshrq_n_u32(o->phase, 9),
 125:source/HvSignalPhasor.h ****       vdupq_n_u32(0x3F800000))),
 126:source/HvSignalPhasor.h ****       vdupq_n_f32(1.0f));
 127:source/HvSignalPhasor.h ****   o->phase = vaddq_u32(o->phase, vreinterpretq_u32_s32(o->inc));
 128:source/HvSignalPhasor.h **** #else // HV_SIMD_NONE
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s 			page 43


 129:source/HvSignalPhasor.h ****   const hv_uint32_t p = (o->phase >> 9) | 0x3F800000;
 1474              		.loc 7 129 3 view .LVU364
 1475              		.loc 7 129 29 is_stmt 0 view .LVU365
 1476 00aa D4F88820 		ldr	r2, [r4, #136]
 1477              	.LVL124:
 130:source/HvSignalPhasor.h ****   *bOut = *((float *) (&p)) - 1.0f;
 1478              		.loc 7 130 3 is_stmt 1 view .LVU366
 131:source/HvSignalPhasor.h ****   o->phase += o->inc;
 1479              		.loc 7 131 3 view .LVU367
 130:source/HvSignalPhasor.h ****   *bOut = *((float *) (&p)) - 1.0f;
 1480              		.loc 7 130 29 is_stmt 0 view .LVU368
 1481 00ae F7EE003A 		vmov.f32	s7, #1.0e+0
 1482              	.LBE151:
 1483              	.LBE150:
 1484              	.LBB157:
 1485              	.LBB158:
  35:source/HvMath.h **** #endif
  36:source/HvMath.h **** }
  37:source/HvMath.h **** 
  38:source/HvMath.h **** static inline void __hv_zero_i(hv_bOuti_t bOut) {
  39:source/HvMath.h **** #if HV_SIMD_AVX
  40:source/HvMath.h ****   *bOut = _mm256_setzero_si256();
  41:source/HvMath.h **** #elif HV_SIMD_SSE
  42:source/HvMath.h ****   *bOut = _mm_setzero_si128();
  43:source/HvMath.h **** #elif HV_SIMD_NEON
  44:source/HvMath.h ****   *bOut = vdupq_n_s32(0);
  45:source/HvMath.h **** #else // HV_SIMD_NONE
  46:source/HvMath.h ****   *bOut = 0;
  47:source/HvMath.h **** #endif
  48:source/HvMath.h **** }
  49:source/HvMath.h **** 
  50:source/HvMath.h **** static inline void __hv_load_f(float *bIn, hv_bOutf_t bOut) {
  51:source/HvMath.h **** #if HV_SIMD_AVX
  52:source/HvMath.h ****   *bOut = _mm256_load_ps(bIn);
  53:source/HvMath.h **** #elif HV_SIMD_SSE
  54:source/HvMath.h ****   *bOut = _mm_load_ps(bIn);
  55:source/HvMath.h **** #elif HV_SIMD_NEON
  56:source/HvMath.h ****   *bOut = vld1q_f32(bIn);
  57:source/HvMath.h **** #else // HV_SIMD_NONE
  58:source/HvMath.h ****   *bOut = *bIn;
  59:source/HvMath.h **** #endif
  60:source/HvMath.h **** }
  61:source/HvMath.h **** 
  62:source/HvMath.h **** static inline void __hv_store_f(float *bOut, hv_bInf_t bIn) {
  63:source/HvMath.h **** #if HV_SIMD_AVX
  64:source/HvMath.h ****   _mm256_store_ps(bOut, bIn);
  65:source/HvMath.h **** #elif HV_SIMD_SSE
  66:source/HvMath.h ****   _mm_store_ps(bOut, bIn);
  67:source/HvMath.h **** #elif HV_SIMD_NEON
  68:source/HvMath.h ****   vst1q_f32(bOut, bIn);
  69:source/HvMath.h **** #else // HV_SIMD_NONE
  70:source/HvMath.h ****   *bOut = bIn;
  71:source/HvMath.h **** #endif
  72:source/HvMath.h **** }
  73:source/HvMath.h **** 
  74:source/HvMath.h **** static inline void __hv_log2_f(hv_bInf_t bIn, hv_bOutf_t bOut) {
  75:source/HvMath.h **** #if HV_SIMD_AVX
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s 			page 44


  76:source/HvMath.h ****   hv_assert(0); // __hv_log2_f() not implemented
  77:source/HvMath.h **** #elif HV_SIMD_SSE
  78:source/HvMath.h ****   // https://en.wikipedia.org/wiki/Fast_inverse_square_root
  79:source/HvMath.h ****   __m128i a = _mm_castps_si128(bIn);
  80:source/HvMath.h ****   __m128i b = _mm_srli_epi32(a, 23);
  81:source/HvMath.h ****   __m128i c = _mm_sub_epi32(b, _mm_set1_epi32(127)); // exponent (int)
  82:source/HvMath.h ****   __m128 d = _mm_cvtepi32_ps(c); // exponent (float)
  83:source/HvMath.h ****   __m128i e = _mm_or_si128(_mm_andnot_si128(_mm_set1_epi32(0xFF800000), a), _mm_set1_epi32(0x3F8000
  84:source/HvMath.h ****   __m128 f = _mm_castsi128_ps(e); // 1+m (float)
  85:source/HvMath.h ****   __m128 g = _mm_add_ps(d, f); // e + 1 + m
  86:source/HvMath.h ****   __m128 h = _mm_add_ps(g, _mm_set1_ps(-0.9569643f)); // e + 1 + m + (sigma-1)
  87:source/HvMath.h ****   *bOut = h;
  88:source/HvMath.h **** #elif HV_SIMD_NEON
  89:source/HvMath.h ****   int32x4_t a = vreinterpretq_s32_f32(bIn);
  90:source/HvMath.h ****   int32x4_t b = vshrq_n_s32(a, 23);
  91:source/HvMath.h ****   int32x4_t c = vsubq_s32(b, vdupq_n_s32(127));
  92:source/HvMath.h ****   float32x4_t d = vcvtq_f32_s32(c);
  93:source/HvMath.h ****   int32x4_t e = vorrq_s32(vbicq_s32(a, vdupq_n_s32(0xFF800000)), vdupq_n_s32(0x3F800000));
  94:source/HvMath.h ****   float32x4_t f = vreinterpretq_f32_s32(e);
  95:source/HvMath.h ****   float32x4_t g = vaddq_f32(d, f);
  96:source/HvMath.h ****   float32x4_t h = vaddq_f32(g, vdupq_n_f32(-0.9569643f));
  97:source/HvMath.h ****   *bOut = h;
  98:source/HvMath.h **** #else // HV_SIMD_NONE
  99:source/HvMath.h ****   *bOut = 1.442695040888963f * hv_log_f(bIn);
 100:source/HvMath.h **** #endif
 101:source/HvMath.h **** }
 102:source/HvMath.h **** 
 103:source/HvMath.h **** // NOTE(mhroth): this is a pretty ghetto implementation
 104:source/HvMath.h **** static inline void __hv_cos_f(hv_bInf_t bIn, hv_bOutf_t bOut) {
 105:source/HvMath.h **** #if HV_SIMD_AVX
 106:source/HvMath.h ****   *bOut = _mm256_set_ps(
 107:source/HvMath.h ****       hv_cos_f(bIn[7]), hv_cos_f(bIn[6]), hv_cos_f(bIn[5]), hv_cos_f(bIn[4]),
 108:source/HvMath.h ****       hv_cos_f(bIn[3]), hv_cos_f(bIn[2]), hv_cos_f(bIn[1]), hv_cos_f(bIn[0]));
 109:source/HvMath.h **** #elif HV_SIMD_SSE
 110:source/HvMath.h ****   const float *const b = (float *) &bIn;
 111:source/HvMath.h ****   *bOut = _mm_set_ps(hv_cos_f(b[3]), hv_cos_f(b[2]), hv_cos_f(b[1]), hv_cos_f(b[0]));
 112:source/HvMath.h **** #elif HV_SIMD_NEON
 113:source/HvMath.h ****   *bOut = (float32x4_t) {hv_cos_f(bIn[0]), hv_cos_f(bIn[1]), hv_cos_f(bIn[2]), hv_cos_f(bIn[3])};
 114:source/HvMath.h **** #else // HV_SIMD_NONE
 115:source/HvMath.h ****   *bOut = hv_cos_f(bIn);
 116:source/HvMath.h **** #endif
 117:source/HvMath.h **** }
 118:source/HvMath.h **** 
 119:source/HvMath.h **** static inline void __hv_acos_f(hv_bInf_t bIn, hv_bOutf_t bOut) {
 120:source/HvMath.h **** #if HV_SIMD_AVX
 121:source/HvMath.h ****   hv_assert(0); // __hv_acos_f() not implemented
 122:source/HvMath.h **** #elif HV_SIMD_SSE
 123:source/HvMath.h ****   hv_assert(0); // __hv_acos_f() not implemented
 124:source/HvMath.h **** #elif HV_SIMD_NEON
 125:source/HvMath.h ****   hv_assert(0); // __hv_acos_f() not implemented
 126:source/HvMath.h **** #else // HV_SIMD_NONE
 127:source/HvMath.h ****   *bOut = hv_acos_f(bIn);
 128:source/HvMath.h **** #endif
 129:source/HvMath.h **** }
 130:source/HvMath.h **** 
 131:source/HvMath.h **** static inline void __hv_cosh_f(hv_bInf_t bIn, hv_bOutf_t bOut) {
 132:source/HvMath.h **** #if HV_SIMD_AVX
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s 			page 45


 133:source/HvMath.h ****   hv_assert(0); // __hv_cosh_f() not implemented
 134:source/HvMath.h **** #elif HV_SIMD_SSE
 135:source/HvMath.h ****   hv_assert(0); // __hv_cosh_f() not implemented
 136:source/HvMath.h **** #elif HV_SIMD_NEON
 137:source/HvMath.h ****   hv_assert(0); // __hv_cosh_f() not implemented
 138:source/HvMath.h **** #else // HV_SIMD_NONE
 139:source/HvMath.h ****   *bOut = hv_cosh_f(bIn);
 140:source/HvMath.h **** #endif
 141:source/HvMath.h **** }
 142:source/HvMath.h **** 
 143:source/HvMath.h **** static inline void __hv_acosh_f(hv_bInf_t bIn, hv_bOutf_t bOut) {
 144:source/HvMath.h **** #if HV_SIMD_AVX
 145:source/HvMath.h ****   hv_assert(0); // __hv_acosh_f() not implemented
 146:source/HvMath.h **** #elif HV_SIMD_SSE
 147:source/HvMath.h ****   hv_assert(0); // __hv_acosh_f() not implemented
 148:source/HvMath.h **** #elif HV_SIMD_NEON
 149:source/HvMath.h ****   hv_assert(0); // __hv_acosh_f() not implemented
 150:source/HvMath.h **** #else // HV_SIMD_NONE
 151:source/HvMath.h ****   *bOut = hv_acosh_f(bIn);
 152:source/HvMath.h **** #endif
 153:source/HvMath.h **** }
 154:source/HvMath.h **** 
 155:source/HvMath.h **** static inline void __hv_sin_f(hv_bInf_t bIn, hv_bOutf_t bOut) {
 156:source/HvMath.h **** #if HV_SIMD_AVX
 157:source/HvMath.h ****   hv_assert(0); // __hv_sin_f() not implemented
 158:source/HvMath.h **** #elif HV_SIMD_SSE
 159:source/HvMath.h ****   hv_assert(0); // __hv_sin_f() not implemented
 160:source/HvMath.h **** #elif HV_SIMD_NEON
 161:source/HvMath.h ****   hv_assert(0); // __hv_sin_f() not implemented
 162:source/HvMath.h **** #else // HV_SIMD_NONE
 163:source/HvMath.h ****   *bOut = hv_sin_f(bIn);
 164:source/HvMath.h **** #endif
 165:source/HvMath.h **** }
 166:source/HvMath.h **** 
 167:source/HvMath.h **** static inline void __hv_asin_f(hv_bInf_t bIn, hv_bOutf_t bOut) {
 168:source/HvMath.h **** #if HV_SIMD_AVX
 169:source/HvMath.h ****   hv_assert(0); // __hv_asin_f() not implemented
 170:source/HvMath.h **** #elif HV_SIMD_SSE
 171:source/HvMath.h ****   hv_assert(0); // __hv_asin_f() not implemented
 172:source/HvMath.h **** #elif HV_SIMD_NEON
 173:source/HvMath.h ****   hv_assert(0); // __hv_asin_f() not implemented
 174:source/HvMath.h **** #else // HV_SIMD_NONE
 175:source/HvMath.h ****   *bOut = hv_asin_f(bIn);
 176:source/HvMath.h **** #endif
 177:source/HvMath.h **** }
 178:source/HvMath.h **** 
 179:source/HvMath.h **** static inline void __hv_sinh_f(hv_bInf_t bIn, hv_bOutf_t bOut) {
 180:source/HvMath.h **** #if HV_SIMD_AVX
 181:source/HvMath.h ****   hv_assert(0); // __hv_sinh_f() not implemented
 182:source/HvMath.h **** #elif HV_SIMD_SSE
 183:source/HvMath.h ****   hv_assert(0); // __hv_sinh_f() not implemented
 184:source/HvMath.h **** #elif HV_SIMD_NEON
 185:source/HvMath.h ****   hv_assert(0); // __hv_sinh_f() not implemented
 186:source/HvMath.h **** #else // HV_SIMD_NONE
 187:source/HvMath.h ****   *bOut = hv_sinh_f(bIn);
 188:source/HvMath.h **** #endif
 189:source/HvMath.h **** }
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s 			page 46


 190:source/HvMath.h **** 
 191:source/HvMath.h **** static inline void __hv_asinh_f(hv_bInf_t bIn, hv_bOutf_t bOut) {
 192:source/HvMath.h **** #if HV_SIMD_AVX
 193:source/HvMath.h ****   hv_assert(0); // __hv_asinh_f() not implemented
 194:source/HvMath.h **** #elif HV_SIMD_SSE
 195:source/HvMath.h ****   hv_assert(0); // __hv_asinh_f() not implemented
 196:source/HvMath.h **** #elif HV_SIMD_NEON
 197:source/HvMath.h ****   hv_assert(0); // __hv_asinh_f() not implemented
 198:source/HvMath.h **** #else // HV_SIMD_NONE
 199:source/HvMath.h ****   *bOut = hv_asinh_f(bIn);
 200:source/HvMath.h **** #endif
 201:source/HvMath.h **** }
 202:source/HvMath.h **** 
 203:source/HvMath.h **** static inline void __hv_tan_f(hv_bInf_t bIn, hv_bOutf_t bOut) {
 204:source/HvMath.h **** #if HV_SIMD_AVX
 205:source/HvMath.h ****   hv_assert(0); // __hv_tan_f() not implemented
 206:source/HvMath.h **** #elif HV_SIMD_SSE
 207:source/HvMath.h ****   hv_assert(0); // __hv_tan_f() not implemented
 208:source/HvMath.h **** #elif HV_SIMD_NEON
 209:source/HvMath.h ****   hv_assert(0); // __hv_tan_f() not implemented
 210:source/HvMath.h **** #else // HV_SIMD_NONE
 211:source/HvMath.h ****   *bOut = hv_tan_f(bIn);
 212:source/HvMath.h **** #endif
 213:source/HvMath.h **** }
 214:source/HvMath.h **** 
 215:source/HvMath.h **** static inline void __hv_atan_f(hv_bInf_t bIn, hv_bOutf_t bOut) {
 216:source/HvMath.h **** #if HV_SIMD_AVX
 217:source/HvMath.h ****   hv_assert(0); // __hv_atan_f() not implemented
 218:source/HvMath.h **** #elif HV_SIMD_SSE
 219:source/HvMath.h ****   hv_assert(0); // __hv_atan_f() not implemented
 220:source/HvMath.h **** #elif HV_SIMD_NEON
 221:source/HvMath.h ****   hv_assert(0); // __hv_atan_f() not implemented
 222:source/HvMath.h **** #else // HV_SIMD_NONE
 223:source/HvMath.h ****   *bOut = hv_atan_f(bIn);
 224:source/HvMath.h **** #endif
 225:source/HvMath.h **** }
 226:source/HvMath.h **** 
 227:source/HvMath.h **** static inline void __hv_atan2_f(hv_bInf_t bIn0, hv_bInf_t bIn1, hv_bOutf_t bOut) {
 228:source/HvMath.h **** #if HV_SIMD_AVX
 229:source/HvMath.h ****   hv_assert(0); // __hv_atan2_f() not implemented
 230:source/HvMath.h **** #elif HV_SIMD_SSE
 231:source/HvMath.h ****   hv_assert(0); // __hv_atan2_f() not implemented
 232:source/HvMath.h **** #elif HV_SIMD_NEON
 233:source/HvMath.h ****   hv_assert(0); // __hv_atan2_f() not implemented
 234:source/HvMath.h **** #else // HV_SIMD_NONE
 235:source/HvMath.h ****   *bOut = hv_atan2_f(bIn0, bIn1);
 236:source/HvMath.h **** #endif
 237:source/HvMath.h **** }
 238:source/HvMath.h **** 
 239:source/HvMath.h **** static inline void __hv_tanh_f(hv_bInf_t bIn, hv_bOutf_t bOut) {
 240:source/HvMath.h **** #if HV_SIMD_AVX
 241:source/HvMath.h ****   hv_assert(0); // __hv_tanh_f() not implemented
 242:source/HvMath.h **** #elif HV_SIMD_SSE
 243:source/HvMath.h ****   hv_assert(0); // __hv_tanh_f() not implemented
 244:source/HvMath.h **** #elif HV_SIMD_NEON
 245:source/HvMath.h ****   hv_assert(0); // __hv_tanh_f() not implemented
 246:source/HvMath.h **** #else // HV_SIMD_NONE
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s 			page 47


 247:source/HvMath.h ****   *bOut = hv_tanh_f(bIn);
 248:source/HvMath.h **** #endif
 249:source/HvMath.h **** }
 250:source/HvMath.h **** 
 251:source/HvMath.h **** static inline void __hv_atanh_f(hv_bInf_t bIn, hv_bOutf_t bOut) {
 252:source/HvMath.h **** #if HV_SIMD_AVX
 253:source/HvMath.h ****   hv_assert(0); // __hv_atanh_f() not implemented
 254:source/HvMath.h **** #elif HV_SIMD_SSE
 255:source/HvMath.h ****   hv_assert(0); // __hv_atanh_f() not implemented
 256:source/HvMath.h **** #elif HV_SIMD_NEON
 257:source/HvMath.h ****   hv_assert(0); // __hv_atanh_f() not implemented
 258:source/HvMath.h **** #else // HV_SIMD_NONE
 259:source/HvMath.h ****   *bOut = hv_atanh_f(bIn);
 260:source/HvMath.h **** #endif
 261:source/HvMath.h **** }
 262:source/HvMath.h **** 
 263:source/HvMath.h **** static inline void __hv_sqrt_f(hv_bInf_t bIn, hv_bOutf_t bOut) {
 264:source/HvMath.h **** #if HV_SIMD_AVX
 265:source/HvMath.h ****   *bOut = _mm256_sqrt_ps(bIn);
 266:source/HvMath.h **** #elif HV_SIMD_SSE
 267:source/HvMath.h ****   *bOut = _mm_sqrt_ps(bIn);
 268:source/HvMath.h **** #elif HV_SIMD_NEON
 269:source/HvMath.h ****   const float32x4_t y = vrsqrteq_f32(bIn);
 270:source/HvMath.h ****   *bOut = vmulq_f32(bIn, vmulq_f32(vrsqrtsq_f32(vmulq_f32(bIn, y), y), y)); // numerical results ma
 271:source/HvMath.h **** #else // HV_SIMD_NONE
 272:source/HvMath.h ****   *bOut = hv_sqrt_f(bIn);
 273:source/HvMath.h **** #endif
 274:source/HvMath.h **** }
 275:source/HvMath.h **** 
 276:source/HvMath.h **** static inline void __hv_rsqrt_f(hv_bInf_t bIn, hv_bOutf_t bOut) {
 277:source/HvMath.h **** #if HV_SIMD_AVX
 278:source/HvMath.h ****   *bOut = _mm256_rsqrt_ps(bIn);
 279:source/HvMath.h **** #elif HV_SIMD_SSE
 280:source/HvMath.h ****   *bOut = _mm_rsqrt_ps(bIn);
 281:source/HvMath.h **** #elif HV_SIMD_NEON
 282:source/HvMath.h ****   const float32x4_t y = vrsqrteq_f32(bIn);
 283:source/HvMath.h ****   *bOut = vmulq_f32(vrsqrtsq_f32(vmulq_f32(bIn, y), y), y); // numerical results may be inexact
 284:source/HvMath.h **** #else // HV_SIMD_NONE
 285:source/HvMath.h ****   *bOut = 1.0f/hv_sqrt_f(bIn);
 286:source/HvMath.h **** #endif
 287:source/HvMath.h **** }
 288:source/HvMath.h **** 
 289:source/HvMath.h **** static inline void __hv_abs_f(hv_bInf_t bIn, hv_bOutf_t bOut) {
 290:source/HvMath.h **** #if HV_SIMD_AVX
 291:source/HvMath.h ****   *bOut = _mm256_andnot_ps(_mm256_set1_ps(-0.0f), bIn);
 292:source/HvMath.h **** #elif HV_SIMD_SSE
 293:source/HvMath.h ****   *bOut = _mm_andnot_ps(_mm_set1_ps(-0.0f), bIn); // == 1 << 31
 294:source/HvMath.h **** #elif HV_SIMD_NEON
 295:source/HvMath.h ****   *bOut = vabsq_f32(bIn);
 296:source/HvMath.h **** #else // HV_SIMD_NONE
 297:source/HvMath.h ****   *bOut = hv_abs_f(bIn);
 298:source/HvMath.h **** #endif
 299:source/HvMath.h **** }
 300:source/HvMath.h **** 
 301:source/HvMath.h **** static inline void __hv_neg_f(hv_bInf_t bIn, hv_bOutf_t bOut) {
 302:source/HvMath.h **** #if HV_SIMD_AVX
 303:source/HvMath.h ****   *bOut = _mm256_xor_ps(bIn, _mm256_set1_ps(-0.0f));
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s 			page 48


 304:source/HvMath.h **** #elif HV_SIMD_SSE
 305:source/HvMath.h ****   *bOut = _mm_xor_ps(bIn, _mm_set1_ps(-0.0f));
 306:source/HvMath.h **** #elif HV_SIMD_NEON
 307:source/HvMath.h ****   *bOut = vnegq_f32(bIn);
 308:source/HvMath.h **** #else // HV_SIMD_NONE
 309:source/HvMath.h ****   *bOut = bIn * -1.0f;
 310:source/HvMath.h **** #endif
 311:source/HvMath.h **** }
 312:source/HvMath.h **** 
 313:source/HvMath.h **** static inline void __hv_exp_f(hv_bInf_t bIn, hv_bOutf_t bOut) {
 314:source/HvMath.h **** #if HV_SIMD_AVX
 315:source/HvMath.h ****   float *const b = (float *) hv_alloca(HV_N_SIMD*sizeof(float));
 316:source/HvMath.h ****   _mm256_store_ps(b, bIn);
 317:source/HvMath.h ****   *bOut = _mm256_set_ps(
 318:source/HvMath.h ****       hv_exp_f(b[7]), hv_exp_f(b[6]), hv_exp_f(b[5]), hv_exp_f(b[4]),
 319:source/HvMath.h ****       hv_exp_f(b[3]), hv_exp_f(b[2]), hv_exp_f(b[1]), hv_exp_f(b[0]));
 320:source/HvMath.h **** #elif HV_SIMD_SSE
 321:source/HvMath.h ****   float *const b = (float *) hv_alloca(HV_N_SIMD*sizeof(float));
 322:source/HvMath.h ****   _mm_store_ps(b, bIn);
 323:source/HvMath.h ****   *bOut = _mm_set_ps(hv_exp_f(b[3]), hv_exp_f(b[2]), hv_exp_f(b[1]), hv_exp_f(b[0]));
 324:source/HvMath.h **** #elif HV_SIMD_NEON
 325:source/HvMath.h ****   *bOut = (float32x4_t) {
 326:source/HvMath.h ****     hv_exp_f(bIn[0]),
 327:source/HvMath.h ****     hv_exp_f(bIn[1]),
 328:source/HvMath.h ****     hv_exp_f(bIn[2]),
 329:source/HvMath.h ****     hv_exp_f(bIn[3])};
 330:source/HvMath.h **** #else // HV_SIMD_NONE
 331:source/HvMath.h ****   *bOut = hv_exp_f(bIn);
 332:source/HvMath.h **** #endif
 333:source/HvMath.h **** }
 334:source/HvMath.h **** 
 335:source/HvMath.h **** static inline void __hv_ceil_f(hv_bInf_t bIn, hv_bOutf_t bOut) {
 336:source/HvMath.h **** #if HV_SIMD_AVX
 337:source/HvMath.h ****   *bOut = _mm256_ceil_ps(bIn);
 338:source/HvMath.h **** #elif HV_SIMD_SSE
 339:source/HvMath.h ****   *bOut = _mm_ceil_ps(bIn);
 340:source/HvMath.h **** #elif HV_SIMD_NEON
 341:source/HvMath.h **** #if __ARM_ARCH >= 8
 342:source/HvMath.h ****   *bOut = vrndpq_f32(bIn);
 343:source/HvMath.h **** #else
 344:source/HvMath.h ****   // A slow NEON implementation of __hv_ceil_f() is being used because
 345:source/HvMath.h ****   // the necessary intrinsic cannot be found. It is only available in ARMv8.
 346:source/HvMath.h ****   *bOut = (float32x4_t) {hv_ceil_f(bIn[0]), hv_ceil_f(bIn[1]), hv_ceil_f(bIn[2]), hv_ceil_f(bIn[3])
 347:source/HvMath.h **** #endif // vrndpq_f32
 348:source/HvMath.h **** #else // HV_SIMD_NONE
 349:source/HvMath.h ****   *bOut = hv_ceil_f(bIn);
 350:source/HvMath.h **** #endif
 351:source/HvMath.h **** }
 352:source/HvMath.h **** 
 353:source/HvMath.h **** static inline void __hv_floor_f(hv_bInf_t bIn, hv_bOutf_t bOut) {
 354:source/HvMath.h **** #if HV_SIMD_AVX
 355:source/HvMath.h ****   *bOut = _mm256_floor_ps(bIn);
 356:source/HvMath.h **** #elif HV_SIMD_SSE
 357:source/HvMath.h ****   *bOut = _mm_floor_ps(bIn);
 358:source/HvMath.h **** #elif HV_SIMD_NEON
 359:source/HvMath.h **** #if __ARM_ARCH >= 8
 360:source/HvMath.h ****   *bOut = vrndmq_f32(bIn);
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s 			page 49


 361:source/HvMath.h **** #else
 362:source/HvMath.h ****   // A slow implementation of __hv_floor_f() is being used because
 363:source/HvMath.h ****   // the necessary intrinsic cannot be found. It is only available from ARMv8.
 364:source/HvMath.h ****   *bOut = (float32x4_t) {hv_floor_f(bIn[0]), hv_floor_f(bIn[1]), hv_floor_f(bIn[2]), hv_floor_f(bIn
 365:source/HvMath.h **** #endif // vrndmq_f32
 366:source/HvMath.h **** #else // HV_SIMD_NONE
 367:source/HvMath.h ****   *bOut = hv_floor_f(bIn);
 368:source/HvMath.h **** #endif
 369:source/HvMath.h **** }
 370:source/HvMath.h **** 
 371:source/HvMath.h **** // __add~f
 372:source/HvMath.h **** static inline void __hv_add_f(hv_bInf_t bIn0, hv_bInf_t bIn1, hv_bOutf_t bOut) {
 373:source/HvMath.h **** #if HV_SIMD_AVX
 374:source/HvMath.h ****   *bOut = _mm256_add_ps(bIn0, bIn1);
 375:source/HvMath.h **** #elif HV_SIMD_SSE
 376:source/HvMath.h ****   *bOut = _mm_add_ps(bIn0, bIn1);
 377:source/HvMath.h **** #elif HV_SIMD_NEON
 378:source/HvMath.h ****   *bOut = vaddq_f32(bIn0, bIn1);
 379:source/HvMath.h **** #else // HV_SIMD_NONE
 380:source/HvMath.h ****   *bOut = bIn0 + bIn1;
 381:source/HvMath.h **** #endif
 382:source/HvMath.h **** }
 383:source/HvMath.h **** 
 384:source/HvMath.h **** // __add~i
 385:source/HvMath.h **** static inline void __hv_add_i(hv_bIni_t bIn0, hv_bIni_t bIn1, hv_bOuti_t bOut) {
 386:source/HvMath.h **** #if HV_SIMD_AVX
 387:source/HvMath.h ****   __m128i x = _mm_add_epi32(_mm256_castsi256_si128(bIn0), _mm256_castsi256_si128(bIn1));
 388:source/HvMath.h ****   __m128i y = _mm_add_epi32(_mm256_extractf128_si256(bIn0, 1), _mm256_extractf128_si256(bIn1, 1));
 389:source/HvMath.h ****   *bOut = _mm256_insertf128_si256(_mm256_castsi128_si256(x), y, 1);
 390:source/HvMath.h **** #elif HV_SIMD_SSE
 391:source/HvMath.h ****   *bOut = _mm_add_epi32(bIn0, bIn1);
 392:source/HvMath.h **** #elif HV_SIMD_NEON
 393:source/HvMath.h ****   *bOut = vaddq_s32(bIn0, bIn1);
 394:source/HvMath.h **** #else // HV_SIMD_NONE
 395:source/HvMath.h ****   *bOut = bIn0 + bIn1;
 396:source/HvMath.h **** #endif
 397:source/HvMath.h **** }
 398:source/HvMath.h **** 
 399:source/HvMath.h **** // __sub~f
 400:source/HvMath.h **** static inline void __hv_sub_f(hv_bInf_t bIn0, hv_bInf_t bIn1, hv_bOutf_t bOut) {
 401:source/HvMath.h **** #if HV_SIMD_AVX
 402:source/HvMath.h ****   *bOut = _mm256_sub_ps(bIn0, bIn1);
 403:source/HvMath.h **** #elif HV_SIMD_SSE
 404:source/HvMath.h ****   *bOut = _mm_sub_ps(bIn0, bIn1);
 405:source/HvMath.h **** #elif HV_SIMD_NEON
 406:source/HvMath.h ****   *bOut = vsubq_f32(bIn0, bIn1);
 407:source/HvMath.h **** #else // HV_SIMD_NONE
 408:source/HvMath.h ****   *bOut = bIn0 - bIn1;
 1486              		.loc 4 408 16 view .LVU369
 1487 00b2 B6EE004A 		vmov.f32	s8, #5.0e-1
 1488              	.LBE158:
 1489              	.LBE157:
 1490              	.LBB161:
 1491              	.LBB162:
 409:source/HvMath.h **** #endif
 410:source/HvMath.h **** }
 411:source/HvMath.h **** 
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s 			page 50


 412:source/HvMath.h **** // __mul~f
 413:source/HvMath.h **** static inline void __hv_mul_f(hv_bInf_t bIn0, hv_bInf_t bIn1, hv_bOutf_t bOut) {
 414:source/HvMath.h **** #if HV_SIMD_AVX
 415:source/HvMath.h ****   *bOut = _mm256_mul_ps(bIn0, bIn1);
 416:source/HvMath.h **** #elif HV_SIMD_SSE
 417:source/HvMath.h ****   *bOut = _mm_mul_ps(bIn0, bIn1);
 418:source/HvMath.h **** #elif HV_SIMD_NEON
 419:source/HvMath.h ****   *bOut = vmulq_f32(bIn0, bIn1);
 420:source/HvMath.h **** #else // HV_SIMD_NONE
 421:source/HvMath.h ****   *bOut = bIn0 * bIn1;
 1492              		.loc 4 421 16 view .LVU370
 1493 00b6 DFED2A6A 		vldr.32	s13, .L90+20
 1494              	.LBE162:
 1495              	.LBE161:
 1496              	.LBB165:
 1497              	.LBB152:
 129:source/HvSignalPhasor.h ****   *bOut = *((float *) (&p)) - 1.0f;
 1498              		.loc 7 129 35 view .LVU371
 1499 00ba 510A     		lsrs	r1, r2, #9
 1500              	.LBE152:
 1501              	.LBE165:
 1502              	.LBB166:
 1503              	.LBB167:
 408:source/HvMath.h **** #endif
 1504              		.loc 4 408 16 view .LVU372
 1505 00bc B5EE006A 		vmov.f32	s12, #2.5e-1
 1506              	.LBE167:
 1507              	.LBE166:
 1508              	.LBB170:
 1509              	.LBB171:
 422:source/HvMath.h **** #endif
 423:source/HvMath.h **** }
 424:source/HvMath.h **** 
 425:source/HvMath.h **** // __*~i
 426:source/HvMath.h **** static inline void __hv_mul_i(hv_bIni_t bIn0, hv_bIni_t bIn1, hv_bOuti_t bOut) {
 427:source/HvMath.h **** #if HV_SIMD_AVX
 428:source/HvMath.h ****   __m128i x = _mm_mullo_epi32(_mm256_castsi256_si128(bIn0), _mm256_castsi256_si128(bIn1));
 429:source/HvMath.h ****   __m128i y = _mm_mullo_epi32(_mm256_extractf128_si256(bIn0, 1), _mm256_extractf128_si256(bIn1, 1))
 430:source/HvMath.h ****   *bOut = _mm256_insertf128_si256(_mm256_castsi128_si256(x), y, 1);
 431:source/HvMath.h **** #elif HV_SIMD_SSE
 432:source/HvMath.h ****   *bOut = _mm_mullo_epi32(bIn0, bIn1);
 433:source/HvMath.h **** #elif HV_SIMD_NEON
 434:source/HvMath.h ****   *bOut = vmulq_s32(bIn0, bIn1);
 435:source/HvMath.h **** #else // HV_SIMD_NONE
 436:source/HvMath.h ****   *bOut = bIn0 * bIn1;
 437:source/HvMath.h **** #endif
 438:source/HvMath.h **** }
 439:source/HvMath.h **** 
 440:source/HvMath.h **** // __cast~if
 441:source/HvMath.h **** static inline void __hv_cast_if(hv_bIni_t bIn, hv_bOutf_t bOut) {
 442:source/HvMath.h **** #if HV_SIMD_AVX
 443:source/HvMath.h ****   *bOut = _mm256_cvtepi32_ps(bIn);
 444:source/HvMath.h **** #elif HV_SIMD_SSE
 445:source/HvMath.h ****   *bOut = _mm_cvtepi32_ps(bIn);
 446:source/HvMath.h **** #elif HV_SIMD_NEON
 447:source/HvMath.h ****   *bOut = vcvtq_f32_s32(bIn);
 448:source/HvMath.h **** #else // HV_SIMD_NONE
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s 			page 51


 449:source/HvMath.h ****   *bOut = (float) bIn;
 450:source/HvMath.h **** #endif
 451:source/HvMath.h **** }
 452:source/HvMath.h **** 
 453:source/HvMath.h **** // __cast~fi
 454:source/HvMath.h **** static inline void __hv_cast_fi(hv_bInf_t bIn, hv_bOuti_t bOut) {
 455:source/HvMath.h **** #if HV_SIMD_AVX
 456:source/HvMath.h ****   *bOut = _mm256_cvtps_epi32(bIn);
 457:source/HvMath.h **** #elif HV_SIMD_SSE
 458:source/HvMath.h ****   *bOut = _mm_cvtps_epi32(bIn);
 459:source/HvMath.h **** #elif HV_SIMD_NEON
 460:source/HvMath.h ****   *bOut = vcvtq_s32_f32(bIn);
 461:source/HvMath.h **** #else // HV_SIMD_NONE
 462:source/HvMath.h ****   *bOut = (int) bIn;
 463:source/HvMath.h **** #endif
 464:source/HvMath.h **** }
 465:source/HvMath.h **** 
 466:source/HvMath.h **** static inline void __hv_div_f(hv_bInf_t bIn0, hv_bInf_t bIn1, hv_bOutf_t bOut) {
 467:source/HvMath.h **** #if HV_SIMD_AVX
 468:source/HvMath.h ****   __m256 a = _mm256_cmp_ps(bIn1, _mm256_setzero_ps(), _CMP_EQ_OQ);
 469:source/HvMath.h ****   __m256 b = _mm256_div_ps(bIn0, bIn1);
 470:source/HvMath.h ****   *bOut = _mm256_andnot_ps(a, b);
 471:source/HvMath.h **** #elif HV_SIMD_SSE
 472:source/HvMath.h ****   __m128 a = _mm_cmpeq_ps(bIn1, _mm_setzero_ps());
 473:source/HvMath.h ****   __m128 b = _mm_div_ps(bIn0, bIn1);
 474:source/HvMath.h ****   *bOut = _mm_andnot_ps(a, b);
 475:source/HvMath.h **** #elif HV_SIMD_NEON
 476:source/HvMath.h ****   uint32x4_t a = vceqq_f32(bIn1, vdupq_n_f32(0.0f));
 477:source/HvMath.h ****   float32x4_t b = vmulq_f32(bIn0, vrecpeq_f32(bIn1)); // NOTE(mhroth): numerical results may be ine
 478:source/HvMath.h ****   *bOut = vreinterpretq_f32_u32(vbicq_u32(vreinterpretq_u32_f32(b), a));
 479:source/HvMath.h **** #else // HV_SIMD_NONE
 480:source/HvMath.h ****   *bOut = (bIn1 != 0.0f) ? (bIn0 / bIn1) : 0.0f;
 481:source/HvMath.h **** #endif
 482:source/HvMath.h **** }
 483:source/HvMath.h **** 
 484:source/HvMath.h **** static inline void __hv_min_f(hv_bInf_t bIn0, hv_bInf_t bIn1, hv_bOutf_t bOut) {
 485:source/HvMath.h **** #if HV_SIMD_AVX
 486:source/HvMath.h ****   *bOut = _mm256_min_ps(bIn0, bIn1);
 487:source/HvMath.h **** #elif HV_SIMD_SSE
 488:source/HvMath.h ****   *bOut = _mm_min_ps(bIn0, bIn1);
 489:source/HvMath.h **** #elif HV_SIMD_NEON
 490:source/HvMath.h ****   *bOut = vminq_f32(bIn0, bIn1);
 491:source/HvMath.h **** #else // HV_SIMD_NONE
 492:source/HvMath.h ****   *bOut = hv_min_f(bIn0, bIn1);
 493:source/HvMath.h **** #endif
 494:source/HvMath.h **** }
 495:source/HvMath.h **** 
 496:source/HvMath.h **** static inline void __hv_min_i(hv_bIni_t bIn0, hv_bIni_t bIn1, hv_bOuti_t bOut) {
 497:source/HvMath.h **** #if HV_SIMD_AVX
 498:source/HvMath.h ****   __m128i x = _mm_min_epi32(_mm256_castsi256_si128(bIn0), _mm256_castsi256_si128(bIn1));
 499:source/HvMath.h ****   __m128i y = _mm_min_epi32(_mm256_extractf128_si256(bIn0, 1), _mm256_extractf128_si256(bIn1, 1));
 500:source/HvMath.h ****   *bOut = _mm256_insertf128_si256(_mm256_castsi128_si256(x), y, 1);
 501:source/HvMath.h **** #elif HV_SIMD_SSE
 502:source/HvMath.h ****   *bOut = _mm_min_epi32(bIn0, bIn1);
 503:source/HvMath.h **** #elif HV_SIMD_NEON
 504:source/HvMath.h ****   *bOut = vminq_s32(bIn0, bIn1);
 505:source/HvMath.h **** #else // HV_SIMD_NONE
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s 			page 52


 506:source/HvMath.h ****   *bOut = hv_min_i(bIn0, bIn1);
 507:source/HvMath.h **** #endif
 508:source/HvMath.h **** }
 509:source/HvMath.h **** 
 510:source/HvMath.h **** static inline void __hv_max_f(hv_bInf_t bIn0, hv_bInf_t bIn1, hv_bOutf_t bOut) {
 511:source/HvMath.h **** #if HV_SIMD_AVX
 512:source/HvMath.h ****   *bOut = _mm256_max_ps(bIn0, bIn1);
 513:source/HvMath.h **** #elif HV_SIMD_SSE
 514:source/HvMath.h ****   *bOut = _mm_max_ps(bIn0, bIn1);
 515:source/HvMath.h **** #elif HV_SIMD_NEON
 516:source/HvMath.h ****   *bOut = vmaxq_f32(bIn0, bIn1);
 517:source/HvMath.h **** #else // HV_SIMD_NONE
 518:source/HvMath.h ****   *bOut = hv_max_f(bIn0, bIn1);
 519:source/HvMath.h **** #endif
 520:source/HvMath.h **** }
 521:source/HvMath.h **** 
 522:source/HvMath.h **** static inline void __hv_max_i(hv_bIni_t bIn0, hv_bIni_t bIn1, hv_bOuti_t bOut) {
 523:source/HvMath.h **** #if HV_SIMD_AVX
 524:source/HvMath.h ****   __m128i x = _mm_max_epi32(_mm256_castsi256_si128(bIn0), _mm256_castsi256_si128(bIn1));
 525:source/HvMath.h ****   __m128i y = _mm_max_epi32(_mm256_extractf128_si256(bIn0, 1), _mm256_extractf128_si256(bIn1, 1));
 526:source/HvMath.h ****   *bOut = _mm256_insertf128_si256(_mm256_castsi128_si256(x), y, 1);
 527:source/HvMath.h **** #elif HV_SIMD_SSE
 528:source/HvMath.h ****   *bOut = _mm_max_epi32(bIn0, bIn1);
 529:source/HvMath.h **** #elif HV_SIMD_NEON
 530:source/HvMath.h ****   *bOut = vmaxq_s32(bIn0, bIn1);
 531:source/HvMath.h **** #else // HV_SIMD_NONE
 532:source/HvMath.h ****   *bOut = hv_max_i(bIn0, bIn1);
 533:source/HvMath.h **** #endif
 534:source/HvMath.h **** }
 535:source/HvMath.h **** 
 536:source/HvMath.h **** static inline void __hv_pow_f(hv_bInf_t bIn0, hv_bInf_t bIn1, hv_bOutf_t bOut) {
 537:source/HvMath.h **** #if HV_SIMD_AVX
 538:source/HvMath.h ****   float *b = (float *) hv_alloca(16*sizeof(float));
 539:source/HvMath.h ****   _mm256_store_ps(b, bIn0);
 540:source/HvMath.h ****   _mm256_store_ps(b+8, bIn1);
 541:source/HvMath.h ****   *bOut = _mm256_set_ps(
 542:source/HvMath.h ****       hv_pow_f(b[7], b[7]),
 543:source/HvMath.h ****       hv_pow_f(b[6], b[6]),
 544:source/HvMath.h ****       hv_pow_f(b[5], b[5]),
 545:source/HvMath.h ****       hv_pow_f(b[4], b[4]),
 546:source/HvMath.h ****       hv_pow_f(b[3], b[3]),
 547:source/HvMath.h ****       hv_pow_f(b[2], b[2]),
 548:source/HvMath.h ****       hv_pow_f(b[1], b[1]),
 549:source/HvMath.h ****       hv_pow_f(b[0], b[0]));
 550:source/HvMath.h **** #elif HV_SIMD_SSE
 551:source/HvMath.h ****   float *b = (float *) hv_alloca(8*sizeof(float));
 552:source/HvMath.h ****   _mm_store_ps(b, bIn0);
 553:source/HvMath.h ****   _mm_store_ps(b+4, bIn1);
 554:source/HvMath.h ****   *bOut = _mm_set_ps(
 555:source/HvMath.h ****       hv_pow_f(b[3], b[7]),
 556:source/HvMath.h ****       hv_pow_f(b[2], b[6]),
 557:source/HvMath.h ****       hv_pow_f(b[1], b[5]),
 558:source/HvMath.h ****       hv_pow_f(b[0], b[4]));
 559:source/HvMath.h **** #elif HV_SIMD_NEON
 560:source/HvMath.h ****   *bOut = (float32x4_t) {
 561:source/HvMath.h ****       hv_pow_f(bIn0[0], bIn1[0]),
 562:source/HvMath.h ****       hv_pow_f(bIn0[1], bIn1[1]),
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s 			page 53


 563:source/HvMath.h ****       hv_pow_f(bIn0[2], bIn1[2]),
 564:source/HvMath.h ****       hv_pow_f(bIn0[3], bIn1[3])};
 565:source/HvMath.h **** #else // HV_SIMD_NONE
 566:source/HvMath.h ****   *bOut = hv_pow_f(bIn0, bIn1);
 567:source/HvMath.h **** #endif
 568:source/HvMath.h **** }
 569:source/HvMath.h **** 
 570:source/HvMath.h **** static inline void __hv_gt_f(hv_bInf_t bIn0, hv_bInf_t bIn1, hv_bOutf_t bOut) {
 571:source/HvMath.h **** #if HV_SIMD_AVX
 572:source/HvMath.h ****   *bOut = _mm256_cmp_ps(bIn0, bIn1, _CMP_GT_OQ);
 573:source/HvMath.h **** #elif HV_SIMD_SSE
 574:source/HvMath.h ****   *bOut = _mm_cmpgt_ps(bIn0, bIn1);
 575:source/HvMath.h **** #elif HV_SIMD_NEON
 576:source/HvMath.h ****   *bOut = vreinterpretq_f32_u32(vcgtq_f32(bIn0, bIn1));
 577:source/HvMath.h **** #else // HV_SIMD_NONE
 578:source/HvMath.h ****   *bOut = (bIn0 > bIn1) ? 1.0f : 0.0f;
 579:source/HvMath.h **** #endif
 580:source/HvMath.h **** }
 581:source/HvMath.h **** 
 582:source/HvMath.h **** static inline void __hv_gte_f(hv_bInf_t bIn0, hv_bInf_t bIn1, hv_bOutf_t bOut) {
 583:source/HvMath.h **** #if HV_SIMD_AVX
 584:source/HvMath.h ****   *bOut = _mm256_cmp_ps(bIn0, bIn1, _CMP_GE_OQ);
 585:source/HvMath.h **** #elif HV_SIMD_SSE
 586:source/HvMath.h ****   *bOut = _mm_cmpge_ps(bIn0, bIn1);
 587:source/HvMath.h **** #elif HV_SIMD_NEON
 588:source/HvMath.h ****   *bOut = vreinterpretq_f32_u32(vcgeq_f32(bIn0, bIn1));
 589:source/HvMath.h **** #else // HV_SIMD_NONE
 590:source/HvMath.h ****   *bOut = (bIn0 >= bIn1) ? 1.0f : 0.0f;
 591:source/HvMath.h **** #endif
 592:source/HvMath.h **** }
 593:source/HvMath.h **** 
 594:source/HvMath.h **** static inline void __hv_lt_f(hv_bInf_t bIn0, hv_bInf_t bIn1, hv_bOutf_t bOut) {
 595:source/HvMath.h **** #if HV_SIMD_AVX
 596:source/HvMath.h ****   *bOut = _mm256_cmp_ps(bIn0, bIn1, _CMP_LT_OQ);
 597:source/HvMath.h **** #elif HV_SIMD_SSE
 598:source/HvMath.h ****   *bOut = _mm_cmplt_ps(bIn0, bIn1);
 599:source/HvMath.h **** #elif HV_SIMD_NEON
 600:source/HvMath.h ****   *bOut = vreinterpretq_f32_u32(vcltq_f32(bIn0, bIn1));
 601:source/HvMath.h **** #else // HV_SIMD_NONE
 602:source/HvMath.h ****   *bOut = (bIn0 < bIn1) ? 1.0f : 0.0f;
 603:source/HvMath.h **** #endif
 604:source/HvMath.h **** }
 605:source/HvMath.h **** 
 606:source/HvMath.h **** static inline void __hv_lte_f(hv_bInf_t bIn0, hv_bInf_t bIn1, hv_bOutf_t bOut) {
 607:source/HvMath.h **** #if HV_SIMD_AVX
 608:source/HvMath.h ****   *bOut = _mm256_cmp_ps(bIn0, bIn1, _CMP_LE_OQ);
 609:source/HvMath.h **** #elif HV_SIMD_SSE
 610:source/HvMath.h ****   *bOut = _mm_cmple_ps(bIn0, bIn1);
 611:source/HvMath.h **** #elif HV_SIMD_NEON
 612:source/HvMath.h ****   *bOut = vreinterpretq_f32_u32(vcleq_f32(bIn0, bIn1));
 613:source/HvMath.h **** #else // HV_SIMD_NONE
 614:source/HvMath.h ****   *bOut = (bIn0 <= bIn1) ? 1.0f : 0.0f;
 615:source/HvMath.h **** #endif
 616:source/HvMath.h **** }
 617:source/HvMath.h **** 
 618:source/HvMath.h **** static inline void __hv_neq_f(hv_bInf_t bIn0, hv_bInf_t bIn1, hv_bOutf_t bOut) {
 619:source/HvMath.h **** #if HV_SIMD_AVX
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s 			page 54


 620:source/HvMath.h ****   *bOut = _mm256_cmp_ps(bIn0, bIn1, _CMP_NEQ_OQ);
 621:source/HvMath.h **** #elif HV_SIMD_SSE
 622:source/HvMath.h ****   *bOut = _mm_cmpneq_ps(bIn0, bIn1);
 623:source/HvMath.h **** #elif HV_SIMD_NEON
 624:source/HvMath.h ****   *bOut = vreinterpretq_f32_u32(vmvnq_u32(vceqq_f32(bIn0, bIn1)));
 625:source/HvMath.h **** #else // HV_SIMD_NONE
 626:source/HvMath.h ****   *bOut = (bIn0 != bIn1) ? 1.0f : 0.0f;
 627:source/HvMath.h **** #endif
 628:source/HvMath.h **** }
 629:source/HvMath.h **** 
 630:source/HvMath.h **** static inline void __hv_or_f(hv_bInf_t bIn0, hv_bInf_t bIn1, hv_bOutf_t bOut) {
 631:source/HvMath.h **** #if HV_SIMD_AVX
 632:source/HvMath.h ****   *bOut = _mm256_or_ps(bIn1, bIn0);
 633:source/HvMath.h **** #elif HV_SIMD_SSE
 634:source/HvMath.h ****   *bOut = _mm_or_ps(bIn1, bIn0);
 635:source/HvMath.h **** #elif HV_SIMD_NEON
 636:source/HvMath.h ****   *bOut = vreinterpretq_f32_u32(vorrq_u32(vreinterpretq_u32_f32(bIn1), vreinterpretq_u32_f32(bIn0))
 637:source/HvMath.h **** #else // HV_SIMD_NONE
 638:source/HvMath.h ****   if (bIn0 == 0.0f && bIn1 == 0.0f) *bOut = 0.0f;
 639:source/HvMath.h ****   else if (bIn0 == 0.0f) *bOut = bIn1;
 640:source/HvMath.h ****   else if (bIn1 == 0.0f) *bOut = bIn0;
 641:source/HvMath.h ****   else hv_assert(0);
 642:source/HvMath.h **** #endif
 643:source/HvMath.h **** }
 644:source/HvMath.h **** 
 645:source/HvMath.h **** static inline void __hv_and_f(hv_bInf_t bIn0, hv_bInf_t bIn1, hv_bOutf_t bOut) {
 646:source/HvMath.h **** #if HV_SIMD_AVX
 647:source/HvMath.h ****   *bOut = _mm256_and_ps(bIn1, bIn0);
 648:source/HvMath.h **** #elif HV_SIMD_SSE
 649:source/HvMath.h ****   *bOut = _mm_and_ps(bIn1, bIn0);
 650:source/HvMath.h **** #elif HV_SIMD_NEON
 651:source/HvMath.h ****   *bOut = vreinterpretq_f32_u32(vandq_u32(vreinterpretq_u32_f32(bIn1), vreinterpretq_u32_f32(bIn0))
 652:source/HvMath.h **** #else // HV_SIMD_NONE
 653:source/HvMath.h ****   if (bIn0 == 0.0f || bIn1 == 0.0f) *bOut = 0.0f;
 654:source/HvMath.h ****   else if (bIn0 == 1.0f) *bOut = bIn1;
 655:source/HvMath.h ****   else if (bIn1 == 1.0f) *bOut = bIn0;
 656:source/HvMath.h ****   else hv_assert(0);
 657:source/HvMath.h **** #endif
 658:source/HvMath.h **** }
 659:source/HvMath.h **** 
 660:source/HvMath.h **** static inline void __hv_andnot_f(hv_bInf_t bIn0_mask, hv_bInf_t bIn1, hv_bOutf_t bOut) {
 661:source/HvMath.h **** #if HV_SIMD_AVX
 662:source/HvMath.h ****   *bOut = _mm256_andnot_ps(bIn0_mask, bIn1);
 663:source/HvMath.h **** #elif HV_SIMD_SSE
 664:source/HvMath.h ****   *bOut = _mm_andnot_ps(bIn0_mask, bIn1);
 665:source/HvMath.h **** #elif HV_SIMD_NEON
 666:source/HvMath.h ****   *bOut = vreinterpretq_f32_s32(vbicq_s32(vreinterpretq_s32_f32(bIn1), vreinterpretq_s32_f32(bIn0_m
 667:source/HvMath.h **** #else // HV_SIMD_NONE
 668:source/HvMath.h ****   *bOut = (bIn0_mask == 0.0f) ? bIn1 : 0.0f;
 669:source/HvMath.h **** #endif
 670:source/HvMath.h **** }
 671:source/HvMath.h **** 
 672:source/HvMath.h **** // bOut = (bIn0 * bIn1) + bIn2
 673:source/HvMath.h **** static inline void __hv_fma_f(hv_bInf_t bIn0, hv_bInf_t bIn1, hv_bInf_t bIn2, hv_bOutf_t bOut) {
 674:source/HvMath.h **** #if HV_SIMD_AVX
 675:source/HvMath.h **** #if HV_SIMD_FMA
 676:source/HvMath.h ****   *bOut = _mm256_fmadd_ps(bIn0, bIn1, bIn2);
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s 			page 55


 677:source/HvMath.h **** #else
 678:source/HvMath.h ****   *bOut = _mm256_add_ps(_mm256_mul_ps(bIn0, bIn1), bIn2);
 679:source/HvMath.h **** #endif // HV_SIMD_FMA
 680:source/HvMath.h **** #elif HV_SIMD_SSE
 681:source/HvMath.h **** #if HV_SIMD_FMA
 682:source/HvMath.h ****   *bOut = _mm_fmadd_ps(bIn0, bIn1, bIn2);
 683:source/HvMath.h **** #else
 684:source/HvMath.h ****   *bOut = _mm_add_ps(_mm_mul_ps(bIn0, bIn1), bIn2);
 685:source/HvMath.h **** #endif // HV_SIMD_FMA
 686:source/HvMath.h **** #elif HV_SIMD_NEON
 687:source/HvMath.h **** #if __ARM_ARCH >= 8
 688:source/HvMath.h ****   *bOut = vfmaq_f32(bIn2, bIn0, bIn1);
 689:source/HvMath.h **** #else
 690:source/HvMath.h ****   // NOTE(mhroth): it turns out, fma SUUUUCKS on lesser ARM architectures
 691:source/HvMath.h ****   *bOut = vaddq_f32(vmulq_f32(bIn0, bIn1), bIn2);
 692:source/HvMath.h **** #endif
 693:source/HvMath.h **** #else // HV_SIMD_NONE
 694:source/HvMath.h ****   *bOut = hv_fma_f(bIn0, bIn1, bIn2);
 1510              		.loc 4 694 11 view .LVU373
 1511 00c0 DFED284A 		vldr.32	s9, .L90+24
 1512              	.LBE171:
 1513              	.LBE170:
 1514              	.LBE226:
 178:source/Heavy_daisy_control.cpp **** 
 1515              		.loc 3 178 21 view .LVU374
 1516 00c4 C845     		cmp	r8, r9
 1517              	.LBB227:
 1518              	.LBB173:
 1519              	.LBB153:
 129:source/HvSignalPhasor.h ****   *bOut = *((float *) (&p)) - 1.0f;
 1520              		.loc 7 129 41 view .LVU375
 1521 00c6 41F07E53 		orr	r3, r1, #1065353216
 1522              	.LVL125:
 129:source/HvSignalPhasor.h ****   *bOut = *((float *) (&p)) - 1.0f;
 1523              		.loc 7 129 41 view .LVU376
 1524              	.LBE153:
 1525              	.LBE173:
 1526              	.LBB174:
 1527              	.LBB175:
 1528              		.loc 4 694 11 view .LVU377
 1529 00ca 9FED275A 		vldr.32	s10, .L90+28
 1530              	.LBE175:
 1531              	.LBE174:
 1532              	.LBB178:
 1533              	.LBB179:
 380:source/HvMath.h **** #endif
 1534              		.loc 4 380 16 view .LVU378
 1535 00ce D4ED275A 		vldr.32	s11, [r4, #156]
 1536              	.LBE179:
 1537              	.LBE178:
 1538              	.LBB182:
 1539              	.LBB154:
 129:source/HvSignalPhasor.h ****   *bOut = *((float *) (&p)) - 1.0f;
 1540              		.loc 7 129 41 view .LVU379
 1541 00d2 07EE903A 		vmov	s15, r3	@ int
 1542              	.LBE154:
 1543              	.LBE182:
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s 			page 56


 1544              	.LBB183:
 1545              	.LBB180:
 380:source/HvMath.h **** #endif
 1546              		.loc 4 380 16 view .LVU380
 1547 00d6 9FED257A 		vldr.32	s14, .L90+32
 1548              	.LBE180:
 1549              	.LBE183:
 1550              	.LBB184:
 1551              	.LBB155:
 1552              		.loc 7 131 12 view .LVU381
 1553 00da D4F88C60 		ldr	r6, [r4, #140]
 130:source/HvSignalPhasor.h ****   o->phase += o->inc;
 1554              		.loc 7 130 29 view .LVU382
 1555 00de 77EEE37A 		vsub.f32	s15, s15, s7
 1556              		.loc 7 131 12 view .LVU383
 1557 00e2 3244     		add	r2, r2, r6
 1558              	.LVL126:
 1559              		.loc 7 131 12 view .LVU384
 1560              	.LBE155:
 1561              	.LBE184:
 1562              	.LBB185:
 1563              	.LBB159:
 408:source/HvMath.h **** #endif
 1564              		.loc 4 408 16 view .LVU385
 1565 00e4 77EEC47A 		vsub.f32	s15, s15, s8
 1566              	.LBE159:
 1567              	.LBE185:
 1568              	.LBB186:
 1569              	.LBB187:
  70:source/HvMath.h **** #endif
 1570              		.loc 4 70 9 view .LVU386
 1571 00e8 D5E90013 		ldrd	r1, r3, [r5]
 1572              	.LVL127:
  70:source/HvMath.h **** #endif
 1573              		.loc 4 70 9 view .LVU387
 1574              	.LBE187:
 1575              	.LBE186:
 1576              	.LBB191:
 1577              	.LBB192:
 297:source/HvMath.h **** #endif
 1578              		.loc 4 297 11 view .LVU388
 1579 00ec F0EEE77A 		vabs.f32	s15, s15
 1580              	.LBE192:
 1581              	.LBE191:
 1582              	.LBB194:
 1583              	.LBB156:
 1584              		.loc 7 131 12 view .LVU389
 1585 00f0 C4F88820 		str	r2, [r4, #136]
 1586              	.LVL128:
 1587              		.loc 7 131 12 view .LVU390
 1588              	.LBE156:
 1589              	.LBE194:
 196:source/Heavy_daisy_control.cpp ****     __hv_sub_f(VIf(Bf0), VIf(Bf1), VOf(Bf1));
 1590              		.loc 3 196 5 is_stmt 1 view .LVU391
 197:source/Heavy_daisy_control.cpp ****     __hv_abs_f(VIf(Bf1), VOf(Bf1));
 1591              		.loc 3 197 5 view .LVU392
 1592              	.LBB195:
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s 			page 57


 1593              	.LBI157:
 400:source/HvMath.h **** #if HV_SIMD_AVX
 1594              		.loc 4 400 20 view .LVU393
 1595              	.LBB160:
 408:source/HvMath.h **** #endif
 1596              		.loc 4 408 3 view .LVU394
 408:source/HvMath.h **** #endif
 1597              		.loc 4 408 3 is_stmt 0 view .LVU395
 1598              	.LBE160:
 1599              	.LBE195:
 198:source/Heavy_daisy_control.cpp ****     __hv_var_k_f(VOf(Bf0), 0.25f, 0.25f, 0.25f, 0.25f, 0.25f, 0.25f, 0.25f, 0.25f);
 1600              		.loc 3 198 5 is_stmt 1 view .LVU396
 1601              	.LBB196:
 1602              	.LBI191:
 289:source/HvMath.h **** #if HV_SIMD_AVX
 1603              		.loc 4 289 20 view .LVU397
 1604              	.LBB193:
 297:source/HvMath.h **** #endif
 1605              		.loc 4 297 3 view .LVU398
 297:source/HvMath.h **** #endif
 1606              		.loc 4 297 3 is_stmt 0 view .LVU399
 1607              	.LBE193:
 1608              	.LBE196:
 199:source/Heavy_daisy_control.cpp ****     __hv_sub_f(VIf(Bf1), VIf(Bf0), VOf(Bf0));
 1609              		.loc 3 199 5 is_stmt 1 view .LVU400
 200:source/Heavy_daisy_control.cpp ****     __hv_var_k_f(VOf(Bf1), 6.283185307179586f, 6.283185307179586f, 6.283185307179586f, 6.2831853071
 1610              		.loc 3 200 5 view .LVU401
 1611              	.LBB197:
 1612              	.LBI166:
 400:source/HvMath.h **** #if HV_SIMD_AVX
 1613              		.loc 4 400 20 view .LVU402
 1614              	.LBB168:
 408:source/HvMath.h **** #endif
 1615              		.loc 4 408 3 view .LVU403
 408:source/HvMath.h **** #endif
 1616              		.loc 4 408 3 is_stmt 0 view .LVU404
 1617              	.LBE168:
 1618              	.LBE197:
 201:source/Heavy_daisy_control.cpp ****     __hv_mul_f(VIf(Bf0), VIf(Bf1), VOf(Bf1));
 1619              		.loc 3 201 5 is_stmt 1 view .LVU405
 202:source/Heavy_daisy_control.cpp ****     __hv_mul_f(VIf(Bf1), VIf(Bf1), VOf(Bf0));
 1620              		.loc 3 202 5 view .LVU406
 1621              	.LBB198:
 1622              	.LBI161:
 413:source/HvMath.h **** #if HV_SIMD_AVX
 1623              		.loc 4 413 20 view .LVU407
 1624              	.LBB163:
 421:source/HvMath.h **** #endif
 1625              		.loc 4 421 3 view .LVU408
 1626              	.LBE163:
 1627              	.LBE198:
 1628              	.LBB199:
 1629              	.LBB200:
  70:source/HvMath.h **** #endif
 1630              		.loc 4 70 9 is_stmt 0 view .LVU409
 1631 00f4 3944     		add	r1, r1, r7
 1632              	.LBE200:
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s 			page 58


 1633              	.LBE199:
 1634              	.LBB203:
 1635              	.LBB188:
 1636 00f6 3B44     		add	r3, r3, r7
 1637 00f8 07F10407 		add	r7, r7, #4
 1638              	.LBE188:
 1639              	.LBE203:
 1640              	.LBB204:
 1641              	.LBB169:
 408:source/HvMath.h **** #endif
 1642              		.loc 4 408 16 view .LVU410
 1643 00fc 77EEC67A 		vsub.f32	s15, s15, s12
 1644              	.LBE169:
 1645              	.LBE204:
 1646              	.LBB205:
 1647              	.LBB164:
 421:source/HvMath.h **** #endif
 1648              		.loc 4 421 16 view .LVU411
 1649 0100 67EEA67A 		vmul.f32	s15, s15, s13
 1650              	.LVL129:
 421:source/HvMath.h **** #endif
 1651              		.loc 4 421 16 view .LVU412
 1652              	.LBE164:
 1653              	.LBE205:
 203:source/Heavy_daisy_control.cpp ****     __hv_mul_f(VIf(Bf1), VIf(Bf0), VOf(Bf2));
 1654              		.loc 3 203 5 is_stmt 1 view .LVU413
 1655              	.LBB206:
 1656              	.LBI206:
 413:source/HvMath.h **** #if HV_SIMD_AVX
 1657              		.loc 4 413 20 view .LVU414
 1658              	.LBB207:
 421:source/HvMath.h **** #endif
 1659              		.loc 4 421 3 view .LVU415
 421:source/HvMath.h **** #endif
 1660              		.loc 4 421 16 is_stmt 0 view .LVU416
 1661 0104 27EEA76A 		vmul.f32	s12, s15, s15
 1662              	.LVL130:
 421:source/HvMath.h **** #endif
 1663              		.loc 4 421 16 view .LVU417
 1664              	.LBE207:
 1665              	.LBE206:
 204:source/Heavy_daisy_control.cpp ****     __hv_mul_f(VIf(Bf2), VIf(Bf0), VOf(Bf0));
 1666              		.loc 3 204 5 is_stmt 1 view .LVU418
 1667              	.LBB208:
 1668              	.LBI208:
 413:source/HvMath.h **** #if HV_SIMD_AVX
 1669              		.loc 4 413 20 view .LVU419
 1670              	.LBB209:
 421:source/HvMath.h **** #endif
 1671              		.loc 4 421 3 view .LVU420
 421:source/HvMath.h **** #endif
 1672              		.loc 4 421 16 is_stmt 0 view .LVU421
 1673 0108 66EE276A 		vmul.f32	s13, s12, s15
 1674              	.LVL131:
 421:source/HvMath.h **** #endif
 1675              		.loc 4 421 16 view .LVU422
 1676              	.LBE209:
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s 			page 59


 1677              	.LBE208:
 205:source/Heavy_daisy_control.cpp ****     __hv_var_k_f(VOf(Bf3), 0.007833333333333f, 0.007833333333333f, 0.007833333333333f, 0.0078333333
 1678              		.loc 3 205 5 is_stmt 1 view .LVU423
 1679              	.LBB210:
 1680              	.LBI210:
 413:source/HvMath.h **** #if HV_SIMD_AVX
 1681              		.loc 4 413 20 view .LVU424
 1682              	.LBB211:
 421:source/HvMath.h **** #endif
 1683              		.loc 4 421 3 view .LVU425
 421:source/HvMath.h **** #endif
 1684              		.loc 4 421 3 is_stmt 0 view .LVU426
 1685              	.LBE211:
 1686              	.LBE210:
 206:source/Heavy_daisy_control.cpp ****     __hv_var_k_f(VOf(Bf4), -0.166666666666667f, -0.166666666666667f, -0.166666666666667f, -0.166666
 1687              		.loc 3 206 5 is_stmt 1 view .LVU427
 207:source/Heavy_daisy_control.cpp ****     __hv_fma_f(VIf(Bf2), VIf(Bf4), VIf(Bf1), VOf(Bf1));
 1688              		.loc 3 207 5 view .LVU428
 208:source/Heavy_daisy_control.cpp ****     __hv_fma_f(VIf(Bf0), VIf(Bf3), VIf(Bf1), VOf(Bf1));
 1689              		.loc 3 208 5 view .LVU429
 1690              	.LBB213:
 1691              	.LBI170:
 673:source/HvMath.h **** #if HV_SIMD_AVX
 1692              		.loc 4 673 20 view .LVU430
 1693              	.LBB172:
 1694              		.loc 4 694 3 view .LVU431
 1695              		.loc 4 694 11 is_stmt 0 view .LVU432
 1696 010c E6EEA47A 		vfma.f32	s15, s13, s9
 1697              	.LVL132:
 1698              		.loc 4 694 11 view .LVU433
 1699              	.LBE172:
 1700              	.LBE213:
 209:source/Heavy_daisy_control.cpp ****     __hv_varread_f(&sVarf_xX5dYQQb, VOf(Bf3));
 1701              		.loc 3 209 5 is_stmt 1 view .LVU434
 1702              	.LBB214:
 1703              	.LBI174:
 673:source/HvMath.h **** #if HV_SIMD_AVX
 1704              		.loc 4 673 20 view .LVU435
 1705              	.LBB176:
 1706              		.loc 4 694 3 view .LVU436
 1707              	.LBE176:
 1708              	.LBE214:
 1709              	.LBB215:
 1710              	.LBB212:
 421:source/HvMath.h **** #endif
 1711              		.loc 4 421 16 is_stmt 0 view .LVU437
 1712 0110 66EE866A 		vmul.f32	s13, s13, s12
 1713              	.LVL133:
 421:source/HvMath.h **** #endif
 1714              		.loc 4 421 16 view .LVU438
 1715              	.LBE212:
 1716              	.LBE215:
 1717              	.LBB216:
 1718              	.LBB177:
 1719              		.loc 4 694 11 view .LVU439
 1720 0114 E6EE857A 		vfma.f32	s15, s13, s10
 1721              	.LVL134:
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s 			page 60


 1722              		.loc 4 694 11 view .LVU440
 1723              	.LBE177:
 1724              	.LBE216:
 210:source/Heavy_daisy_control.cpp ****     __hv_mul_f(VIf(Bf1), VIf(Bf3), VOf(Bf3));
 1725              		.loc 3 210 5 is_stmt 1 view .LVU441
 1726              	.LBB217:
 1727              	.LBI217:
 1728              		.file 8 "source/HvSignalVar.h"
   1:source/HvSignalVar.h **** /**
   2:source/HvSignalVar.h ****  * Copyright (c) 2014-2018 Enzien Audio Ltd.
   3:source/HvSignalVar.h ****  *
   4:source/HvSignalVar.h ****  * Permission to use, copy, modify, and/or distribute this software for any
   5:source/HvSignalVar.h ****  * purpose with or without fee is hereby granted, provided that the above
   6:source/HvSignalVar.h ****  * copyright notice and this permission notice appear in all copies.
   7:source/HvSignalVar.h ****  *
   8:source/HvSignalVar.h ****  * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
   9:source/HvSignalVar.h ****  * REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
  10:source/HvSignalVar.h ****  * AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
  11:source/HvSignalVar.h ****  * INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
  12:source/HvSignalVar.h ****  * LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
  13:source/HvSignalVar.h ****  * OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
  14:source/HvSignalVar.h ****  * PERFORMANCE OF THIS SOFTWARE.
  15:source/HvSignalVar.h ****  */
  16:source/HvSignalVar.h **** 
  17:source/HvSignalVar.h **** #ifndef _HEAVY_SIGNAL_VAR_H_
  18:source/HvSignalVar.h **** #define _HEAVY_SIGNAL_VAR_H_
  19:source/HvSignalVar.h **** 
  20:source/HvSignalVar.h **** #include "HvHeavyInternal.h"
  21:source/HvSignalVar.h **** 
  22:source/HvSignalVar.h **** #ifdef __cplusplus
  23:source/HvSignalVar.h **** extern "C" {
  24:source/HvSignalVar.h **** #endif
  25:source/HvSignalVar.h **** 
  26:source/HvSignalVar.h **** // __var~f, __varread~f, __varwrite~f
  27:source/HvSignalVar.h **** 
  28:source/HvSignalVar.h **** typedef struct SignalVarf {
  29:source/HvSignalVar.h ****   hv_bufferf_t v;
  30:source/HvSignalVar.h **** } SignalVarf;
  31:source/HvSignalVar.h **** 
  32:source/HvSignalVar.h **** hv_size_t sVarf_init(SignalVarf *o, float k, float step, bool reverse);
  33:source/HvSignalVar.h **** 
  34:source/HvSignalVar.h **** static inline void __hv_varread_f(SignalVarf *o, hv_bOutf_t bOut) {
 1729              		.loc 8 34 20 view .LVU442
 1730              	.LBB218:
  35:source/HvSignalVar.h ****   *bOut = o->v;
 1731              		.loc 8 35 3 view .LVU443
 1732              		.loc 8 35 3 is_stmt 0 view .LVU444
 1733              	.LBE218:
 1734              	.LBE217:
 211:source/Heavy_daisy_control.cpp ****     __hv_add_f(VIf(Bf3), VIf(O1), VOf(O1));
 1735              		.loc 3 211 5 is_stmt 1 view .LVU445
 211:source/Heavy_daisy_control.cpp ****     __hv_add_f(VIf(Bf3), VIf(O1), VOf(O1));
 1736              		.loc 3 211 5 is_stmt 0 view .LVU446
 1737              	.LBE227:
 1738              	.LBE234:
 421:source/HvMath.h **** #endif
 1739              		.loc 4 421 3 is_stmt 1 view .LVU447
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s 			page 61


 1740              	.LBB235:
 1741              	.LBB228:
 212:source/Heavy_daisy_control.cpp ****     __hv_add_f(VIf(Bf3), VIf(O0), VOf(O0));
 1742              		.loc 3 212 5 view .LVU448
 1743              	.LBB219:
 1744              	.LBI178:
 372:source/HvMath.h **** #if HV_SIMD_AVX
 1745              		.loc 4 372 20 view .LVU449
 1746              	.LBB181:
 380:source/HvMath.h **** #endif
 1747              		.loc 4 380 3 view .LVU450
 380:source/HvMath.h **** #endif
 1748              		.loc 4 380 16 is_stmt 0 view .LVU451
 1749 0118 A5EEA77A 		vfma.f32	s14, s11, s15
 1750              	.LVL135:
 380:source/HvMath.h **** #endif
 1751              		.loc 4 380 16 view .LVU452
 1752              	.LBE181:
 1753              	.LBE219:
 213:source/Heavy_daisy_control.cpp **** 
 1754              		.loc 3 213 5 is_stmt 1 view .LVU453
 213:source/Heavy_daisy_control.cpp **** 
 1755              		.loc 3 213 5 is_stmt 0 view .LVU454
 1756              	.LBE228:
 1757              	.LBE235:
 380:source/HvMath.h **** #endif
 1758              		.loc 4 380 3 is_stmt 1 view .LVU455
 1759              	.LBB236:
 1760              	.LBB229:
 216:source/Heavy_daisy_control.cpp ****     __hv_store_f(outputBuffers[1]+n, VIf(O1));
 1761              		.loc 3 216 5 view .LVU456
 1762              	.LBB220:
 1763              	.LBI199:
  62:source/HvMath.h **** #if HV_SIMD_AVX
 1764              		.loc 4 62 20 view .LVU457
 1765              	.LBB201:
  70:source/HvMath.h **** #endif
 1766              		.loc 4 70 3 view .LVU458
  70:source/HvMath.h **** #endif
 1767              		.loc 4 70 3 is_stmt 0 view .LVU459
 1768              	.LBE201:
 1769              	.LBE220:
 217:source/Heavy_daisy_control.cpp ****   }
 1770              		.loc 3 217 5 is_stmt 1 view .LVU460
 1771              	.LBB221:
 1772              	.LBI186:
  62:source/HvMath.h **** #if HV_SIMD_AVX
 1773              		.loc 4 62 20 view .LVU461
 1774              	.LBB189:
  70:source/HvMath.h **** #endif
 1775              		.loc 4 70 3 view .LVU462
  70:source/HvMath.h **** #endif
 1776              		.loc 4 70 3 is_stmt 0 view .LVU463
 1777              	.LBE189:
 1778              	.LBE221:
 1779              	.LBE229:
 178:source/Heavy_daisy_control.cpp **** 
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s 			page 62


 1780              		.loc 3 178 3 is_stmt 1 view .LVU464
 178:source/Heavy_daisy_control.cpp **** 
 1781              		.loc 3 178 21 view .LVU465
 1782              	.LBB230:
 1783              	.LBB222:
 1784              	.LBB202:
  70:source/HvMath.h **** #endif
 1785              		.loc 4 70 9 is_stmt 0 view .LVU466
 1786 011c 81ED007A 		vstr.32	s14, [r1]
 1787              	.LBE202:
 1788              	.LBE222:
 1789              	.LBB223:
 1790              	.LBB190:
 1791 0120 83ED007A 		vstr.32	s14, [r3]
 1792              	.LBE190:
 1793              	.LBE223:
 1794              	.LBE230:
 178:source/Heavy_daisy_control.cpp **** 
 1795              		.loc 3 178 21 view .LVU467
 1796 0124 AFD1     		bne	.L82
 1797              	.LBE236:
 220:source/Heavy_daisy_control.cpp **** 
 1798              		.loc 3 220 3 is_stmt 1 view .LVU468
 223:source/Heavy_daisy_control.cpp **** 
 1799              		.loc 3 223 1 is_stmt 0 view .LVU469
 1800 0126 5046     		mov	r0, r10
 220:source/Heavy_daisy_control.cpp **** 
 1801              		.loc 3 220 23 view .LVU470
 1802 0128 C4F81090 		str	r9, [r4, #16]
 222:source/Heavy_daisy_control.cpp **** }
 1803              		.loc 3 222 3 is_stmt 1 view .LVU471
 1804              	.LVL136:
 223:source/Heavy_daisy_control.cpp **** 
 1805              		.loc 3 223 1 is_stmt 0 view .LVU472
 1806 012c 02B0     		add	sp, sp, #8
 1807              		.cfi_remember_state
 1808              		.cfi_def_cfa_offset 32
 1809              		@ sp needed
 1810 012e BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 1811              	.LVL137:
 1812              	.L84:
 1813              		.cfi_restore_state
 177:source/Heavy_daisy_control.cpp ****   for (int n = 0; n < n4; n += HV_N_SIMD) {
 1814              		.loc 3 177 15 view .LVU473
 1815 0132 C146     		mov	r9, r8
 220:source/Heavy_daisy_control.cpp **** 
 1816              		.loc 3 220 3 is_stmt 1 view .LVU474
 223:source/Heavy_daisy_control.cpp **** 
 1817              		.loc 3 223 1 is_stmt 0 view .LVU475
 1818 0134 5046     		mov	r0, r10
 220:source/Heavy_daisy_control.cpp **** 
 1819              		.loc 3 220 23 view .LVU476
 1820 0136 C4F81090 		str	r9, [r4, #16]
 222:source/Heavy_daisy_control.cpp **** }
 1821              		.loc 3 222 3 is_stmt 1 view .LVU477
 1822              	.LVL138:
 223:source/Heavy_daisy_control.cpp **** 
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s 			page 63


 1823              		.loc 3 223 1 is_stmt 0 view .LVU478
 1824 013a 02B0     		add	sp, sp, #8
 1825              		.cfi_remember_state
 1826              		.cfi_def_cfa_offset 32
 1827              		@ sp needed
 1828 013c BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 1829              	.LVL139:
 1830              	.L88:
 1831              		.cfi_restore_state
 1832              	.LBB237:
 162:source/Heavy_daisy_control.cpp ****     scheduleMessageForReceiver(p->receiverHash, &p->msg);
 1833              		.loc 3 162 5 discriminator 1 view .LVU479
 1834 0140 0B4B     		ldr	r3, .L90+36
 1835 0142 A221     		movs	r1, #162
 1836 0144 0B4A     		ldr	r2, .L90+40
 1837 0146 0C48     		ldr	r0, .L90+44
 1838              	.LVL140:
 162:source/Heavy_daisy_control.cpp ****     scheduleMessageForReceiver(p->receiverHash, &p->msg);
 1839              		.loc 3 162 5 discriminator 1 view .LVU480
 1840 0148 FFF7FEFF 		bl	__assert_func
 1841              	.LVL141:
 1842              	.L91:
 1843              		.align	2
 1844              	.L90:
 1845 014c 8DD1FCB2 		.word	-1292054131
 1846 0150 00000000 		.word	_ZN19Heavy_daisy_control29cReceive_GE5qdYgZ_sendMessageEP21HeavyContextInterfaceiPK9HvMessag
 1847 0154 00000000 		.word	_ZN19Heavy_daisy_control26scheduleMessageForReceiverEmP9HvMessage
 1848 0158 5D49F930 		.word	821643613
 1849 015c 00000000 		.word	_ZN19Heavy_daisy_control29cReceive_S07AdeHm_sendMessageEP21HeavyContextInterfaceiPK9HvMessag
 1850 0160 DB0FC940 		.word	1086918619
 1851 0164 ABAA2ABE 		.word	-1104500053
 1852 0168 6257003C 		.word	1006655330
 1853 016c 00000000 		.word	0
 1854 0170 00000000 		.word	.LC7
 1855 0174 28000000 		.word	.LC8
 1856 0178 5C000000 		.word	.LC3
 1857              	.LBE237:
 1858              		.cfi_endproc
 1859              	.LFE1007:
 1861              		.section	.text._ZN19Heavy_daisy_controlC2Ediii,"ax",%progbits
 1862              		.align	1
 1863              		.p2align 2,,3
 1864              		.global	_ZN19Heavy_daisy_controlC2Ediii
 1865              		.syntax unified
 1866              		.thumb
 1867              		.thumb_func
 1869              	_ZN19Heavy_daisy_controlC2Ediii:
 1870              	.LVL142:
 1871              	.LFB994:
  64:source/Heavy_daisy_control.cpp ****     : HeavyContext(sampleRate, poolKb, inQueueKb, outQueueKb) {
 1872              		.loc 3 64 1 is_stmt 1 view -0
 1873              		.cfi_startproc
 1874              		@ args = 0, pretend = 0, frame = 8
 1875              		@ frame_needed = 0, uses_anonymous_args = 0
  64:source/Heavy_daisy_control.cpp ****     : HeavyContext(sampleRate, poolKb, inQueueKb, outQueueKb) {
 1876              		.loc 3 64 1 is_stmt 0 view .LVU482
 1877 0000 10B5     		push	{r4, lr}
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s 			page 64


 1878              		.cfi_def_cfa_offset 8
 1879              		.cfi_offset 4, -8
 1880              		.cfi_offset 14, -4
 1881 0002 0446     		mov	r4, r0
 1882 0004 82B0     		sub	sp, sp, #8
 1883              		.cfi_def_cfa_offset 16
  64:source/Heavy_daisy_control.cpp ****     : HeavyContext(sampleRate, poolKb, inQueueKb, outQueueKb) {
 1884              		.loc 3 64 1 view .LVU483
 1885 0006 8DED000B 		vstr.64	d0, [sp]	@ int
 1886              	.LBB238:
  65:source/Heavy_daisy_control.cpp ****   numBytes += sPhasor_k_init(&sPhasor_CtPFZn4z, 1000.0f, sampleRate);
 1887              		.loc 3 65 61 view .LVU484
 1888 000a FFF7FEFF 		bl	_ZN12HeavyContextC2Ediii
 1889              	.LVL143:
  65:source/Heavy_daisy_control.cpp ****   numBytes += sPhasor_k_init(&sPhasor_CtPFZn4z, 1000.0f, sampleRate);
 1890              		.loc 3 65 61 view .LVU485
 1891 000e 2046     		mov	r0, r4
 1892 0010 0D4B     		ldr	r3, .L94
  66:source/Heavy_daisy_control.cpp ****   numBytes += sVarf_init(&sVarf_xX5dYQQb, 0.0f, 0.0f, false);
 1893              		.loc 3 66 29 view .LVU486
 1894 0012 9FED0E0A 		vldr.32	s0, .L94+4
  65:source/Heavy_daisy_control.cpp ****   numBytes += sPhasor_k_init(&sPhasor_CtPFZn4z, 1000.0f, sampleRate);
 1895              		.loc 3 65 61 view .LVU487
 1896 0016 40F8883B 		str	r3, [r0], #136
  66:source/Heavy_daisy_control.cpp ****   numBytes += sVarf_init(&sVarf_xX5dYQQb, 0.0f, 0.0f, false);
 1897              		.loc 3 66 3 is_stmt 1 view .LVU488
  66:source/Heavy_daisy_control.cpp ****   numBytes += sVarf_init(&sVarf_xX5dYQQb, 0.0f, 0.0f, false);
 1898              		.loc 3 66 29 is_stmt 0 view .LVU489
 1899 001a 9DED001B 		vldr.64	d1, [sp]	@ int
 1900 001e FFF7FEFF 		bl	sPhasor_k_init
 1901              	.LVL144:
  66:source/Heavy_daisy_control.cpp ****   numBytes += sVarf_init(&sVarf_xX5dYQQb, 0.0f, 0.0f, false);
 1902              		.loc 3 66 12 view .LVU490
 1903 0022 6369     		ldr	r3, [r4, #20]
  67:source/Heavy_daisy_control.cpp ****   
 1904              		.loc 3 67 25 view .LVU491
 1905 0024 DFED0A0A 		vldr.32	s1, .L94+8
 1906 0028 0021     		movs	r1, #0
  66:source/Heavy_daisy_control.cpp ****   numBytes += sVarf_init(&sVarf_xX5dYQQb, 0.0f, 0.0f, false);
 1907              		.loc 3 66 12 view .LVU492
 1908 002a 0344     		add	r3, r3, r0
  67:source/Heavy_daisy_control.cpp ****   
 1909              		.loc 3 67 25 view .LVU493
 1910 002c 04F19C00 		add	r0, r4, #156
 1911 0030 B0EE600A 		vmov.f32	s0, s1
  66:source/Heavy_daisy_control.cpp ****   numBytes += sVarf_init(&sVarf_xX5dYQQb, 0.0f, 0.0f, false);
 1912              		.loc 3 66 12 view .LVU494
 1913 0034 6361     		str	r3, [r4, #20]
  67:source/Heavy_daisy_control.cpp ****   
 1914              		.loc 3 67 3 is_stmt 1 view .LVU495
  67:source/Heavy_daisy_control.cpp ****   
 1915              		.loc 3 67 25 is_stmt 0 view .LVU496
 1916 0036 FFF7FEFF 		bl	sVarf_init
 1917              	.LVL145:
  67:source/Heavy_daisy_control.cpp ****   
 1918              		.loc 3 67 12 view .LVU497
 1919 003a 6369     		ldr	r3, [r4, #20]
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s 			page 65


  67:source/Heavy_daisy_control.cpp ****   
 1920              		.loc 3 67 25 view .LVU498
 1921 003c 0246     		mov	r2, r0
 1922              	.LBE238:
  69:source/Heavy_daisy_control.cpp **** 
 1923              		.loc 3 69 1 view .LVU499
 1924 003e 2046     		mov	r0, r4
 1925              	.LBB239:
  67:source/Heavy_daisy_control.cpp ****   
 1926              		.loc 3 67 12 view .LVU500
 1927 0040 1344     		add	r3, r3, r2
 1928 0042 6361     		str	r3, [r4, #20]
 1929              	.LBE239:
  69:source/Heavy_daisy_control.cpp **** 
 1930              		.loc 3 69 1 view .LVU501
 1931 0044 02B0     		add	sp, sp, #8
 1932              		.cfi_def_cfa_offset 8
 1933              		@ sp needed
 1934 0046 10BD     		pop	{r4, pc}
 1935              	.LVL146:
 1936              	.L95:
  69:source/Heavy_daisy_control.cpp **** 
 1937              		.loc 3 69 1 view .LVU502
 1938              		.align	2
 1939              	.L94:
 1940 0048 08000000 		.word	.LANCHOR0+8
 1941 004c 00007A44 		.word	1148846080
 1942 0050 00000000 		.word	0
 1943              		.cfi_endproc
 1944              	.LFE994:
 1946              		.global	_ZN19Heavy_daisy_controlC1Ediii
 1947              		.thumb_set _ZN19Heavy_daisy_controlC1Ediii,_ZN19Heavy_daisy_controlC2Ediii
 1948              		.section	.text.hv_daisy_control_new,"ax",%progbits
 1949              		.align	1
 1950              		.p2align 2,,3
 1951              		.global	hv_daisy_control_new
 1952              		.syntax unified
 1953              		.thumb
 1954              		.thumb_func
 1956              	hv_daisy_control_new:
 1957              	.LVL147:
 1958              	.LFB991:
  44:source/Heavy_daisy_control.cpp ****     return new Heavy_daisy_control(sampleRate);
 1959              		.loc 3 44 76 is_stmt 1 view -0
 1960              		.cfi_startproc
 1961              		@ args = 0, pretend = 0, frame = 8
 1962              		@ frame_needed = 0, uses_anonymous_args = 0
  45:source/Heavy_daisy_control.cpp ****   }
 1963              		.loc 3 45 5 view .LVU504
  44:source/Heavy_daisy_control.cpp ****     return new Heavy_daisy_control(sampleRate);
 1964              		.loc 3 44 76 is_stmt 0 view .LVU505
 1965 0000 10B5     		push	{r4, lr}
 1966              		.cfi_def_cfa_offset 8
 1967              		.cfi_offset 4, -8
 1968              		.cfi_offset 14, -4
 1969 0002 82B0     		sub	sp, sp, #8
 1970              		.cfi_def_cfa_offset 16
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s 			page 66


  45:source/Heavy_daisy_control.cpp ****   }
 1971              		.loc 3 45 46 view .LVU506
 1972 0004 A020     		movs	r0, #160
  44:source/Heavy_daisy_control.cpp ****     return new Heavy_daisy_control(sampleRate);
 1973              		.loc 3 44 76 view .LVU507
 1974 0006 8DED000B 		vstr.64	d0, [sp]	@ int
  45:source/Heavy_daisy_control.cpp ****   }
 1975              		.loc 3 45 46 view .LVU508
 1976 000a FFF7FEFF 		bl	_Znwj
 1977              	.LVL148:
  45:source/Heavy_daisy_control.cpp ****   }
 1978              		.loc 3 45 46 view .LVU509
 1979 000e 0446     		mov	r4, r0
 1980 0010 0023     		movs	r3, #0
 1981 0012 0222     		movs	r2, #2
 1982 0014 0A21     		movs	r1, #10
 1983 0016 9DED000B 		vldr.64	d0, [sp]	@ int
 1984 001a FFF7FEFF 		bl	_ZN19Heavy_daisy_controlC1Ediii
 1985              	.LVL149:
  46:source/Heavy_daisy_control.cpp **** 
 1986              		.loc 3 46 3 view .LVU510
 1987 001e 2046     		mov	r0, r4
 1988 0020 02B0     		add	sp, sp, #8
 1989              		.cfi_def_cfa_offset 8
 1990              		@ sp needed
 1991 0022 10BD     		pop	{r4, pc}
 1992              		.cfi_endproc
 1993              	.LFE991:
 1995              		.section	.text.hv_daisy_control_new_with_options,"ax",%progbits
 1996              		.align	1
 1997              		.p2align 2,,3
 1998              		.global	hv_daisy_control_new_with_options
 1999              		.syntax unified
 2000              		.thumb
 2001              		.thumb_func
 2003              	hv_daisy_control_new_with_options:
 2004              	.LVL150:
 2005              	.LFB992:
  49:source/Heavy_daisy_control.cpp ****     return new Heavy_daisy_control(sampleRate, poolKb, inQueueKb, outQueueKb);
 2006              		.loc 3 49 50 is_stmt 1 view -0
 2007              		.cfi_startproc
 2008              		@ args = 0, pretend = 0, frame = 16
 2009              		@ frame_needed = 0, uses_anonymous_args = 0
  50:source/Heavy_daisy_control.cpp ****   }
 2010              		.loc 3 50 5 view .LVU512
  49:source/Heavy_daisy_control.cpp ****     return new Heavy_daisy_control(sampleRate, poolKb, inQueueKb, outQueueKb);
 2011              		.loc 3 49 50 is_stmt 0 view .LVU513
 2012 0000 30B5     		push	{r4, r5, lr}
 2013              		.cfi_def_cfa_offset 12
 2014              		.cfi_offset 4, -12
 2015              		.cfi_offset 5, -8
 2016              		.cfi_offset 14, -4
 2017 0002 85B0     		sub	sp, sp, #20
 2018              		.cfi_def_cfa_offset 32
  49:source/Heavy_daisy_control.cpp ****     return new Heavy_daisy_control(sampleRate, poolKb, inQueueKb, outQueueKb);
 2019              		.loc 3 49 50 view .LVU514
 2020 0004 0D46     		mov	r5, r1
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s 			page 67


 2021 0006 0290     		str	r0, [sp, #8]
  50:source/Heavy_daisy_control.cpp ****   }
 2022              		.loc 3 50 77 view .LVU515
 2023 0008 A020     		movs	r0, #160
 2024              	.LVL151:
  49:source/Heavy_daisy_control.cpp ****     return new Heavy_daisy_control(sampleRate, poolKb, inQueueKb, outQueueKb);
 2025              		.loc 3 49 50 view .LVU516
 2026 000a 0392     		str	r2, [sp, #12]
 2027 000c 8DED000B 		vstr.64	d0, [sp]	@ int
  50:source/Heavy_daisy_control.cpp ****   }
 2028              		.loc 3 50 77 view .LVU517
 2029 0010 FFF7FEFF 		bl	_Znwj
 2030              	.LVL152:
  50:source/Heavy_daisy_control.cpp ****   }
 2031              		.loc 3 50 77 view .LVU518
 2032 0014 0446     		mov	r4, r0
 2033 0016 039B     		ldr	r3, [sp, #12]
 2034 0018 2A46     		mov	r2, r5
 2035 001a 0299     		ldr	r1, [sp, #8]
 2036 001c 9DED000B 		vldr.64	d0, [sp]	@ int
 2037 0020 FFF7FEFF 		bl	_ZN19Heavy_daisy_controlC1Ediii
 2038              	.LVL153:
  51:source/Heavy_daisy_control.cpp **** } // extern "C"
 2039              		.loc 3 51 3 view .LVU519
 2040 0024 2046     		mov	r0, r4
 2041 0026 05B0     		add	sp, sp, #20
 2042              		.cfi_def_cfa_offset 12
 2043              		@ sp needed
 2044 0028 30BD     		pop	{r4, r5, pc}
  51:source/Heavy_daisy_control.cpp **** } // extern "C"
 2045              		.loc 3 51 3 view .LVU520
 2046              		.cfi_endproc
 2047              	.LFE992:
 2049              		.global	_ZTV19Heavy_daisy_control
 2050 002a 00BF     		.section	.rodata._ZTV19Heavy_daisy_control,"a"
 2051              		.align	2
 2052              		.set	.LANCHOR0,. + 0
 2055              	_ZTV19Heavy_daisy_control:
 2056 0000 00000000 		.word	0
 2057 0004 00000000 		.word	0
 2058 0008 00000000 		.word	_ZN19Heavy_daisy_controlD1Ev
 2059 000c 00000000 		.word	_ZN19Heavy_daisy_controlD0Ev
 2060 0010 00000000 		.word	_ZN19Heavy_daisy_control7getNameEv
 2061 0014 00000000 		.word	_ZN19Heavy_daisy_control19getNumInputChannelsEv
 2062 0018 00000000 		.word	_ZN19Heavy_daisy_control20getNumOutputChannelsEv
 2063 001c 00000000 		.word	_ZN12HeavyContext7getSizeEv
 2064 0020 00000000 		.word	_ZN12HeavyContext13getSampleRateEv
 2065 0024 00000000 		.word	_ZN12HeavyContext16getCurrentSampleEv
 2066 0028 00000000 		.word	_ZN12HeavyContext21samplesToMillisecondsEm
 2067 002c 00000000 		.word	_ZN12HeavyContext21millisecondsToSamplesEf
 2068 0030 00000000 		.word	_ZN12HeavyContext11setUserDataEPv
 2069 0034 00000000 		.word	_ZN12HeavyContext11getUserDataEv
 2070 0038 00000000 		.word	_ZN12HeavyContext11setSendHookEPFvP21HeavyContextInterfacePKcmPK9HvMessageE
 2071 003c 00000000 		.word	_ZN12HeavyContext11getSendHookEv
 2072 0040 00000000 		.word	_ZN12HeavyContext12setPrintHookEPFvP21HeavyContextInterfacePKcS3_PK9HvMessageE
 2073 0044 00000000 		.word	_ZN12HeavyContext12getPrintHookEv
 2074 0048 00000000 		.word	_ZN19Heavy_daisy_control7processEPPfS1_i
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s 			page 68


 2075 004c 00000000 		.word	_ZN19Heavy_daisy_control13processInlineEPfS0_i
 2076 0050 00000000 		.word	_ZN19Heavy_daisy_control24processInlineInterleavedEPfS0_i
 2077 0054 00000000 		.word	_ZN12HeavyContext21sendMessageToReceiverEmdP9HvMessage
 2078 0058 00000000 		.word	_ZN12HeavyContext22sendMessageToReceiverVEmdPKcz
 2079 005c 00000000 		.word	_ZN12HeavyContext19sendFloatToReceiverEmf
 2080 0060 00000000 		.word	_ZN12HeavyContext18sendBangToReceiverEm
 2081 0064 00000000 		.word	_ZN12HeavyContext20sendSymbolToReceiverEmPKc
 2082 0068 00000000 		.word	_ZN12HeavyContext13cancelMessageEP9HvMessagePFvP21HeavyContextInterfaceiPKS0_E
 2083 006c 00000000 		.word	_ZN19Heavy_daisy_control16getParameterInfoEiP15HvParameterInfo
 2084 0070 00000000 		.word	_ZN12HeavyContext17getBufferForTableEm
 2085 0074 00000000 		.word	_ZN12HeavyContext17getLengthForTableEm
 2086 0078 00000000 		.word	_ZN12HeavyContext17setLengthForTableEmm
 2087 007c 00000000 		.word	_ZN12HeavyContext11lockAcquireEv
 2088 0080 00000000 		.word	_ZN12HeavyContext7lockTryEv
 2089 0084 00000000 		.word	_ZN12HeavyContext11lockReleaseEv
 2090 0088 00000000 		.word	_ZN12HeavyContext24setInputMessageQueueSizeEi
 2091 008c 00000000 		.word	_ZN12HeavyContext25setOutputMessageQueueSizeEi
 2092 0090 00000000 		.word	_ZN12HeavyContext18getNextSentMessageEPmP9HvMessagej
 2093 0094 00000000 		.word	_ZN19Heavy_daisy_control15getTableForHashEm
 2094 0098 00000000 		.word	_ZN19Heavy_daisy_control26scheduleMessageForReceiverEmP9HvMessage
 2095              		.text
 2096              	.Letext0:
 2097              		.file 9 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/machine/_default_types.h"
 2098              		.file 10 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/sys/_stdint.h"
 2099              		.file 11 "/Library/DaisyToolchain/0.2.0/arm/lib/gcc/arm-none-eabi/10.3.1/include/stddef.h"
 2100              		.file 12 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath"
 2101              		.file 13 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h"
 2102              		.file 14 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cstdlib"
 2103              		.file 15 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/type_traits"
 2104              		.file 16 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v
 2105              		.file 17 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/math.h"
 2106              		.file 18 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/stdlib.h"
 2107              		.file 19 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/math.h"
 2108              		.file 20 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/stdlib.h"
 2109              		.file 21 "source/HeavyContextInterface.hpp"
 2110              		.file 22 "source/HvMessagePool.h"
 2111              		.file 23 "source/HvTable.h"
 2112              		.file 24 "source/HvControlBinop.h"
 2113              		.file 25 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/assert.h"
 2114              		.file 26 "source/HvLightPipe.h"
 2115              		.file 27 "<built-in>"
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s 			page 69


DEFINED SYMBOLS
                            *ABS*:0000000000000000 Heavy_daisy_control.cpp
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s:19     .text._ZN12HeavyContext7getSizeEv:0000000000000000 $t
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s:26     .text._ZN12HeavyContext7getSizeEv:0000000000000000 _ZN12HeavyContext7getSizeEv
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s:45     .text._ZN12HeavyContext13getSampleRateEv:0000000000000000 $t
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s:52     .text._ZN12HeavyContext13getSampleRateEv:0000000000000000 _ZN12HeavyContext13getSampleRateEv
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s:68     .text._ZN12HeavyContext16getCurrentSampleEv:0000000000000000 $t
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s:75     .text._ZN12HeavyContext16getCurrentSampleEv:0000000000000000 _ZN12HeavyContext16getCurrentSampleEv
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s:93     .text._ZN12HeavyContext21samplesToMillisecondsEm:0000000000000000 $t
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s:100    .text._ZN12HeavyContext21samplesToMillisecondsEm:0000000000000000 _ZN12HeavyContext21samplesToMillisecondsEm
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s:125    .text._ZN12HeavyContext21samplesToMillisecondsEm:0000000000000020 $d
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s:131    .text._ZN12HeavyContext11setUserDataEPv:0000000000000000 $t
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s:138    .text._ZN12HeavyContext11setUserDataEPv:0000000000000000 _ZN12HeavyContext11setUserDataEPv
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s:155    .text._ZN12HeavyContext11getUserDataEv:0000000000000000 $t
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s:162    .text._ZN12HeavyContext11getUserDataEv:0000000000000000 _ZN12HeavyContext11getUserDataEv
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s:180    .text._ZN12HeavyContext11setSendHookEPFvP21HeavyContextInterfacePKcmPK9HvMessageE:0000000000000000 $t
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s:187    .text._ZN12HeavyContext11setSendHookEPFvP21HeavyContextInterfacePKcmPK9HvMessageE:0000000000000000 _ZN12HeavyContext11setSendHookEPFvP21HeavyContextInterfacePKcmPK9HvMessageE
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s:204    .text._ZN12HeavyContext11getSendHookEv:0000000000000000 $t
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s:211    .text._ZN12HeavyContext11getSendHookEv:0000000000000000 _ZN12HeavyContext11getSendHookEv
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s:229    .text._ZN12HeavyContext12setPrintHookEPFvP21HeavyContextInterfacePKcS3_PK9HvMessageE:0000000000000000 $t
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s:236    .text._ZN12HeavyContext12setPrintHookEPFvP21HeavyContextInterfacePKcS3_PK9HvMessageE:0000000000000000 _ZN12HeavyContext12setPrintHookEPFvP21HeavyContextInterfacePKcS3_PK9HvMessageE
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s:253    .text._ZN12HeavyContext12getPrintHookEv:0000000000000000 $t
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s:260    .text._ZN12HeavyContext12getPrintHookEv:0000000000000000 _ZN12HeavyContext12getPrintHookEv
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s:278    .rodata._ZN19Heavy_daisy_control7getNameEv.str1.4:0000000000000000 $d
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s:282    .text._ZN19Heavy_daisy_control7getNameEv:0000000000000000 $t
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s:289    .text._ZN19Heavy_daisy_control7getNameEv:0000000000000000 _ZN19Heavy_daisy_control7getNameEv
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s:307    .text._ZN19Heavy_daisy_control7getNameEv:0000000000000004 $d
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s:312    .text._ZN19Heavy_daisy_control19getNumInputChannelsEv:0000000000000000 $t
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s:319    .text._ZN19Heavy_daisy_control19getNumInputChannelsEv:0000000000000000 _ZN19Heavy_daisy_control19getNumInputChannelsEv
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s:337    .text._ZN19Heavy_daisy_control20getNumOutputChannelsEv:0000000000000000 $t
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s:344    .text._ZN19Heavy_daisy_control20getNumOutputChannelsEv:0000000000000000 _ZN19Heavy_daisy_control20getNumOutputChannelsEv
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s:362    .text._ZN19Heavy_daisy_control15getTableForHashEm:0000000000000000 $t
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s:369    .text._ZN19Heavy_daisy_control15getTableForHashEm:0000000000000000 _ZN19Heavy_daisy_control15getTableForHashEm
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s:388    .text._ZN19Heavy_daisy_controlD2Ev:0000000000000000 $t
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s:395    .text._ZN19Heavy_daisy_controlD2Ev:0000000000000000 _ZN19Heavy_daisy_controlD2Ev
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s:428    .text._ZN19Heavy_daisy_controlD2Ev:0000000000000010 $d
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s:395    .text._ZN19Heavy_daisy_controlD2Ev:0000000000000000 _ZN19Heavy_daisy_controlD1Ev
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s:435    .text._ZN19Heavy_daisy_controlD0Ev:0000000000000000 $t
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s:442    .text._ZN19Heavy_daisy_controlD0Ev:0000000000000000 _ZN19Heavy_daisy_controlD0Ev
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s:486    .text._ZN19Heavy_daisy_controlD0Ev:0000000000000018 $d
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s:491    .text._ZN19Heavy_daisy_control27cBinop_TJ0Cw5i4_sendMessageEP21HeavyContextInterfaceiPK9HvMessage:0000000000000000 $t
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s:498    .text._ZN19Heavy_daisy_control27cBinop_TJ0Cw5i4_sendMessageEP21HeavyContextInterfaceiPK9HvMessage:0000000000000000 _ZN19Heavy_daisy_control27cBinop_TJ0Cw5i4_sendMessageEP21HeavyContextInterfaceiPK9HvMessage
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s:523    .text._ZN19Heavy_daisy_control27cBinop_mb7cZkKx_sendMessageEP21HeavyContextInterfaceiPK9HvMessage:0000000000000000 $t
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s:530    .text._ZN19Heavy_daisy_control27cBinop_mb7cZkKx_sendMessageEP21HeavyContextInterfaceiPK9HvMessage:0000000000000000 _ZN19Heavy_daisy_control27cBinop_mb7cZkKx_sendMessageEP21HeavyContextInterfaceiPK9HvMessage
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s:550    .text._ZN19Heavy_daisy_control29cReceive_GE5qdYgZ_sendMessageEP21HeavyContextInterfaceiPK9HvMessage:0000000000000000 $t
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s:557    .text._ZN19Heavy_daisy_control29cReceive_GE5qdYgZ_sendMessageEP21HeavyContextInterfaceiPK9HvMessage:0000000000000000 _ZN19Heavy_daisy_control29cReceive_GE5qdYgZ_sendMessageEP21HeavyContextInterfaceiPK9HvMessage
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s:596    .text._ZN19Heavy_daisy_control29cReceive_GE5qdYgZ_sendMessageEP21HeavyContextInterfaceiPK9HvMessage:0000000000000020 $d
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s:602    .text._ZN19Heavy_daisy_control29cReceive_S07AdeHm_sendMessageEP21HeavyContextInterfaceiPK9HvMessage:0000000000000000 $t
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s:609    .text._ZN19Heavy_daisy_control29cReceive_S07AdeHm_sendMessageEP21HeavyContextInterfaceiPK9HvMessage:0000000000000000 _ZN19Heavy_daisy_control29cReceive_S07AdeHm_sendMessageEP21HeavyContextInterfaceiPK9HvMessage
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s:648    .text._ZN19Heavy_daisy_control29cReceive_S07AdeHm_sendMessageEP21HeavyContextInterfaceiPK9HvMessage:0000000000000020 $d
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s:654    .text._ZN19Heavy_daisy_control13processInlineEPfS0_i:0000000000000000 $t
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s:661    .text._ZN19Heavy_daisy_control13processInlineEPfS0_i:0000000000000000 _ZN19Heavy_daisy_control13processInlineEPfS0_i
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s:716    .rodata._ZN19Heavy_daisy_control24processInlineInterleavedEPfS0_i.str1.4:0000000000000000 $d
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s:727    .text._ZN19Heavy_daisy_control24processInlineInterleavedEPfS0_i:0000000000000000 $t
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s:734    .text._ZN19Heavy_daisy_control24processInlineInterleavedEPfS0_i:0000000000000000 _ZN19Heavy_daisy_control24processInlineInterleavedEPfS0_i
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s:861    .text._ZN19Heavy_daisy_control24processInlineInterleavedEPfS0_i:0000000000000060 $d
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s:868    .text._ZN12HeavyContext21millisecondsToSamplesEf:0000000000000000 $t
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s 			page 70


/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s:875    .text._ZN12HeavyContext21millisecondsToSamplesEf:0000000000000000 _ZN12HeavyContext21millisecondsToSamplesEf
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s:908    .text._ZN12HeavyContext21millisecondsToSamplesEf:0000000000000028 $d
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s:915    .rodata._ZN19Heavy_daisy_control16getParameterInfoEiP15HvParameterInfo.str1.4:0000000000000000 $d
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s:925    .text._ZN19Heavy_daisy_control16getParameterInfoEiP15HvParameterInfo:0000000000000000 $t
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s:932    .text._ZN19Heavy_daisy_control16getParameterInfoEiP15HvParameterInfo:0000000000000000 _ZN19Heavy_daisy_control16getParameterInfoEiP15HvParameterInfo
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s:1077   .text._ZN19Heavy_daisy_control16getParameterInfoEiP15HvParameterInfo:0000000000000068 $d
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s:1086   .text._ZN19Heavy_daisy_control26scheduleMessageForReceiverEmP9HvMessage:0000000000000000 $t
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s:1093   .text._ZN19Heavy_daisy_control26scheduleMessageForReceiverEmP9HvMessage:0000000000000000 _ZN19Heavy_daisy_control26scheduleMessageForReceiverEmP9HvMessage
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s:1157   .text._ZN19Heavy_daisy_control26scheduleMessageForReceiverEmP9HvMessage:0000000000000028 $d
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s:1165   .rodata._ZN19Heavy_daisy_control7processEPPfS1_i.str1.4:0000000000000000 $d
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s:1173   .text._ZN19Heavy_daisy_control7processEPPfS1_i:0000000000000000 $t
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s:1180   .text._ZN19Heavy_daisy_control7processEPPfS1_i:0000000000000000 _ZN19Heavy_daisy_control7processEPPfS1_i
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s:1845   .text._ZN19Heavy_daisy_control7processEPPfS1_i:000000000000014c $d
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s:1862   .text._ZN19Heavy_daisy_controlC2Ediii:0000000000000000 $t
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s:1869   .text._ZN19Heavy_daisy_controlC2Ediii:0000000000000000 _ZN19Heavy_daisy_controlC2Ediii
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s:1940   .text._ZN19Heavy_daisy_controlC2Ediii:0000000000000048 $d
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s:1869   .text._ZN19Heavy_daisy_controlC2Ediii:0000000000000000 _ZN19Heavy_daisy_controlC1Ediii
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s:1949   .text.hv_daisy_control_new:0000000000000000 $t
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s:1956   .text.hv_daisy_control_new:0000000000000000 hv_daisy_control_new
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s:1996   .text.hv_daisy_control_new_with_options:0000000000000000 $t
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s:2003   .text.hv_daisy_control_new_with_options:0000000000000000 hv_daisy_control_new_with_options
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s:2055   .rodata._ZTV19Heavy_daisy_control:0000000000000000 _ZTV19Heavy_daisy_control
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//cc0Dq2yY.s:2051   .rodata._ZTV19Heavy_daisy_control:0000000000000000 $d

UNDEFINED SYMBOLS
_ZN12HeavyContextD2Ev
_ZdlPvj
sPhasor_k_onMessage
sVarf_onMessage
cBinop_k_onMessage
__assert_func
mq_addMessageByTimestamp
hLp_consume
hLp_hasData
hLp_getReadBuffer
mq_pop
_ZN12HeavyContextC2Ediii
sPhasor_k_init
sVarf_init
_Znwj
_ZN12HeavyContext21sendMessageToReceiverEmdP9HvMessage
_ZN12HeavyContext22sendMessageToReceiverVEmdPKcz
_ZN12HeavyContext19sendFloatToReceiverEmf
_ZN12HeavyContext18sendBangToReceiverEm
_ZN12HeavyContext20sendSymbolToReceiverEmPKc
_ZN12HeavyContext13cancelMessageEP9HvMessagePFvP21HeavyContextInterfaceiPKS0_E
_ZN12HeavyContext17getBufferForTableEm
_ZN12HeavyContext17getLengthForTableEm
_ZN12HeavyContext17setLengthForTableEmm
_ZN12HeavyContext11lockAcquireEv
_ZN12HeavyContext7lockTryEv
_ZN12HeavyContext11lockReleaseEv
_ZN12HeavyContext24setInputMessageQueueSizeEi
_ZN12HeavyContext25setOutputMessageQueueSizeEi
_ZN12HeavyContext18getNextSentMessageEPmP9HvMessagej
