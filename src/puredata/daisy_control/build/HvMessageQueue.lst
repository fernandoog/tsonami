ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccRdbHuq.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 2
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"HvMessageQueue.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.rodata.mq_getOrCreateNodeFromPool.part.0.str1.4,"aMS",%progbits,1
  19              		.align	2
  20              	.LC0:
  21 0000 712D3E70 		.ascii	"q->pool != ((void *)0)\000"
  21      6F6F6C20 
  21      213D2028 
  21      28766F69 
  21      64202A29 
  22 0017 00       		.align	2
  23              	.LC1:
  24 0018 736F7572 		.ascii	"source/HvMessageQueue.c\000"
  24      63652F48 
  24      764D6573 
  24      73616765 
  24      51756575 
  25              		.section	.text.mq_getOrCreateNodeFromPool.part.0,"ax",%progbits
  26              		.align	1
  27              		.p2align 2,,3
  28              		.syntax unified
  29              		.thumb
  30              		.thumb_func
  32              	mq_getOrCreateNodeFromPool.part.0:
  33              	.LFB360:
  34              		.file 1 "source/HvMessageQueue.c"
   1:source/HvMessageQueue.c **** /**
   2:source/HvMessageQueue.c ****  * Copyright (c) 2014-2018 Enzien Audio Ltd.
   3:source/HvMessageQueue.c ****  *
   4:source/HvMessageQueue.c ****  * Permission to use, copy, modify, and/or distribute this software for any
   5:source/HvMessageQueue.c ****  * purpose with or without fee is hereby granted, provided that the above
   6:source/HvMessageQueue.c ****  * copyright notice and this permission notice appear in all copies.
   7:source/HvMessageQueue.c ****  *
   8:source/HvMessageQueue.c ****  * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
   9:source/HvMessageQueue.c ****  * REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
  10:source/HvMessageQueue.c ****  * AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
  11:source/HvMessageQueue.c ****  * INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
  12:source/HvMessageQueue.c ****  * LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
  13:source/HvMessageQueue.c ****  * OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
  14:source/HvMessageQueue.c ****  * PERFORMANCE OF THIS SOFTWARE.
  15:source/HvMessageQueue.c ****  */
  16:source/HvMessageQueue.c **** 
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccRdbHuq.s 			page 2


  17:source/HvMessageQueue.c **** #include "HvMessageQueue.h"
  18:source/HvMessageQueue.c **** 
  19:source/HvMessageQueue.c **** hv_size_t mq_initWithPoolSize(HvMessageQueue *q, hv_size_t poolSizeKB) {
  20:source/HvMessageQueue.c ****   hv_assert(poolSizeKB > 0);
  21:source/HvMessageQueue.c ****   q->head = NULL;
  22:source/HvMessageQueue.c ****   q->tail = NULL;
  23:source/HvMessageQueue.c ****   q->pool = NULL;
  24:source/HvMessageQueue.c ****   return mp_init(&q->mp, poolSizeKB);
  25:source/HvMessageQueue.c **** }
  26:source/HvMessageQueue.c **** 
  27:source/HvMessageQueue.c **** void mq_free(HvMessageQueue *q) {
  28:source/HvMessageQueue.c ****   mq_clear(q);
  29:source/HvMessageQueue.c ****   while (q->pool != NULL) {
  30:source/HvMessageQueue.c ****     MessageNode *n = q->pool;
  31:source/HvMessageQueue.c ****     q->pool = q->pool->next;
  32:source/HvMessageQueue.c ****     hv_free(n);
  33:source/HvMessageQueue.c ****   }
  34:source/HvMessageQueue.c ****   mp_free(&q->mp);
  35:source/HvMessageQueue.c **** }
  36:source/HvMessageQueue.c **** 
  37:source/HvMessageQueue.c **** static MessageNode *mq_getOrCreateNodeFromPool(HvMessageQueue *q) {
  35              		.loc 1 37 21 view -0
  36              		.cfi_startproc
  37              		@ Volatile: function does not return.
  38              		@ args = 0, pretend = 0, frame = 0
  39              		@ frame_needed = 0, uses_anonymous_args = 0
  40              	.LVL0:
  41              		.loc 1 37 21 is_stmt 0 view .LVU1
  42 0000 08B5     		push	{r3, lr}
  43              		.cfi_def_cfa_offset 8
  44              		.cfi_offset 3, -8
  45              		.cfi_offset 14, -4
  38:source/HvMessageQueue.c ****   if (q->pool == NULL) {
  39:source/HvMessageQueue.c ****     // if necessary, create a new empty node
  40:source/HvMessageQueue.c ****     q->pool = (MessageNode *) hv_malloc(sizeof(MessageNode));
  41:source/HvMessageQueue.c ****     hv_assert(q->pool != NULL);
  46              		.loc 1 41 5 view .LVU2
  47 0002 034A     		ldr	r2, .L4
  48 0004 2921     		movs	r1, #41
  49 0006 034B     		ldr	r3, .L4+4
  50 0008 0348     		ldr	r0, .L4+8
  51 000a FFF7FEFF 		bl	__assert_func
  52              	.LVL1:
  53              	.L5:
  54 000e 00BF     		.align	2
  55              	.L4:
  56 0010 00000000 		.word	.LANCHOR0
  57 0014 00000000 		.word	.LC0
  58 0018 18000000 		.word	.LC1
  59              		.cfi_endproc
  60              	.LFE360:
  62              		.section	.rodata.mq_initWithPoolSize.str1.4,"aMS",%progbits,1
  63              		.align	2
  64              	.LC2:
  65 0000 706F6F6C 		.ascii	"poolSizeKB > 0\000"
  65      53697A65 
  65      4B42203E 
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccRdbHuq.s 			page 3


  65      203000
  66              		.section	.text.mq_initWithPoolSize,"ax",%progbits
  67              		.align	1
  68              		.p2align 2,,3
  69              		.global	mq_initWithPoolSize
  70              		.syntax unified
  71              		.thumb
  72              		.thumb_func
  74              	mq_initWithPoolSize:
  75              	.LVL2:
  76              	.LFB350:
  19:source/HvMessageQueue.c ****   hv_assert(poolSizeKB > 0);
  77              		.loc 1 19 72 is_stmt 1 view -0
  78              		.cfi_startproc
  79              		@ args = 0, pretend = 0, frame = 0
  80              		@ frame_needed = 0, uses_anonymous_args = 0
  20:source/HvMessageQueue.c ****   q->head = NULL;
  81              		.loc 1 20 3 view .LVU4
  19:source/HvMessageQueue.c ****   hv_assert(poolSizeKB > 0);
  82              		.loc 1 19 72 is_stmt 0 view .LVU5
  83 0000 08B5     		push	{r3, lr}
  84              		.cfi_def_cfa_offset 8
  85              		.cfi_offset 3, -8
  86              		.cfi_offset 14, -4
  20:source/HvMessageQueue.c ****   q->head = NULL;
  87              		.loc 1 20 3 view .LVU6
  88 0002 49B1     		cbz	r1, .L9
  21:source/HvMessageQueue.c ****   q->tail = NULL;
  89              		.loc 1 21 3 is_stmt 1 view .LVU7
  90 0004 0346     		mov	r3, r0
  21:source/HvMessageQueue.c ****   q->tail = NULL;
  91              		.loc 1 21 11 is_stmt 0 view .LVU8
  92 0006 0022     		movs	r2, #0
  24:source/HvMessageQueue.c **** }
  93              		.loc 1 24 10 view .LVU9
  94 0008 0C30     		adds	r0, r0, #12
  95              	.LVL3:
  23:source/HvMessageQueue.c ****   return mp_init(&q->mp, poolSizeKB);
  96              		.loc 1 23 11 view .LVU10
  97 000a 9A60     		str	r2, [r3, #8]
  22:source/HvMessageQueue.c ****   q->pool = NULL;
  98              		.loc 1 22 11 view .LVU11
  99 000c C3E90022 		strd	r2, r2, [r3]
  23:source/HvMessageQueue.c ****   return mp_init(&q->mp, poolSizeKB);
 100              		.loc 1 23 3 is_stmt 1 view .LVU12
  24:source/HvMessageQueue.c **** }
 101              		.loc 1 24 3 view .LVU13
  25:source/HvMessageQueue.c **** 
 102              		.loc 1 25 1 is_stmt 0 view .LVU14
 103 0010 BDE80840 		pop	{r3, lr}
 104              		.cfi_remember_state
 105              		.cfi_restore 14
 106              		.cfi_restore 3
 107              		.cfi_def_cfa_offset 0
 108              	.LVL4:
  24:source/HvMessageQueue.c **** }
 109              		.loc 1 24 10 view .LVU15
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccRdbHuq.s 			page 4


 110 0014 FFF7FEBF 		b	mp_init
 111              	.LVL5:
 112              	.L9:
 113              		.cfi_restore_state
  20:source/HvMessageQueue.c ****   q->head = NULL;
 114              		.loc 1 20 3 discriminator 1 view .LVU16
 115 0018 024B     		ldr	r3, .L10
 116 001a 1421     		movs	r1, #20
 117              	.LVL6:
  20:source/HvMessageQueue.c ****   q->head = NULL;
 118              		.loc 1 20 3 discriminator 1 view .LVU17
 119 001c 024A     		ldr	r2, .L10+4
 120 001e 0348     		ldr	r0, .L10+8
 121              	.LVL7:
  20:source/HvMessageQueue.c ****   q->head = NULL;
 122              		.loc 1 20 3 discriminator 1 view .LVU18
 123 0020 FFF7FEFF 		bl	__assert_func
 124              	.LVL8:
 125              	.L11:
 126              		.align	2
 127              	.L10:
 128 0024 00000000 		.word	.LC2
 129 0028 00000000 		.word	.LANCHOR1
 130 002c 18000000 		.word	.LC1
 131              		.cfi_endproc
 132              	.LFE350:
 134              		.section	.text.mq_free,"ax",%progbits
 135              		.align	1
 136              		.p2align 2,,3
 137              		.global	mq_free
 138              		.syntax unified
 139              		.thumb
 140              		.thumb_func
 142              	mq_free:
 143              	.LVL9:
 144              	.LFB351:
  27:source/HvMessageQueue.c ****   mq_clear(q);
 145              		.loc 1 27 33 is_stmt 1 view -0
 146              		.cfi_startproc
 147              		@ args = 0, pretend = 0, frame = 0
 148              		@ frame_needed = 0, uses_anonymous_args = 0
  28:source/HvMessageQueue.c ****   while (q->pool != NULL) {
 149              		.loc 1 28 3 view .LVU20
  27:source/HvMessageQueue.c ****   mq_clear(q);
 150              		.loc 1 27 33 is_stmt 0 view .LVU21
 151 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 152              		.cfi_def_cfa_offset 24
 153              		.cfi_offset 3, -24
 154              		.cfi_offset 4, -20
 155              		.cfi_offset 5, -16
 156              		.cfi_offset 6, -12
 157              		.cfi_offset 7, -8
 158              		.cfi_offset 14, -4
 159              	.LBB48:
 160              	.LBB49:
 161              	.LBB50:
 162              	.LBB51:
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccRdbHuq.s 			page 5


 163              		.file 2 "source/HvMessageQueue.h"
   1:source/HvMessageQueue.h **** /**
   2:source/HvMessageQueue.h ****  * Copyright (c) 2014-2018 Enzien Audio Ltd.
   3:source/HvMessageQueue.h ****  *
   4:source/HvMessageQueue.h ****  * Permission to use, copy, modify, and/or distribute this software for any
   5:source/HvMessageQueue.h ****  * purpose with or without fee is hereby granted, provided that the above
   6:source/HvMessageQueue.h ****  * copyright notice and this permission notice appear in all copies.
   7:source/HvMessageQueue.h ****  *
   8:source/HvMessageQueue.h ****  * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
   9:source/HvMessageQueue.h ****  * REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
  10:source/HvMessageQueue.h ****  * AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
  11:source/HvMessageQueue.h ****  * INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
  12:source/HvMessageQueue.h ****  * LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
  13:source/HvMessageQueue.h ****  * OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
  14:source/HvMessageQueue.h ****  * PERFORMANCE OF THIS SOFTWARE.
  15:source/HvMessageQueue.h ****  */
  16:source/HvMessageQueue.h **** 
  17:source/HvMessageQueue.h **** #ifndef _MESSAGE_QUEUE_H_
  18:source/HvMessageQueue.h **** #define _MESSAGE_QUEUE_H_
  19:source/HvMessageQueue.h **** 
  20:source/HvMessageQueue.h **** #include "HvMessage.h"
  21:source/HvMessageQueue.h **** #include "HvMessagePool.h"
  22:source/HvMessageQueue.h **** 
  23:source/HvMessageQueue.h **** #ifdef __cplusplus
  24:source/HvMessageQueue.h **** extern "C" {
  25:source/HvMessageQueue.h **** #endif
  26:source/HvMessageQueue.h **** 
  27:source/HvMessageQueue.h **** #ifdef __cplusplus
  28:source/HvMessageQueue.h **** class HeavyContextInterface;
  29:source/HvMessageQueue.h **** #else
  30:source/HvMessageQueue.h **** typedef struct HeavyContextInterface HeavyContextInterface;
  31:source/HvMessageQueue.h **** #endif
  32:source/HvMessageQueue.h **** 
  33:source/HvMessageQueue.h **** typedef struct MessageNode {
  34:source/HvMessageQueue.h ****   struct MessageNode *prev; // doubly linked list
  35:source/HvMessageQueue.h ****   struct MessageNode *next;
  36:source/HvMessageQueue.h ****   HvMessage *m;
  37:source/HvMessageQueue.h ****   void (*sendMessage)(HeavyContextInterface *, int, const HvMessage *);
  38:source/HvMessageQueue.h ****   int let;
  39:source/HvMessageQueue.h **** } MessageNode;
  40:source/HvMessageQueue.h **** 
  41:source/HvMessageQueue.h **** /** A doubly linked list containing scheduled messages. */
  42:source/HvMessageQueue.h **** typedef struct HvMessageQueue {
  43:source/HvMessageQueue.h ****   MessageNode *head; // the head of the queue
  44:source/HvMessageQueue.h ****   MessageNode *tail; // the tail of the queue
  45:source/HvMessageQueue.h ****   MessageNode *pool; // the head of the reserve pool
  46:source/HvMessageQueue.h ****   HvMessagePool mp;
  47:source/HvMessageQueue.h **** } HvMessageQueue;
  48:source/HvMessageQueue.h **** 
  49:source/HvMessageQueue.h **** hv_size_t mq_initWithPoolSize(HvMessageQueue *q, hv_size_t poolSizeKB);
  50:source/HvMessageQueue.h **** 
  51:source/HvMessageQueue.h **** void mq_free(HvMessageQueue *q);
  52:source/HvMessageQueue.h **** 
  53:source/HvMessageQueue.h **** int mq_size(HvMessageQueue *q);
  54:source/HvMessageQueue.h **** 
  55:source/HvMessageQueue.h **** static inline HvMessage *mq_node_getMessage(MessageNode *n) {
  56:source/HvMessageQueue.h ****   return n->m;
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccRdbHuq.s 			page 6


  57:source/HvMessageQueue.h **** }
  58:source/HvMessageQueue.h **** 
  59:source/HvMessageQueue.h **** static inline int mq_node_getLet(MessageNode *n) {
  60:source/HvMessageQueue.h ****   return n->let;
  61:source/HvMessageQueue.h **** }
  62:source/HvMessageQueue.h **** 
  63:source/HvMessageQueue.h **** static inline bool mq_hasMessage(HvMessageQueue *q) {
  64:source/HvMessageQueue.h ****   return (q->head != NULL);
 164              		.loc 2 64 12 view .LVU22
 165 0002 0468     		ldr	r4, [r0]
 166              	.LBE51:
 167              	.LBE50:
 168              	.LBE49:
 169              	.LBE48:
  27:source/HvMessageQueue.c ****   mq_clear(q);
 170              		.loc 1 27 33 view .LVU23
 171 0004 0546     		mov	r5, r0
 172              	.LVL10:
 173              	.LBB68:
 174              	.LBI48:
  42:source/HvMessageQueue.c ****     q->pool->next = NULL;
  43:source/HvMessageQueue.c ****   }
  44:source/HvMessageQueue.c ****   MessageNode *node = q->pool;
  45:source/HvMessageQueue.c ****   q->pool = q->pool->next;
  46:source/HvMessageQueue.c ****   return node;
  47:source/HvMessageQueue.c **** }
  48:source/HvMessageQueue.c **** 
  49:source/HvMessageQueue.c **** int mq_size(HvMessageQueue *q) {
  50:source/HvMessageQueue.c ****   int size = 0;
  51:source/HvMessageQueue.c ****   MessageNode *n = q->head;
  52:source/HvMessageQueue.c ****   while (n != NULL) {
  53:source/HvMessageQueue.c ****     ++size;
  54:source/HvMessageQueue.c ****     n = n->next;
  55:source/HvMessageQueue.c ****   }
  56:source/HvMessageQueue.c ****   return size;
  57:source/HvMessageQueue.c **** }
  58:source/HvMessageQueue.c **** 
  59:source/HvMessageQueue.c **** HvMessage *mq_addMessage(HvMessageQueue *q, const HvMessage *m, int let,
  60:source/HvMessageQueue.c ****     void (*sendMessage)(HeavyContextInterface *, int, const HvMessage *)) {
  61:source/HvMessageQueue.c ****   MessageNode *node = mq_getOrCreateNodeFromPool(q);
  62:source/HvMessageQueue.c ****   node->m = mp_addMessage(&q->mp, m);
  63:source/HvMessageQueue.c ****   node->let = let;
  64:source/HvMessageQueue.c ****   node->sendMessage = sendMessage;
  65:source/HvMessageQueue.c ****   node->prev = NULL;
  66:source/HvMessageQueue.c ****   node->next = NULL;
  67:source/HvMessageQueue.c **** 
  68:source/HvMessageQueue.c ****   if (q->tail != NULL) {
  69:source/HvMessageQueue.c ****     // the list already contains elements
  70:source/HvMessageQueue.c ****     q->tail->next = node;
  71:source/HvMessageQueue.c ****     node->prev = q->tail;
  72:source/HvMessageQueue.c ****     q->tail = node;
  73:source/HvMessageQueue.c ****   } else {
  74:source/HvMessageQueue.c ****     // the list is empty
  75:source/HvMessageQueue.c ****     node->prev = NULL;
  76:source/HvMessageQueue.c ****     q->head = node;
  77:source/HvMessageQueue.c ****     q->tail = node;
  78:source/HvMessageQueue.c ****   }
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccRdbHuq.s 			page 7


  79:source/HvMessageQueue.c ****   return mq_node_getMessage(node);
  80:source/HvMessageQueue.c **** }
  81:source/HvMessageQueue.c **** 
  82:source/HvMessageQueue.c **** HvMessage *mq_addMessageByTimestamp(HvMessageQueue *q, const HvMessage *m, int let,
  83:source/HvMessageQueue.c ****     void (*sendMessage)(HeavyContextInterface *, int, const HvMessage *)) {
  84:source/HvMessageQueue.c ****   if (mq_hasMessage(q)) {
  85:source/HvMessageQueue.c ****     MessageNode *n = mq_getOrCreateNodeFromPool(q);
  86:source/HvMessageQueue.c ****     n->m = mp_addMessage(&q->mp, m);
  87:source/HvMessageQueue.c ****     n->let = let;
  88:source/HvMessageQueue.c ****     n->sendMessage = sendMessage;
  89:source/HvMessageQueue.c **** 
  90:source/HvMessageQueue.c ****     if (msg_getTimestamp(m) < msg_getTimestamp(q->head->m)) {
  91:source/HvMessageQueue.c ****       // the message occurs before the current head
  92:source/HvMessageQueue.c ****       n->next = q->head;
  93:source/HvMessageQueue.c ****       q->head->prev = n;
  94:source/HvMessageQueue.c ****       n->prev = NULL;
  95:source/HvMessageQueue.c ****       q->head = n;
  96:source/HvMessageQueue.c ****     } else if (msg_getTimestamp(m) >= msg_getTimestamp(q->tail->m)) {
  97:source/HvMessageQueue.c ****       // the message occurs after the current tail
  98:source/HvMessageQueue.c ****       n->next = NULL;
  99:source/HvMessageQueue.c ****       n->prev = q->tail;
 100:source/HvMessageQueue.c ****       q->tail->next = n;
 101:source/HvMessageQueue.c ****       q->tail = n;
 102:source/HvMessageQueue.c ****     } else {
 103:source/HvMessageQueue.c ****       // the message occurs somewhere between the head and tail
 104:source/HvMessageQueue.c ****       MessageNode *node = q->head;
 105:source/HvMessageQueue.c ****       while (node != NULL) {
 106:source/HvMessageQueue.c ****         if (msg_getTimestamp(m) < msg_getTimestamp(node->next->m)) {
 107:source/HvMessageQueue.c ****           MessageNode *r = node->next;
 108:source/HvMessageQueue.c ****           node->next = n;
 109:source/HvMessageQueue.c ****           n->next = r;
 110:source/HvMessageQueue.c ****           n->prev = node;
 111:source/HvMessageQueue.c ****           r->prev = n;
 112:source/HvMessageQueue.c ****           break;
 113:source/HvMessageQueue.c ****         }
 114:source/HvMessageQueue.c ****         node = node->next;
 115:source/HvMessageQueue.c ****       }
 116:source/HvMessageQueue.c ****     }
 117:source/HvMessageQueue.c ****     return n->m;
 118:source/HvMessageQueue.c ****   } else {
 119:source/HvMessageQueue.c ****     // add a message to the head
 120:source/HvMessageQueue.c ****     return mq_addMessage(q, m, let, sendMessage);
 121:source/HvMessageQueue.c ****   }
 122:source/HvMessageQueue.c **** }
 123:source/HvMessageQueue.c **** 
 124:source/HvMessageQueue.c **** void mq_pop(HvMessageQueue *q) {
 125:source/HvMessageQueue.c ****   if (mq_hasMessage(q)) {
 126:source/HvMessageQueue.c ****     MessageNode *n = q->head;
 127:source/HvMessageQueue.c **** 
 128:source/HvMessageQueue.c ****     mp_freeMessage(&q->mp, n->m);
 129:source/HvMessageQueue.c ****     n->m = NULL;
 130:source/HvMessageQueue.c **** 
 131:source/HvMessageQueue.c ****     n->let = 0;
 132:source/HvMessageQueue.c ****     n->sendMessage = NULL;
 133:source/HvMessageQueue.c **** 
 134:source/HvMessageQueue.c ****     q->head = n->next;
 135:source/HvMessageQueue.c ****     if (q->head == NULL) {
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccRdbHuq.s 			page 8


 136:source/HvMessageQueue.c ****       q->tail = NULL;
 137:source/HvMessageQueue.c ****     } else {
 138:source/HvMessageQueue.c ****       q->head->prev = NULL;
 139:source/HvMessageQueue.c ****     }
 140:source/HvMessageQueue.c ****     n->next = q->pool;
 141:source/HvMessageQueue.c ****     n->prev = NULL;
 142:source/HvMessageQueue.c ****     q->pool = n;
 143:source/HvMessageQueue.c ****   }
 144:source/HvMessageQueue.c **** }
 145:source/HvMessageQueue.c **** 
 146:source/HvMessageQueue.c **** bool mq_removeMessage(HvMessageQueue *q, HvMessage *m, void (*sendMessage)(HeavyContextInterface *,
 147:source/HvMessageQueue.c ****   if (mq_hasMessage(q)) {
 148:source/HvMessageQueue.c ****     if (mq_node_getMessage(q->head) == m) { // msg in head node
 149:source/HvMessageQueue.c ****       // only remove the message if sendMessage is the same as the stored one,
 150:source/HvMessageQueue.c ****       // if the sendMessage argument is NULL, it is not checked and will remove any matching messag
 151:source/HvMessageQueue.c ****       if (sendMessage == NULL || q->head->sendMessage == sendMessage) {
 152:source/HvMessageQueue.c ****         mq_pop(q);
 153:source/HvMessageQueue.c ****         return true;
 154:source/HvMessageQueue.c ****       }
 155:source/HvMessageQueue.c ****     } else {
 156:source/HvMessageQueue.c ****       MessageNode *prevNode = q->head;
 157:source/HvMessageQueue.c ****       MessageNode *currNode = q->head->next;
 158:source/HvMessageQueue.c ****       while ((currNode != NULL) && (currNode->m != m)) {
 159:source/HvMessageQueue.c ****         prevNode = currNode;
 160:source/HvMessageQueue.c ****         currNode = currNode->next;
 161:source/HvMessageQueue.c ****       }
 162:source/HvMessageQueue.c ****       if (currNode != NULL) {
 163:source/HvMessageQueue.c ****         if (sendMessage == NULL || currNode->sendMessage == sendMessage) {
 164:source/HvMessageQueue.c ****           mp_freeMessage(&q->mp, m);
 165:source/HvMessageQueue.c ****           currNode->m = NULL;
 166:source/HvMessageQueue.c ****           currNode->let = 0;
 167:source/HvMessageQueue.c ****           currNode->sendMessage = NULL;
 168:source/HvMessageQueue.c ****           if (currNode == q->tail) { // msg in tail node
 169:source/HvMessageQueue.c ****             prevNode->next = NULL;
 170:source/HvMessageQueue.c ****             q->tail = prevNode;
 171:source/HvMessageQueue.c ****           } else { // msg in middle node
 172:source/HvMessageQueue.c ****             prevNode->next = currNode->next;
 173:source/HvMessageQueue.c ****             currNode->next->prev = prevNode;
 174:source/HvMessageQueue.c ****           }
 175:source/HvMessageQueue.c ****           currNode->next = (q->pool == NULL) ? NULL : q->pool;
 176:source/HvMessageQueue.c ****           currNode->prev = NULL;
 177:source/HvMessageQueue.c ****           q->pool = currNode;
 178:source/HvMessageQueue.c ****           return true;
 179:source/HvMessageQueue.c ****         }
 180:source/HvMessageQueue.c ****       }
 181:source/HvMessageQueue.c ****     }
 182:source/HvMessageQueue.c ****   }
 183:source/HvMessageQueue.c ****   return false;
 184:source/HvMessageQueue.c **** }
 185:source/HvMessageQueue.c **** 
 186:source/HvMessageQueue.c **** void mq_clear(HvMessageQueue *q) {
 175              		.loc 1 186 6 is_stmt 1 view .LVU24
 176              	.LBB65:
 187:source/HvMessageQueue.c ****   while (mq_hasMessage(q)) {
 177              		.loc 1 187 3 view .LVU25
 178              		.loc 1 187 9 view .LVU26
 179              	.LBB55:
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccRdbHuq.s 			page 9


 180              	.LBI50:
  63:source/HvMessageQueue.h ****   return (q->head != NULL);
 181              		.loc 2 63 20 view .LVU27
 182              	.LBB52:
 183              		.loc 2 64 3 view .LVU28
 184              		.loc 2 64 3 is_stmt 0 view .LVU29
 185              	.LBE52:
 186              	.LBE55:
 187              		.loc 1 187 9 view .LVU30
 188 0006 24B3     		cbz	r4, .L13
 189              	.LBE65:
 190              	.LBE68:
  34:source/HvMessageQueue.c **** }
 191              		.loc 1 34 11 view .LVU31
 192 0008 00F10C07 		add	r7, r0, #12
 193              	.LBB69:
 194              	.LBB66:
 195              	.LBB56:
 196              	.LBB57:
 129:source/HvMessageQueue.c **** 
 197              		.loc 1 129 10 view .LVU32
 198 000c 0026     		movs	r6, #0
 199              	.LVL11:
 200              	.L16:
 129:source/HvMessageQueue.c **** 
 201              		.loc 1 129 10 view .LVU33
 202              	.LBE57:
 203              	.LBE56:
 188:source/HvMessageQueue.c ****     mq_pop(q);
 204              		.loc 1 188 5 is_stmt 1 view .LVU34
 205              	.LBB60:
 206              	.LBI56:
 124:source/HvMessageQueue.c ****   if (mq_hasMessage(q)) {
 207              		.loc 1 124 6 view .LVU35
 208              	.LBE60:
 209              	.LBE66:
 210              	.LBE69:
 125:source/HvMessageQueue.c ****     MessageNode *n = q->head;
 211              		.loc 1 125 3 view .LVU36
 212              		.loc 2 64 3 view .LVU37
 213              	.LBB70:
 214              	.LBB67:
 215              	.LBB61:
 216              	.LBB58:
 126:source/HvMessageQueue.c **** 
 217              		.loc 1 126 5 view .LVU38
 128:source/HvMessageQueue.c ****     n->m = NULL;
 218              		.loc 1 128 5 view .LVU39
 219 000e A168     		ldr	r1, [r4, #8]
 220 0010 3846     		mov	r0, r7
 221 0012 FFF7FEFF 		bl	mp_freeMessage
 222              	.LVL12:
 129:source/HvMessageQueue.c **** 
 223              		.loc 1 129 5 view .LVU40
 138:source/HvMessageQueue.c ****     }
 224              		.loc 1 138 7 view .LVU41
 134:source/HvMessageQueue.c ****     if (q->head == NULL) {
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccRdbHuq.s 			page 10


 225              		.loc 1 134 16 is_stmt 0 view .LVU42
 226 0016 6368     		ldr	r3, [r4, #4]
 129:source/HvMessageQueue.c **** 
 227              		.loc 1 129 10 view .LVU43
 228 0018 A660     		str	r6, [r4, #8]
 131:source/HvMessageQueue.c ****     n->sendMessage = NULL;
 229              		.loc 1 131 5 is_stmt 1 view .LVU44
 140:source/HvMessageQueue.c ****     n->prev = NULL;
 230              		.loc 1 140 16 is_stmt 0 view .LVU45
 231 001a AA68     		ldr	r2, [r5, #8]
 132:source/HvMessageQueue.c **** 
 232              		.loc 1 132 20 view .LVU46
 233 001c C4E90366 		strd	r6, r6, [r4, #12]
 134:source/HvMessageQueue.c ****     if (q->head == NULL) {
 234              		.loc 1 134 5 is_stmt 1 view .LVU47
 134:source/HvMessageQueue.c ****     if (q->head == NULL) {
 235              		.loc 1 134 13 is_stmt 0 view .LVU48
 236 0020 2B60     		str	r3, [r5]
 135:source/HvMessageQueue.c ****       q->tail = NULL;
 237              		.loc 1 135 5 is_stmt 1 view .LVU49
 135:source/HvMessageQueue.c ****       q->tail = NULL;
 238              		.loc 1 135 8 is_stmt 0 view .LVU50
 239 0022 2BB1     		cbz	r3, .L26
 138:source/HvMessageQueue.c ****     }
 240              		.loc 1 138 21 view .LVU51
 241 0024 1E60     		str	r6, [r3]
 140:source/HvMessageQueue.c ****     n->prev = NULL;
 242              		.loc 1 140 5 is_stmt 1 view .LVU52
 140:source/HvMessageQueue.c ****     n->prev = NULL;
 243              		.loc 1 140 13 is_stmt 0 view .LVU53
 244 0026 C4E90062 		strd	r6, r2, [r4]
 141:source/HvMessageQueue.c ****     q->pool = n;
 245              		.loc 1 141 5 is_stmt 1 view .LVU54
 142:source/HvMessageQueue.c ****   }
 246              		.loc 1 142 5 view .LVU55
 142:source/HvMessageQueue.c ****   }
 247              		.loc 1 142 13 is_stmt 0 view .LVU56
 248 002a AC60     		str	r4, [r5, #8]
 249              	.LVL13:
 142:source/HvMessageQueue.c ****   }
 250              		.loc 1 142 13 view .LVU57
 251              	.LBE58:
 252              	.LBE61:
 187:source/HvMessageQueue.c ****     mq_pop(q);
 253              		.loc 1 187 9 is_stmt 1 view .LVU58
 254              	.LBB62:
  63:source/HvMessageQueue.h ****   return (q->head != NULL);
 255              		.loc 2 63 20 view .LVU59
 256              	.LBB53:
 257              		.loc 2 64 3 view .LVU60
 258              		.loc 2 64 3 is_stmt 0 view .LVU61
 259              	.LBE53:
 260              	.LBE62:
 261              	.LBB63:
 262              	.LBB59:
 142:source/HvMessageQueue.c ****   }
 263              		.loc 1 142 13 view .LVU62
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccRdbHuq.s 			page 11


 264 002c 1C46     		mov	r4, r3
 265              	.LVL14:
 142:source/HvMessageQueue.c ****   }
 266              		.loc 1 142 13 view .LVU63
 267 002e EEE7     		b	.L16
 268              	.LVL15:
 269              	.L26:
 136:source/HvMessageQueue.c ****     } else {
 270              		.loc 1 136 7 is_stmt 1 view .LVU64
 136:source/HvMessageQueue.c ****     } else {
 271              		.loc 1 136 15 is_stmt 0 view .LVU65
 272 0030 6B60     		str	r3, [r5, #4]
 140:source/HvMessageQueue.c ****     n->prev = NULL;
 273              		.loc 1 140 5 is_stmt 1 view .LVU66
 140:source/HvMessageQueue.c ****     n->prev = NULL;
 274              		.loc 1 140 13 is_stmt 0 view .LVU67
 275 0032 C4E90032 		strd	r3, r2, [r4]
 141:source/HvMessageQueue.c ****     q->pool = n;
 276              		.loc 1 141 5 is_stmt 1 view .LVU68
 142:source/HvMessageQueue.c ****   }
 277              		.loc 1 142 5 view .LVU69
 278              	.LVL16:
 142:source/HvMessageQueue.c ****   }
 279              		.loc 1 142 5 is_stmt 0 view .LVU70
 280              	.LBE59:
 281              	.LBE63:
 187:source/HvMessageQueue.c ****     mq_pop(q);
 282              		.loc 1 187 9 is_stmt 1 view .LVU71
 283              	.LBB64:
  63:source/HvMessageQueue.h ****   return (q->head != NULL);
 284              		.loc 2 63 20 view .LVU72
 285              	.LBB54:
 286              		.loc 2 64 3 view .LVU73
 287              		.loc 2 64 3 is_stmt 0 view .LVU74
 288              	.LBE54:
 289              	.LBE64:
 290              	.LBE67:
 291              	.LBE70:
  29:source/HvMessageQueue.c ****     MessageNode *n = q->pool;
 292              		.loc 1 29 9 is_stmt 1 view .LVU75
 293 0036 00E0     		b	.L19
 294              	.LVL17:
 295              	.L24:
 296              	.LBB71:
  31:source/HvMessageQueue.c ****     hv_free(n);
 297              		.loc 1 31 22 is_stmt 0 view .LVU76
 298 0038 6268     		ldr	r2, [r4, #4]
 299              	.L19:
  30:source/HvMessageQueue.c ****     q->pool = q->pool->next;
 300              		.loc 1 30 5 is_stmt 1 view .LVU77
 301              	.LVL18:
  31:source/HvMessageQueue.c ****     hv_free(n);
 302              		.loc 1 31 5 view .LVU78
  32:source/HvMessageQueue.c ****   }
 303              		.loc 1 32 5 is_stmt 0 view .LVU79
 304 003a 2046     		mov	r0, r4
  31:source/HvMessageQueue.c ****     hv_free(n);
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccRdbHuq.s 			page 12


 305              		.loc 1 31 13 view .LVU80
 306 003c AA60     		str	r2, [r5, #8]
  32:source/HvMessageQueue.c ****   }
 307              		.loc 1 32 5 is_stmt 1 view .LVU81
 308 003e FFF7FEFF 		bl	free
 309              	.LVL19:
 310              	.LBE71:
  29:source/HvMessageQueue.c ****     MessageNode *n = q->pool;
 311              		.loc 1 29 9 view .LVU82
  29:source/HvMessageQueue.c ****     MessageNode *n = q->pool;
 312              		.loc 1 29 11 is_stmt 0 view .LVU83
 313 0042 AC68     		ldr	r4, [r5, #8]
 314              	.LVL20:
  29:source/HvMessageQueue.c ****     MessageNode *n = q->pool;
 315              		.loc 1 29 9 view .LVU84
 316 0044 002C     		cmp	r4, #0
 317 0046 F7D1     		bne	.L24
  34:source/HvMessageQueue.c **** }
 318              		.loc 1 34 3 is_stmt 1 view .LVU85
 319 0048 3846     		mov	r0, r7
  35:source/HvMessageQueue.c **** 
 320              		.loc 1 35 1 is_stmt 0 view .LVU86
 321 004a BDE8F840 		pop	{r3, r4, r5, r6, r7, lr}
 322              		.cfi_remember_state
 323              		.cfi_restore 14
 324              		.cfi_restore 7
 325              		.cfi_restore 6
 326              		.cfi_restore 5
 327              		.cfi_restore 4
 328              		.cfi_restore 3
 329              		.cfi_def_cfa_offset 0
 330              	.LVL21:
  34:source/HvMessageQueue.c **** }
 331              		.loc 1 34 3 view .LVU87
 332 004e FFF7FEBF 		b	mp_free
 333              	.LVL22:
 334              	.L13:
 335              		.cfi_restore_state
  29:source/HvMessageQueue.c ****     MessageNode *n = q->pool;
 336              		.loc 1 29 9 is_stmt 1 view .LVU88
  29:source/HvMessageQueue.c ****     MessageNode *n = q->pool;
 337              		.loc 1 29 11 is_stmt 0 view .LVU89
 338 0052 8468     		ldr	r4, [r0, #8]
  34:source/HvMessageQueue.c **** }
 339              		.loc 1 34 11 view .LVU90
 340 0054 00F10C07 		add	r7, r0, #12
  29:source/HvMessageQueue.c ****     MessageNode *n = q->pool;
 341              		.loc 1 29 9 view .LVU91
 342 0058 002C     		cmp	r4, #0
 343 005a EDD1     		bne	.L24
  34:source/HvMessageQueue.c **** }
 344              		.loc 1 34 3 is_stmt 1 view .LVU92
 345 005c 3846     		mov	r0, r7
 346              	.LVL23:
  35:source/HvMessageQueue.c **** 
 347              		.loc 1 35 1 is_stmt 0 view .LVU93
 348 005e BDE8F840 		pop	{r3, r4, r5, r6, r7, lr}
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccRdbHuq.s 			page 13


 349              		.cfi_restore 14
 350              		.cfi_restore 7
 351              		.cfi_restore 6
 352              		.cfi_restore 5
 353              		.cfi_restore 4
 354              		.cfi_restore 3
 355              		.cfi_def_cfa_offset 0
 356              	.LVL24:
  34:source/HvMessageQueue.c **** }
 357              		.loc 1 34 3 view .LVU94
 358 0062 FFF7FEBF 		b	mp_free
 359              	.LVL25:
  34:source/HvMessageQueue.c **** }
 360              		.loc 1 34 3 view .LVU95
 361              		.cfi_endproc
 362              	.LFE351:
 364 0066 00BF     		.section	.text.mq_size,"ax",%progbits
 365              		.align	1
 366              		.p2align 2,,3
 367              		.global	mq_size
 368              		.syntax unified
 369              		.thumb
 370              		.thumb_func
 372              	mq_size:
 373              	.LVL26:
 374              	.LFB353:
  49:source/HvMessageQueue.c ****   int size = 0;
 375              		.loc 1 49 32 is_stmt 1 view -0
 376              		.cfi_startproc
 377              		@ args = 0, pretend = 0, frame = 0
 378              		@ frame_needed = 0, uses_anonymous_args = 0
 379              		@ link register save eliminated.
  50:source/HvMessageQueue.c ****   MessageNode *n = q->head;
 380              		.loc 1 50 3 view .LVU97
  51:source/HvMessageQueue.c ****   while (n != NULL) {
 381              		.loc 1 51 3 view .LVU98
  51:source/HvMessageQueue.c ****   while (n != NULL) {
 382              		.loc 1 51 16 is_stmt 0 view .LVU99
 383 0000 0368     		ldr	r3, [r0]
 384              	.LVL27:
  52:source/HvMessageQueue.c ****     ++size;
 385              		.loc 1 52 3 is_stmt 1 view .LVU100
  52:source/HvMessageQueue.c ****     ++size;
 386              		.loc 1 52 9 view .LVU101
 387 0002 2BB1     		cbz	r3, .L30
  50:source/HvMessageQueue.c ****   MessageNode *n = q->head;
 388              		.loc 1 50 7 is_stmt 0 view .LVU102
 389 0004 0020     		movs	r0, #0
 390              	.LVL28:
 391              	.L29:
  53:source/HvMessageQueue.c ****     n = n->next;
 392              		.loc 1 53 5 is_stmt 1 view .LVU103
  54:source/HvMessageQueue.c ****   }
 393              		.loc 1 54 7 is_stmt 0 view .LVU104
 394 0006 5B68     		ldr	r3, [r3, #4]
 395              	.LVL29:
  53:source/HvMessageQueue.c ****     n = n->next;
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccRdbHuq.s 			page 14


 396              		.loc 1 53 5 view .LVU105
 397 0008 0130     		adds	r0, r0, #1
 398              	.LVL30:
  54:source/HvMessageQueue.c ****   }
 399              		.loc 1 54 5 is_stmt 1 view .LVU106
  52:source/HvMessageQueue.c ****     ++size;
 400              		.loc 1 52 9 view .LVU107
 401 000a 002B     		cmp	r3, #0
 402 000c FBD1     		bne	.L29
 403 000e 7047     		bx	lr
 404              	.LVL31:
 405              	.L30:
  50:source/HvMessageQueue.c ****   MessageNode *n = q->head;
 406              		.loc 1 50 7 is_stmt 0 view .LVU108
 407 0010 1846     		mov	r0, r3
 408              	.LVL32:
  56:source/HvMessageQueue.c **** }
 409              		.loc 1 56 3 is_stmt 1 view .LVU109
  57:source/HvMessageQueue.c **** 
 410              		.loc 1 57 1 is_stmt 0 view .LVU110
 411 0012 7047     		bx	lr
 412              		.cfi_endproc
 413              	.LFE353:
 415              		.section	.text.mq_addMessage,"ax",%progbits
 416              		.align	1
 417              		.p2align 2,,3
 418              		.global	mq_addMessage
 419              		.syntax unified
 420              		.thumb
 421              		.thumb_func
 423              	mq_addMessage:
 424              	.LVL33:
 425              	.LFB354:
  60:source/HvMessageQueue.c ****   MessageNode *node = mq_getOrCreateNodeFromPool(q);
 426              		.loc 1 60 75 is_stmt 1 view -0
 427              		.cfi_startproc
 428              		@ args = 0, pretend = 0, frame = 8
 429              		@ frame_needed = 0, uses_anonymous_args = 0
  61:source/HvMessageQueue.c ****   node->m = mp_addMessage(&q->mp, m);
 430              		.loc 1 61 3 view .LVU112
 431              	.LBB74:
 432              	.LBI74:
  37:source/HvMessageQueue.c ****   if (q->pool == NULL) {
 433              		.loc 1 37 21 view .LVU113
 434              	.LBB75:
  38:source/HvMessageQueue.c ****     // if necessary, create a new empty node
 435              		.loc 1 38 3 view .LVU114
 436              	.LBE75:
 437              	.LBE74:
  60:source/HvMessageQueue.c ****   MessageNode *node = mq_getOrCreateNodeFromPool(q);
 438              		.loc 1 60 75 is_stmt 0 view .LVU115
 439 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 440              		.cfi_def_cfa_offset 20
 441              		.cfi_offset 4, -20
 442              		.cfi_offset 5, -16
 443              		.cfi_offset 6, -12
 444              		.cfi_offset 7, -8
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccRdbHuq.s 			page 15


 445              		.cfi_offset 14, -4
 446              	.LBB79:
 447              	.LBB76:
  38:source/HvMessageQueue.c ****     // if necessary, create a new empty node
 448              		.loc 1 38 8 view .LVU116
 449 0002 8468     		ldr	r4, [r0, #8]
 450              	.LBE76:
 451              	.LBE79:
  60:source/HvMessageQueue.c ****   MessageNode *node = mq_getOrCreateNodeFromPool(q);
 452              		.loc 1 60 75 view .LVU117
 453 0004 83B0     		sub	sp, sp, #12
 454              		.cfi_def_cfa_offset 32
  60:source/HvMessageQueue.c ****   MessageNode *node = mq_getOrCreateNodeFromPool(q);
 455              		.loc 1 60 75 view .LVU118
 456 0006 0546     		mov	r5, r0
 457 0008 1746     		mov	r7, r2
 458 000a 1E46     		mov	r6, r3
 459              	.LBB80:
 460              	.LBB77:
  38:source/HvMessageQueue.c ****     // if necessary, create a new empty node
 461              		.loc 1 38 6 view .LVU119
 462 000c B4B1     		cbz	r4, .L33
  45:source/HvMessageQueue.c ****   return node;
 463              		.loc 1 45 20 view .LVU120
 464 000e 6368     		ldr	r3, [r4, #4]
 465              	.LVL34:
 466              	.L34:
  44:source/HvMessageQueue.c ****   q->pool = q->pool->next;
 467              		.loc 1 44 3 is_stmt 1 view .LVU121
  45:source/HvMessageQueue.c ****   return node;
 468              		.loc 1 45 3 view .LVU122
  45:source/HvMessageQueue.c ****   return node;
 469              		.loc 1 45 11 is_stmt 0 view .LVU123
 470 0010 AB60     		str	r3, [r5, #8]
 471              	.LVL35:
  46:source/HvMessageQueue.c **** }
 472              		.loc 1 46 3 is_stmt 1 view .LVU124
  46:source/HvMessageQueue.c **** }
 473              		.loc 1 46 3 is_stmt 0 view .LVU125
 474              	.LBE77:
 475              	.LBE80:
  62:source/HvMessageQueue.c ****   node->let = let;
 476              		.loc 1 62 3 is_stmt 1 view .LVU126
  62:source/HvMessageQueue.c ****   node->let = let;
 477              		.loc 1 62 13 is_stmt 0 view .LVU127
 478 0012 05F10C00 		add	r0, r5, #12
 479 0016 FFF7FEFF 		bl	mp_addMessage
 480              	.LVL36:
  65:source/HvMessageQueue.c ****   node->next = NULL;
 481              		.loc 1 65 14 view .LVU128
 482 001a 0022     		movs	r2, #0
  68:source/HvMessageQueue.c ****     // the list already contains elements
 483              		.loc 1 68 8 view .LVU129
 484 001c 6B68     		ldr	r3, [r5, #4]
  63:source/HvMessageQueue.c ****   node->sendMessage = sendMessage;
 485              		.loc 1 63 13 view .LVU130
 486 001e 2761     		str	r7, [r4, #16]
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccRdbHuq.s 			page 16


  64:source/HvMessageQueue.c ****   node->prev = NULL;
 487              		.loc 1 64 21 view .LVU131
 488 0020 E660     		str	r6, [r4, #12]
  62:source/HvMessageQueue.c ****   node->let = let;
 489              		.loc 1 62 11 view .LVU132
 490 0022 A060     		str	r0, [r4, #8]
  63:source/HvMessageQueue.c ****   node->sendMessage = sendMessage;
 491              		.loc 1 63 3 is_stmt 1 view .LVU133
  64:source/HvMessageQueue.c ****   node->prev = NULL;
 492              		.loc 1 64 3 view .LVU134
  65:source/HvMessageQueue.c ****   node->next = NULL;
 493              		.loc 1 65 3 view .LVU135
  66:source/HvMessageQueue.c **** 
 494              		.loc 1 66 3 view .LVU136
  68:source/HvMessageQueue.c ****     // the list already contains elements
 495              		.loc 1 68 3 view .LVU137
  66:source/HvMessageQueue.c **** 
 496              		.loc 1 66 14 is_stmt 0 view .LVU138
 497 0024 C4E90022 		strd	r2, r2, [r4]
  68:source/HvMessageQueue.c ****     // the list already contains elements
 498              		.loc 1 68 6 view .LVU139
 499 0028 23B1     		cbz	r3, .L36
  70:source/HvMessageQueue.c ****     node->prev = q->tail;
 500              		.loc 1 70 5 is_stmt 1 view .LVU140
  70:source/HvMessageQueue.c ****     node->prev = q->tail;
 501              		.loc 1 70 19 is_stmt 0 view .LVU141
 502 002a 5C60     		str	r4, [r3, #4]
  71:source/HvMessageQueue.c ****     q->tail = node;
 503              		.loc 1 71 5 is_stmt 1 view .LVU142
  71:source/HvMessageQueue.c ****     q->tail = node;
 504              		.loc 1 71 16 is_stmt 0 view .LVU143
 505 002c 2360     		str	r3, [r4]
  72:source/HvMessageQueue.c ****   } else {
 506              		.loc 1 72 5 is_stmt 1 view .LVU144
  72:source/HvMessageQueue.c ****   } else {
 507              		.loc 1 72 13 is_stmt 0 view .LVU145
 508 002e 6C60     		str	r4, [r5, #4]
  80:source/HvMessageQueue.c **** 
 509              		.loc 1 80 1 view .LVU146
 510 0030 03B0     		add	sp, sp, #12
 511              		.cfi_remember_state
 512              		.cfi_def_cfa_offset 20
 513              		@ sp needed
 514 0032 F0BD     		pop	{r4, r5, r6, r7, pc}
 515              	.LVL37:
 516              	.L36:
 517              		.cfi_restore_state
  75:source/HvMessageQueue.c ****     q->head = node;
 518              		.loc 1 75 5 is_stmt 1 view .LVU147
  76:source/HvMessageQueue.c ****     q->tail = node;
 519              		.loc 1 76 5 view .LVU148
  77:source/HvMessageQueue.c ****   }
 520              		.loc 1 77 13 is_stmt 0 view .LVU149
 521 0034 C5E90044 		strd	r4, r4, [r5]
  79:source/HvMessageQueue.c **** }
 522              		.loc 1 79 3 is_stmt 1 view .LVU150
 523              	.LVL38:
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccRdbHuq.s 			page 17


  56:source/HvMessageQueue.h **** }
 524              		.loc 2 56 3 view .LVU151
  80:source/HvMessageQueue.c **** 
 525              		.loc 1 80 1 is_stmt 0 view .LVU152
 526 0038 03B0     		add	sp, sp, #12
 527              		.cfi_remember_state
 528              		.cfi_def_cfa_offset 20
 529              		@ sp needed
 530 003a F0BD     		pop	{r4, r5, r6, r7, pc}
 531              	.LVL39:
 532              	.L33:
 533              		.cfi_restore_state
 534              	.LBB81:
 535              	.LBB78:
  40:source/HvMessageQueue.c ****     hv_assert(q->pool != NULL);
 536              		.loc 1 40 5 is_stmt 1 view .LVU153
  40:source/HvMessageQueue.c ****     hv_assert(q->pool != NULL);
 537              		.loc 1 40 31 is_stmt 0 view .LVU154
 538 003c 1420     		movs	r0, #20
 539              	.LVL40:
  40:source/HvMessageQueue.c ****     hv_assert(q->pool != NULL);
 540              		.loc 1 40 31 view .LVU155
 541 003e 0191     		str	r1, [sp, #4]
 542 0040 FFF7FEFF 		bl	malloc
 543              	.LVL41:
  41:source/HvMessageQueue.c ****     q->pool->next = NULL;
 544              		.loc 1 41 5 view .LVU156
 545 0044 0199     		ldr	r1, [sp, #4]
  40:source/HvMessageQueue.c ****     hv_assert(q->pool != NULL);
 546              		.loc 1 40 13 view .LVU157
 547 0046 A860     		str	r0, [r5, #8]
  41:source/HvMessageQueue.c ****     q->pool->next = NULL;
 548              		.loc 1 41 5 is_stmt 1 view .LVU158
 549 0048 18B1     		cbz	r0, .L39
  42:source/HvMessageQueue.c ****   }
 550              		.loc 1 42 5 view .LVU159
  42:source/HvMessageQueue.c ****   }
 551              		.loc 1 42 19 is_stmt 0 view .LVU160
 552 004a 2346     		mov	r3, r4
 553 004c 4460     		str	r4, [r0, #4]
 554 004e 0446     		mov	r4, r0
 555 0050 DEE7     		b	.L34
 556              	.L39:
 557 0052 FFF7FEFF 		bl	mq_getOrCreateNodeFromPool.part.0
 558              	.LVL42:
 559              	.LBE78:
 560              	.LBE81:
 561              		.cfi_endproc
 562              	.LFE354:
 564 0056 00BF     		.section	.text.mq_addMessageByTimestamp,"ax",%progbits
 565              		.align	1
 566              		.p2align 2,,3
 567              		.global	mq_addMessageByTimestamp
 568              		.syntax unified
 569              		.thumb
 570              		.thumb_func
 572              	mq_addMessageByTimestamp:
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccRdbHuq.s 			page 18


 573              	.LVL43:
 574              	.LFB355:
  83:source/HvMessageQueue.c ****   if (mq_hasMessage(q)) {
 575              		.loc 1 83 75 is_stmt 1 view -0
 576              		.cfi_startproc
 577              		@ args = 0, pretend = 0, frame = 0
 578              		@ frame_needed = 0, uses_anonymous_args = 0
  84:source/HvMessageQueue.c ****     MessageNode *n = mq_getOrCreateNodeFromPool(q);
 579              		.loc 1 84 3 view .LVU162
 580              	.LBB97:
 581              	.LBI97:
  63:source/HvMessageQueue.h ****   return (q->head != NULL);
 582              		.loc 2 63 20 view .LVU163
 583              	.LBB98:
 584              		.loc 2 64 3 view .LVU164
 585              		.loc 2 64 3 is_stmt 0 view .LVU165
 586              	.LBE98:
 587              	.LBE97:
  83:source/HvMessageQueue.c ****   if (mq_hasMessage(q)) {
 588              		.loc 1 83 75 view .LVU166
 589 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 590              		.cfi_def_cfa_offset 24
 591              		.cfi_offset 4, -24
 592              		.cfi_offset 5, -20
 593              		.cfi_offset 6, -16
 594              		.cfi_offset 7, -12
 595              		.cfi_offset 8, -8
 596              		.cfi_offset 14, -4
  84:source/HvMessageQueue.c ****     MessageNode *n = mq_getOrCreateNodeFromPool(q);
 597              		.loc 1 84 6 view .LVU167
 598 0004 0568     		ldr	r5, [r0]
 599 0006 002D     		cmp	r5, #0
 600 0008 35D0     		beq	.L41
 601              	.LBB99:
  85:source/HvMessageQueue.c ****     n->m = mp_addMessage(&q->mp, m);
 602              		.loc 1 85 5 is_stmt 1 view .LVU168
 603              	.LVL44:
 604              	.LBB100:
 605              	.LBI100:
  37:source/HvMessageQueue.c ****   if (q->pool == NULL) {
 606              		.loc 1 37 21 view .LVU169
 607              	.LBB101:
  38:source/HvMessageQueue.c ****     // if necessary, create a new empty node
 608              		.loc 1 38 3 view .LVU170
  38:source/HvMessageQueue.c ****     // if necessary, create a new empty node
 609              		.loc 1 38 8 is_stmt 0 view .LVU171
 610 000a 8568     		ldr	r5, [r0, #8]
 611 000c 0446     		mov	r4, r0
 612 000e 0E46     		mov	r6, r1
 613 0010 9046     		mov	r8, r2
 614 0012 1F46     		mov	r7, r3
  38:source/HvMessageQueue.c ****     // if necessary, create a new empty node
 615              		.loc 1 38 6 view .LVU172
 616 0014 002D     		cmp	r5, #0
 617 0016 32D0     		beq	.L42
  45:source/HvMessageQueue.c ****   return node;
 618              		.loc 1 45 20 view .LVU173
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccRdbHuq.s 			page 19


 619 0018 6B68     		ldr	r3, [r5, #4]
 620              	.LVL45:
 621              	.L43:
  44:source/HvMessageQueue.c ****   q->pool = q->pool->next;
 622              		.loc 1 44 3 is_stmt 1 view .LVU174
  45:source/HvMessageQueue.c ****   return node;
 623              		.loc 1 45 3 view .LVU175
 624              	.LBE101:
 625              	.LBE100:
  86:source/HvMessageQueue.c ****     n->let = let;
 626              		.loc 1 86 12 is_stmt 0 view .LVU176
 627 001a 3146     		mov	r1, r6
 628              	.LBB104:
 629              	.LBB102:
  45:source/HvMessageQueue.c ****   return node;
 630              		.loc 1 45 11 view .LVU177
 631 001c A360     		str	r3, [r4, #8]
 632              	.LVL46:
  46:source/HvMessageQueue.c **** }
 633              		.loc 1 46 3 is_stmt 1 view .LVU178
  46:source/HvMessageQueue.c **** }
 634              		.loc 1 46 3 is_stmt 0 view .LVU179
 635              	.LBE102:
 636              	.LBE104:
  86:source/HvMessageQueue.c ****     n->let = let;
 637              		.loc 1 86 5 is_stmt 1 view .LVU180
  86:source/HvMessageQueue.c ****     n->let = let;
 638              		.loc 1 86 12 is_stmt 0 view .LVU181
 639 001e 04F10C00 		add	r0, r4, #12
 640 0022 FFF7FEFF 		bl	mp_addMessage
 641              	.LVL47:
  90:source/HvMessageQueue.c ****       // the message occurs before the current head
 642              		.loc 1 90 49 view .LVU182
 643 0026 2368     		ldr	r3, [r4]
 644              	.LBB105:
 645              	.LBB106:
 646              		.file 3 "source/HvMessage.h"
   1:source/HvMessage.h **** /**
   2:source/HvMessage.h ****  * Copyright (c) 2014-2018 Enzien Audio Ltd.
   3:source/HvMessage.h ****  *
   4:source/HvMessage.h ****  * Permission to use, copy, modify, and/or distribute this software for any
   5:source/HvMessage.h ****  * purpose with or without fee is hereby granted, provided that the above
   6:source/HvMessage.h ****  * copyright notice and this permission notice appear in all copies.
   7:source/HvMessage.h ****  *
   8:source/HvMessage.h ****  * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
   9:source/HvMessage.h ****  * REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
  10:source/HvMessage.h ****  * AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
  11:source/HvMessage.h ****  * INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
  12:source/HvMessage.h ****  * LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
  13:source/HvMessage.h ****  * OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
  14:source/HvMessage.h ****  * PERFORMANCE OF THIS SOFTWARE.
  15:source/HvMessage.h ****  */
  16:source/HvMessage.h **** 
  17:source/HvMessage.h **** #ifndef _HEAVY_MESSAGE_H_
  18:source/HvMessage.h **** #define _HEAVY_MESSAGE_H_
  19:source/HvMessage.h **** 
  20:source/HvMessage.h **** #include "HvUtils.h"
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccRdbHuq.s 			page 20


  21:source/HvMessage.h **** 
  22:source/HvMessage.h **** #ifdef __cplusplus
  23:source/HvMessage.h **** extern "C" {
  24:source/HvMessage.h **** #endif
  25:source/HvMessage.h **** 
  26:source/HvMessage.h **** typedef enum ElementType {
  27:source/HvMessage.h ****   HV_MSG_BANG = 0,
  28:source/HvMessage.h ****   HV_MSG_FLOAT = 1,
  29:source/HvMessage.h ****   HV_MSG_SYMBOL = 2,
  30:source/HvMessage.h ****   HV_MSG_HASH = 3
  31:source/HvMessage.h **** } ElementType;
  32:source/HvMessage.h **** 
  33:source/HvMessage.h **** typedef struct Element {
  34:source/HvMessage.h ****   ElementType type;
  35:source/HvMessage.h ****   union {
  36:source/HvMessage.h ****     float f; // float
  37:source/HvMessage.h ****     const char *s; // symbol
  38:source/HvMessage.h ****     hv_uint32_t h; // hash
  39:source/HvMessage.h ****   } data;
  40:source/HvMessage.h **** } Element;
  41:source/HvMessage.h **** 
  42:source/HvMessage.h **** typedef struct HvMessage {
  43:source/HvMessage.h ****   hv_uint32_t timestamp; // the sample at which this message should be processed
  44:source/HvMessage.h ****   hv_uint16_t numElements;
  45:source/HvMessage.h ****   hv_uint16_t numBytes; // the total number of bytes that this message occupies in memory, includin
  46:source/HvMessage.h ****   Element elem;
  47:source/HvMessage.h **** } HvMessage;
  48:source/HvMessage.h **** 
  49:source/HvMessage.h **** typedef struct ReceiverMessagePair {
  50:source/HvMessage.h ****   hv_uint32_t receiverHash;
  51:source/HvMessage.h ****   HvMessage msg;
  52:source/HvMessage.h **** } ReceiverMessagePair;
  53:source/HvMessage.h **** 
  54:source/HvMessage.h **** #define HV_MESSAGE_ON_STACK(_x) (HvMessage *) hv_alloca(msg_getCoreSize(_x))
  55:source/HvMessage.h **** 
  56:source/HvMessage.h **** /** Returns the number of bytes that this message consumes in memory, not including strings. */
  57:source/HvMessage.h **** static inline hv_size_t msg_getCoreSize(hv_size_t numElements) {
  58:source/HvMessage.h ****   hv_assert(numElements > 0);
  59:source/HvMessage.h ****   return sizeof(HvMessage) + ((numElements-1) * sizeof(Element));
  60:source/HvMessage.h **** }
  61:source/HvMessage.h **** 
  62:source/HvMessage.h **** HvMessage *msg_copy(const HvMessage *m);
  63:source/HvMessage.h **** 
  64:source/HvMessage.h **** /** Copies the message into the given buffer. The buffer must be at least as large as msg_getNumHea
  65:source/HvMessage.h **** void msg_copyToBuffer(const HvMessage *m, char *buffer, hv_size_t len);
  66:source/HvMessage.h **** 
  67:source/HvMessage.h **** void msg_setElementToFrom(HvMessage *n, int indexN, const HvMessage *const m, int indexM);
  68:source/HvMessage.h **** 
  69:source/HvMessage.h **** /** Frees a message on the heap. Does nothing if argument is NULL. */
  70:source/HvMessage.h **** void msg_free(HvMessage *m);
  71:source/HvMessage.h **** 
  72:source/HvMessage.h **** HvMessage *msg_init(HvMessage *m, hv_size_t numElements, hv_uint32_t timestamp);
  73:source/HvMessage.h **** 
  74:source/HvMessage.h **** HvMessage *msg_initWithFloat(HvMessage *m, hv_uint32_t timestamp, float f);
  75:source/HvMessage.h **** 
  76:source/HvMessage.h **** HvMessage *msg_initWithBang(HvMessage *m, hv_uint32_t timestamp);
  77:source/HvMessage.h **** 
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccRdbHuq.s 			page 21


  78:source/HvMessage.h **** HvMessage *msg_initWithSymbol(HvMessage *m, hv_uint32_t timestamp, const char *s);
  79:source/HvMessage.h **** 
  80:source/HvMessage.h **** HvMessage *msg_initWithHash(HvMessage *m, hv_uint32_t timestamp, hv_uint32_t h);
  81:source/HvMessage.h **** 
  82:source/HvMessage.h **** static inline hv_uint32_t msg_getTimestamp(const HvMessage *m) {
  83:source/HvMessage.h ****   return m->timestamp;
 647              		.loc 3 83 11 view .LVU183
 648 0028 3668     		ldr	r6, [r6]
 649              	.LVL48:
 650              		.loc 3 83 11 view .LVU184
 651              	.LBE106:
 652              	.LBE105:
  86:source/HvMessageQueue.c ****     n->let = let;
 653              		.loc 1 86 10 view .LVU185
 654 002a A860     		str	r0, [r5, #8]
  87:source/HvMessageQueue.c ****     n->sendMessage = sendMessage;
 655              		.loc 1 87 5 is_stmt 1 view .LVU186
  88:source/HvMessageQueue.c **** 
 656              		.loc 1 88 5 view .LVU187
  90:source/HvMessageQueue.c ****       // the message occurs before the current head
 657              		.loc 1 90 5 view .LVU188
 658              	.LVL49:
 659              	.LBB108:
 660              	.LBI105:
  82:source/HvMessage.h ****   return m->timestamp;
 661              		.loc 3 82 27 view .LVU189
 662              	.LBB107:
 663              		.loc 3 83 3 view .LVU190
 664              		.loc 3 83 3 is_stmt 0 view .LVU191
 665              	.LBE107:
 666              	.LBE108:
 667              	.LBB109:
 668              	.LBI109:
  82:source/HvMessage.h ****   return m->timestamp;
 669              		.loc 3 82 27 is_stmt 1 view .LVU192
 670              	.LBB110:
 671              		.loc 3 83 3 view .LVU193
 672              		.loc 3 83 11 is_stmt 0 view .LVU194
 673 002c 9A68     		ldr	r2, [r3, #8]
 674              	.LBE110:
 675              	.LBE109:
  87:source/HvMessageQueue.c ****     n->sendMessage = sendMessage;
 676              		.loc 1 87 12 view .LVU195
 677 002e C5F81080 		str	r8, [r5, #16]
  90:source/HvMessageQueue.c ****       // the message occurs before the current head
 678              		.loc 1 90 8 view .LVU196
 679 0032 1268     		ldr	r2, [r2]
  88:source/HvMessageQueue.c **** 
 680              		.loc 1 88 20 view .LVU197
 681 0034 EF60     		str	r7, [r5, #12]
  90:source/HvMessageQueue.c ****       // the message occurs before the current head
 682              		.loc 1 90 8 view .LVU198
 683 0036 9642     		cmp	r6, r2
 684 0038 06D2     		bcs	.L45
  92:source/HvMessageQueue.c ****       q->head->prev = n;
 685              		.loc 1 92 7 is_stmt 1 view .LVU199
  94:source/HvMessageQueue.c ****       q->head = n;
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccRdbHuq.s 			page 22


 686              		.loc 1 94 15 is_stmt 0 view .LVU200
 687 003a 0022     		movs	r2, #0
  92:source/HvMessageQueue.c ****       q->head->prev = n;
 688              		.loc 1 92 15 view .LVU201
 689 003c 6B60     		str	r3, [r5, #4]
  93:source/HvMessageQueue.c ****       n->prev = NULL;
 690              		.loc 1 93 7 is_stmt 1 view .LVU202
  93:source/HvMessageQueue.c ****       n->prev = NULL;
 691              		.loc 1 93 21 is_stmt 0 view .LVU203
 692 003e 1D60     		str	r5, [r3]
  94:source/HvMessageQueue.c ****       q->head = n;
 693              		.loc 1 94 7 is_stmt 1 view .LVU204
  94:source/HvMessageQueue.c ****       q->head = n;
 694              		.loc 1 94 15 is_stmt 0 view .LVU205
 695 0040 2A60     		str	r2, [r5]
  95:source/HvMessageQueue.c ****     } else if (msg_getTimestamp(m) >= msg_getTimestamp(q->tail->m)) {
 696              		.loc 1 95 7 is_stmt 1 view .LVU206
  95:source/HvMessageQueue.c ****     } else if (msg_getTimestamp(m) >= msg_getTimestamp(q->tail->m)) {
 697              		.loc 1 95 15 is_stmt 0 view .LVU207
 698 0042 2560     		str	r5, [r4]
 699              	.L40:
 700              	.LBE99:
 122:source/HvMessageQueue.c **** 
 701              		.loc 1 122 1 view .LVU208
 702 0044 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 703              	.LVL50:
 704              	.L45:
 705              	.LBB119:
  96:source/HvMessageQueue.c ****       // the message occurs after the current tail
 706              		.loc 1 96 12 is_stmt 1 view .LVU209
  96:source/HvMessageQueue.c ****       // the message occurs after the current tail
 707              		.loc 1 96 12 is_stmt 0 view .LVU210
 708              	.LBE119:
 709              		.loc 3 83 3 is_stmt 1 view .LVU211
 710              	.LBB120:
  96:source/HvMessageQueue.c ****       // the message occurs after the current tail
 711              		.loc 1 96 57 is_stmt 0 view .LVU212
 712 0048 6268     		ldr	r2, [r4, #4]
 713              	.LVL51:
 714              	.LBB111:
 715              	.LBI111:
  82:source/HvMessage.h ****   return m->timestamp;
 716              		.loc 3 82 27 is_stmt 1 view .LVU213
 717              	.LBB112:
 718              		.loc 3 83 3 view .LVU214
 719              		.loc 3 83 11 is_stmt 0 view .LVU215
 720 004a 9168     		ldr	r1, [r2, #8]
 721              	.LBE112:
 722              	.LBE111:
  96:source/HvMessageQueue.c ****       // the message occurs after the current tail
 723              		.loc 1 96 15 view .LVU216
 724 004c 0968     		ldr	r1, [r1]
 725 004e B142     		cmp	r1, r6
 726 0050 06D8     		bhi	.L47
  98:source/HvMessageQueue.c ****       n->prev = q->tail;
 727              		.loc 1 98 7 is_stmt 1 view .LVU217
  98:source/HvMessageQueue.c ****       n->prev = q->tail;
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccRdbHuq.s 			page 23


 728              		.loc 1 98 15 is_stmt 0 view .LVU218
 729 0052 0023     		movs	r3, #0
 730 0054 C5E90023 		strd	r2, r3, [r5]
  99:source/HvMessageQueue.c ****       q->tail->next = n;
 731              		.loc 1 99 7 is_stmt 1 view .LVU219
 100:source/HvMessageQueue.c ****       q->tail = n;
 732              		.loc 1 100 7 view .LVU220
 100:source/HvMessageQueue.c ****       q->tail = n;
 733              		.loc 1 100 21 is_stmt 0 view .LVU221
 734 0058 5560     		str	r5, [r2, #4]
 101:source/HvMessageQueue.c ****     } else {
 735              		.loc 1 101 7 is_stmt 1 view .LVU222
 101:source/HvMessageQueue.c ****     } else {
 736              		.loc 1 101 15 is_stmt 0 view .LVU223
 737 005a 6560     		str	r5, [r4, #4]
 738              	.LBE120:
 122:source/HvMessageQueue.c **** 
 739              		.loc 1 122 1 view .LVU224
 740 005c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 741              	.LVL52:
 742              	.L47:
 743              	.LBB121:
 744              	.LBB113:
 106:source/HvMessageQueue.c ****           MessageNode *r = node->next;
 745              		.loc 1 106 9 is_stmt 1 view .LVU225
 106:source/HvMessageQueue.c ****           MessageNode *r = node->next;
 746              		.loc 1 106 9 is_stmt 0 view .LVU226
 747              	.LBE113:
 748              	.LBE121:
 749              		.loc 3 83 3 is_stmt 1 view .LVU227
 750              		.loc 3 83 3 is_stmt 0 view .LVU228
 751 0060 1946     		mov	r1, r3
 752              	.LBB122:
 753              	.LBB117:
 106:source/HvMessageQueue.c ****           MessageNode *r = node->next;
 754              		.loc 1 106 56 view .LVU229
 755 0062 5B68     		ldr	r3, [r3, #4]
 756              	.LVL53:
 757              	.LBB114:
 758              	.LBI114:
  82:source/HvMessage.h ****   return m->timestamp;
 759              		.loc 3 82 27 is_stmt 1 view .LVU230
 760              	.LBB115:
 761              		.loc 3 83 3 view .LVU231
 762              		.loc 3 83 11 is_stmt 0 view .LVU232
 763 0064 9A68     		ldr	r2, [r3, #8]
 764              	.LBE115:
 765              	.LBE114:
 106:source/HvMessageQueue.c ****           MessageNode *r = node->next;
 766              		.loc 1 106 12 view .LVU233
 767 0066 1268     		ldr	r2, [r2]
 768 0068 B242     		cmp	r2, r6
 769 006a F9D9     		bls	.L47
 770              	.LBB116:
 107:source/HvMessageQueue.c ****           node->next = n;
 771              		.loc 1 107 11 is_stmt 1 view .LVU234
 772              	.LVL54:
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccRdbHuq.s 			page 24


 108:source/HvMessageQueue.c ****           n->next = r;
 773              		.loc 1 108 11 view .LVU235
 108:source/HvMessageQueue.c ****           n->next = r;
 774              		.loc 1 108 22 is_stmt 0 view .LVU236
 775 006c 4D60     		str	r5, [r1, #4]
 109:source/HvMessageQueue.c ****           n->prev = node;
 776              		.loc 1 109 11 is_stmt 1 view .LVU237
 110:source/HvMessageQueue.c ****           r->prev = n;
 777              		.loc 1 110 19 is_stmt 0 view .LVU238
 778 006e C5E90013 		strd	r1, r3, [r5]
 111:source/HvMessageQueue.c ****           break;
 779              		.loc 1 111 11 is_stmt 1 view .LVU239
 111:source/HvMessageQueue.c ****           break;
 780              		.loc 1 111 19 is_stmt 0 view .LVU240
 781 0072 1D60     		str	r5, [r3]
 112:source/HvMessageQueue.c ****         }
 782              		.loc 1 112 11 is_stmt 1 view .LVU241
 783 0074 E6E7     		b	.L40
 784              	.LVL55:
 785              	.L41:
 112:source/HvMessageQueue.c ****         }
 786              		.loc 1 112 11 is_stmt 0 view .LVU242
 787              	.LBE116:
 788              	.LBE117:
 789              	.LBE122:
 120:source/HvMessageQueue.c ****   }
 790              		.loc 1 120 5 is_stmt 1 view .LVU243
 122:source/HvMessageQueue.c **** 
 791              		.loc 1 122 1 is_stmt 0 view .LVU244
 792 0076 BDE8F041 		pop	{r4, r5, r6, r7, r8, lr}
 793              		.cfi_remember_state
 794              		.cfi_restore 14
 795              		.cfi_restore 8
 796              		.cfi_restore 7
 797              		.cfi_restore 6
 798              		.cfi_restore 5
 799              		.cfi_restore 4
 800              		.cfi_def_cfa_offset 0
 120:source/HvMessageQueue.c ****   }
 801              		.loc 1 120 12 view .LVU245
 802 007a FFF7FEBF 		b	mq_addMessage
 803              	.LVL56:
 804              	.L42:
 805              		.cfi_restore_state
 806              	.LBB123:
 807              	.LBB118:
 808              	.LBB103:
  40:source/HvMessageQueue.c ****     hv_assert(q->pool != NULL);
 809              		.loc 1 40 5 is_stmt 1 view .LVU246
  40:source/HvMessageQueue.c ****     hv_assert(q->pool != NULL);
 810              		.loc 1 40 31 is_stmt 0 view .LVU247
 811 007e 1420     		movs	r0, #20
 812              	.LVL57:
  40:source/HvMessageQueue.c ****     hv_assert(q->pool != NULL);
 813              		.loc 1 40 31 view .LVU248
 814 0080 FFF7FEFF 		bl	malloc
 815              	.LVL58:
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccRdbHuq.s 			page 25


  40:source/HvMessageQueue.c ****     hv_assert(q->pool != NULL);
 816              		.loc 1 40 13 view .LVU249
 817 0084 A060     		str	r0, [r4, #8]
  41:source/HvMessageQueue.c ****     q->pool->next = NULL;
 818              		.loc 1 41 5 is_stmt 1 view .LVU250
 819 0086 18B1     		cbz	r0, .L51
  42:source/HvMessageQueue.c ****   }
 820              		.loc 1 42 5 view .LVU251
  42:source/HvMessageQueue.c ****   }
 821              		.loc 1 42 19 is_stmt 0 view .LVU252
 822 0088 2B46     		mov	r3, r5
 823 008a 4560     		str	r5, [r0, #4]
 824 008c 0546     		mov	r5, r0
 825 008e C4E7     		b	.L43
 826              	.L51:
 827 0090 FFF7FEFF 		bl	mq_getOrCreateNodeFromPool.part.0
 828              	.LVL59:
 829              	.LBE103:
 830              	.LBE118:
 831              	.LBE123:
 832              		.cfi_endproc
 833              	.LFE355:
 835              		.section	.text.mq_pop,"ax",%progbits
 836              		.align	1
 837              		.p2align 2,,3
 838              		.global	mq_pop
 839              		.syntax unified
 840              		.thumb
 841              		.thumb_func
 843              	mq_pop:
 844              	.LVL60:
 845              	.LFB356:
 124:source/HvMessageQueue.c ****   if (mq_hasMessage(q)) {
 846              		.loc 1 124 32 is_stmt 1 view -0
 847              		.cfi_startproc
 848              		@ args = 0, pretend = 0, frame = 0
 849              		@ frame_needed = 0, uses_anonymous_args = 0
 125:source/HvMessageQueue.c ****     MessageNode *n = q->head;
 850              		.loc 1 125 3 view .LVU254
 851              	.LBB127:
 852              	.LBI127:
  63:source/HvMessageQueue.h ****   return (q->head != NULL);
 853              		.loc 2 63 20 view .LVU255
 854              	.LBB128:
 855              		.loc 2 64 3 view .LVU256
 856              	.LBE128:
 857              	.LBE127:
 124:source/HvMessageQueue.c ****   if (mq_hasMessage(q)) {
 858              		.loc 1 124 32 is_stmt 0 view .LVU257
 859 0000 38B5     		push	{r3, r4, r5, lr}
 860              		.cfi_def_cfa_offset 16
 861              		.cfi_offset 3, -16
 862              		.cfi_offset 4, -12
 863              		.cfi_offset 5, -8
 864              		.cfi_offset 14, -4
 865              	.LBB130:
 866              	.LBB129:
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccRdbHuq.s 			page 26


 867              		.loc 2 64 12 view .LVU258
 868 0002 0568     		ldr	r5, [r0]
 869              	.LVL61:
 870              		.loc 2 64 12 view .LVU259
 871              	.LBE129:
 872              	.LBE130:
 125:source/HvMessageQueue.c ****     MessageNode *n = q->head;
 873              		.loc 1 125 6 view .LVU260
 874 0004 8DB1     		cbz	r5, .L52
 875              	.LBB131:
 126:source/HvMessageQueue.c **** 
 876              		.loc 1 126 5 is_stmt 1 view .LVU261
 877              	.LVL62:
 128:source/HvMessageQueue.c ****     n->m = NULL;
 878              		.loc 1 128 5 view .LVU262
 879 0006 0446     		mov	r4, r0
 880 0008 A968     		ldr	r1, [r5, #8]
 881 000a 0C30     		adds	r0, r0, #12
 882              	.LVL63:
 128:source/HvMessageQueue.c ****     n->m = NULL;
 883              		.loc 1 128 5 is_stmt 0 view .LVU263
 884 000c FFF7FEFF 		bl	mp_freeMessage
 885              	.LVL64:
 129:source/HvMessageQueue.c **** 
 886              		.loc 1 129 5 is_stmt 1 view .LVU264
 129:source/HvMessageQueue.c **** 
 887              		.loc 1 129 10 is_stmt 0 view .LVU265
 888 0010 0023     		movs	r3, #0
 134:source/HvMessageQueue.c ****     if (q->head == NULL) {
 889              		.loc 1 134 16 view .LVU266
 890 0012 6A68     		ldr	r2, [r5, #4]
 129:source/HvMessageQueue.c **** 
 891              		.loc 1 129 10 view .LVU267
 892 0014 AB60     		str	r3, [r5, #8]
 131:source/HvMessageQueue.c ****     n->sendMessage = NULL;
 893              		.loc 1 131 5 is_stmt 1 view .LVU268
 132:source/HvMessageQueue.c **** 
 894              		.loc 1 132 20 is_stmt 0 view .LVU269
 895 0016 C5E90333 		strd	r3, r3, [r5, #12]
 134:source/HvMessageQueue.c ****     if (q->head == NULL) {
 896              		.loc 1 134 5 is_stmt 1 view .LVU270
 134:source/HvMessageQueue.c ****     if (q->head == NULL) {
 897              		.loc 1 134 13 is_stmt 0 view .LVU271
 898 001a 2260     		str	r2, [r4]
 135:source/HvMessageQueue.c ****       q->tail = NULL;
 899              		.loc 1 135 5 is_stmt 1 view .LVU272
 135:source/HvMessageQueue.c ****       q->tail = NULL;
 900              		.loc 1 135 8 is_stmt 0 view .LVU273
 901 001c 32B1     		cbz	r2, .L60
 138:source/HvMessageQueue.c ****     }
 902              		.loc 1 138 7 is_stmt 1 view .LVU274
 138:source/HvMessageQueue.c ****     }
 903              		.loc 1 138 21 is_stmt 0 view .LVU275
 904 001e 1360     		str	r3, [r2]
 905              	.L55:
 140:source/HvMessageQueue.c ****     n->prev = NULL;
 906              		.loc 1 140 5 is_stmt 1 view .LVU276
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccRdbHuq.s 			page 27


 140:source/HvMessageQueue.c ****     n->prev = NULL;
 907              		.loc 1 140 13 is_stmt 0 view .LVU277
 908 0020 A268     		ldr	r2, [r4, #8]
 141:source/HvMessageQueue.c ****     q->pool = n;
 909              		.loc 1 141 13 view .LVU278
 910 0022 0023     		movs	r3, #0
 911 0024 C5E90032 		strd	r3, r2, [r5]
 142:source/HvMessageQueue.c ****   }
 912              		.loc 1 142 5 is_stmt 1 view .LVU279
 142:source/HvMessageQueue.c ****   }
 913              		.loc 1 142 13 is_stmt 0 view .LVU280
 914 0028 A560     		str	r5, [r4, #8]
 915              	.LVL65:
 916              	.L52:
 142:source/HvMessageQueue.c ****   }
 917              		.loc 1 142 13 view .LVU281
 918              	.LBE131:
 144:source/HvMessageQueue.c **** 
 919              		.loc 1 144 1 view .LVU282
 920 002a 38BD     		pop	{r3, r4, r5, pc}
 921              	.LVL66:
 922              	.L60:
 923              	.LBB132:
 136:source/HvMessageQueue.c ****     } else {
 924              		.loc 1 136 7 is_stmt 1 view .LVU283
 136:source/HvMessageQueue.c ****     } else {
 925              		.loc 1 136 15 is_stmt 0 view .LVU284
 926 002c 6260     		str	r2, [r4, #4]
 927 002e F7E7     		b	.L55
 928              	.LBE132:
 929              		.cfi_endproc
 930              	.LFE356:
 932              		.section	.text.mq_removeMessage,"ax",%progbits
 933              		.align	1
 934              		.p2align 2,,3
 935              		.global	mq_removeMessage
 936              		.syntax unified
 937              		.thumb
 938              		.thumb_func
 940              	mq_removeMessage:
 941              	.LVL67:
 942              	.LFB357:
 146:source/HvMessageQueue.c ****   if (mq_hasMessage(q)) {
 943              		.loc 1 146 126 is_stmt 1 view -0
 944              		.cfi_startproc
 945              		@ args = 0, pretend = 0, frame = 0
 946              		@ frame_needed = 0, uses_anonymous_args = 0
 147:source/HvMessageQueue.c ****     if (mq_node_getMessage(q->head) == m) { // msg in head node
 947              		.loc 1 147 3 view .LVU286
 948              	.LBB133:
 949              	.LBI133:
  63:source/HvMessageQueue.h ****   return (q->head != NULL);
 950              		.loc 2 63 20 view .LVU287
 951              	.LBB134:
 952              		.loc 2 64 3 view .LVU288
 953              	.LBE134:
 954              	.LBE133:
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccRdbHuq.s 			page 28


 146:source/HvMessageQueue.c ****   if (mq_hasMessage(q)) {
 955              		.loc 1 146 126 is_stmt 0 view .LVU289
 956 0000 70B5     		push	{r4, r5, r6, lr}
 957              		.cfi_def_cfa_offset 16
 958              		.cfi_offset 4, -16
 959              		.cfi_offset 5, -12
 960              		.cfi_offset 6, -8
 961              		.cfi_offset 14, -4
 962              	.LBB136:
 963              	.LBB135:
 964              		.loc 2 64 12 view .LVU290
 965 0002 0568     		ldr	r5, [r0]
 966              	.LVL68:
 967              		.loc 2 64 12 view .LVU291
 968              	.LBE135:
 969              	.LBE136:
 147:source/HvMessageQueue.c ****     if (mq_node_getMessage(q->head) == m) { // msg in head node
 970              		.loc 1 147 6 view .LVU292
 971 0004 8DB1     		cbz	r5, .L75
 148:source/HvMessageQueue.c ****       // only remove the message if sendMessage is the same as the stored one,
 972              		.loc 1 148 8 view .LVU293
 973 0006 AB68     		ldr	r3, [r5, #8]
 974 0008 0646     		mov	r6, r0
 148:source/HvMessageQueue.c ****       // only remove the message if sendMessage is the same as the stored one,
 975              		.loc 1 148 5 is_stmt 1 view .LVU294
 976              	.LVL69:
 977              	.LBB137:
 978              	.LBI137:
  55:source/HvMessageQueue.h ****   return n->m;
 979              		.loc 2 55 26 view .LVU295
 980              	.LBB138:
  56:source/HvMessageQueue.h **** }
 981              		.loc 2 56 3 view .LVU296
  56:source/HvMessageQueue.h **** }
 982              		.loc 2 56 3 is_stmt 0 view .LVU297
 983              	.LBE138:
 984              	.LBE137:
 148:source/HvMessageQueue.c ****       // only remove the message if sendMessage is the same as the stored one,
 985              		.loc 1 148 8 view .LVU298
 986 000a 9942     		cmp	r1, r3
 987 000c 0FD0     		beq	.L87
 988              	.LBB139:
 156:source/HvMessageQueue.c ****       MessageNode *currNode = q->head->next;
 989              		.loc 1 156 7 is_stmt 1 view .LVU299
 990              	.LVL70:
 157:source/HvMessageQueue.c ****       while ((currNode != NULL) && (currNode->m != m)) {
 991              		.loc 1 157 7 view .LVU300
 157:source/HvMessageQueue.c ****       while ((currNode != NULL) && (currNode->m != m)) {
 992              		.loc 1 157 20 is_stmt 0 view .LVU301
 993 000e 6C68     		ldr	r4, [r5, #4]
 994              	.LVL71:
 158:source/HvMessageQueue.c ****         prevNode = currNode;
 995              		.loc 1 158 7 is_stmt 1 view .LVU302
 158:source/HvMessageQueue.c ****         prevNode = currNode;
 996              		.loc 1 158 13 view .LVU303
 997 0010 24B9     		cbnz	r4, .L65
 998 0012 0AE0     		b	.L75
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccRdbHuq.s 			page 29


 999              	.LVL72:
 1000              	.L66:
 160:source/HvMessageQueue.c ****       }
 1001              		.loc 1 160 18 is_stmt 0 view .LVU304
 1002 0014 6068     		ldr	r0, [r4, #4]
 1003              	.LVL73:
 158:source/HvMessageQueue.c ****         prevNode = currNode;
 1004              		.loc 1 158 13 is_stmt 1 view .LVU305
 1005 0016 2546     		mov	r5, r4
 1006 0018 0446     		mov	r4, r0
 1007              	.LVL74:
 158:source/HvMessageQueue.c ****         prevNode = currNode;
 1008              		.loc 1 158 13 is_stmt 0 view .LVU306
 1009 001a 38B1     		cbz	r0, .L83
 1010              	.LVL75:
 1011              	.L65:
 159:source/HvMessageQueue.c ****         currNode = currNode->next;
 1012              		.loc 1 159 9 is_stmt 1 discriminator 1 view .LVU307
 160:source/HvMessageQueue.c ****       }
 1013              		.loc 1 160 9 discriminator 1 view .LVU308
 158:source/HvMessageQueue.c ****         prevNode = currNode;
 1014              		.loc 1 158 33 is_stmt 0 discriminator 1 view .LVU309
 1015 001c A368     		ldr	r3, [r4, #8]
 1016 001e 8B42     		cmp	r3, r1
 1017 0020 F8D1     		bne	.L66
 162:source/HvMessageQueue.c ****         if (sendMessage == NULL || currNode->sendMessage == sendMessage) {
 1018              		.loc 1 162 7 is_stmt 1 view .LVU310
 163:source/HvMessageQueue.c ****           mp_freeMessage(&q->mp, m);
 1019              		.loc 1 163 9 view .LVU311
 163:source/HvMessageQueue.c ****           mp_freeMessage(&q->mp, m);
 1020              		.loc 1 163 12 is_stmt 0 view .LVU312
 1021 0022 6AB1     		cbz	r2, .L70
 163:source/HvMessageQueue.c ****           mp_freeMessage(&q->mp, m);
 1022              		.loc 1 163 33 discriminator 1 view .LVU313
 1023 0024 E368     		ldr	r3, [r4, #12]
 1024 0026 9342     		cmp	r3, r2
 1025 0028 0AD0     		beq	.L70
 1026              	.LVL76:
 1027              	.L75:
 163:source/HvMessageQueue.c ****           mp_freeMessage(&q->mp, m);
 1028              		.loc 1 163 33 discriminator 1 view .LVU314
 1029              	.LBE139:
 183:source/HvMessageQueue.c **** }
 1030              		.loc 1 183 10 view .LVU315
 1031 002a 0020     		movs	r0, #0
 1032              	.L83:
 184:source/HvMessageQueue.c **** 
 1033              		.loc 1 184 1 view .LVU316
 1034 002c 70BD     		pop	{r4, r5, r6, pc}
 1035              	.LVL77:
 1036              	.L87:
 151:source/HvMessageQueue.c ****         mq_pop(q);
 1037              		.loc 1 151 7 is_stmt 1 view .LVU317
 151:source/HvMessageQueue.c ****         mq_pop(q);
 1038              		.loc 1 151 10 is_stmt 0 view .LVU318
 1039 002e 12B1     		cbz	r2, .L64
 151:source/HvMessageQueue.c ****         mq_pop(q);
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccRdbHuq.s 			page 30


 1040              		.loc 1 151 31 discriminator 1 view .LVU319
 1041 0030 EB68     		ldr	r3, [r5, #12]
 1042 0032 9342     		cmp	r3, r2
 1043 0034 F9D1     		bne	.L75
 1044              	.L64:
 152:source/HvMessageQueue.c ****         return true;
 1045              		.loc 1 152 9 is_stmt 1 view .LVU320
 1046 0036 3046     		mov	r0, r6
 1047              	.LVL78:
 152:source/HvMessageQueue.c ****         return true;
 1048              		.loc 1 152 9 is_stmt 0 view .LVU321
 1049 0038 FFF7FEFF 		bl	mq_pop
 1050              	.LVL79:
 153:source/HvMessageQueue.c ****       }
 1051              		.loc 1 153 9 is_stmt 1 view .LVU322
 153:source/HvMessageQueue.c ****       }
 1052              		.loc 1 153 16 is_stmt 0 view .LVU323
 1053 003c 0120     		movs	r0, #1
 184:source/HvMessageQueue.c **** 
 1054              		.loc 1 184 1 view .LVU324
 1055 003e 70BD     		pop	{r4, r5, r6, pc}
 1056              	.LVL80:
 1057              	.L70:
 1058              	.LBB140:
 164:source/HvMessageQueue.c ****           currNode->m = NULL;
 1059              		.loc 1 164 11 is_stmt 1 view .LVU325
 1060 0040 06F10C00 		add	r0, r6, #12
 1061 0044 FFF7FEFF 		bl	mp_freeMessage
 1062              	.LVL81:
 165:source/HvMessageQueue.c ****           currNode->let = 0;
 1063              		.loc 1 165 11 view .LVU326
 168:source/HvMessageQueue.c ****             prevNode->next = NULL;
 1064              		.loc 1 168 14 is_stmt 0 view .LVU327
 1065 0048 7268     		ldr	r2, [r6, #4]
 165:source/HvMessageQueue.c ****           currNode->let = 0;
 1066              		.loc 1 165 23 view .LVU328
 1067 004a 0023     		movs	r3, #0
 168:source/HvMessageQueue.c ****             prevNode->next = NULL;
 1068              		.loc 1 168 14 view .LVU329
 1069 004c A242     		cmp	r2, r4
 165:source/HvMessageQueue.c ****           currNode->let = 0;
 1070              		.loc 1 165 23 view .LVU330
 1071 004e A360     		str	r3, [r4, #8]
 166:source/HvMessageQueue.c ****           currNode->sendMessage = NULL;
 1072              		.loc 1 166 11 is_stmt 1 view .LVU331
 167:source/HvMessageQueue.c ****           if (currNode == q->tail) { // msg in tail node
 1073              		.loc 1 167 33 is_stmt 0 view .LVU332
 1074 0050 C4E90333 		strd	r3, r3, [r4, #12]
 168:source/HvMessageQueue.c ****             prevNode->next = NULL;
 1075              		.loc 1 168 11 is_stmt 1 view .LVU333
 168:source/HvMessageQueue.c ****             prevNode->next = NULL;
 1076              		.loc 1 168 14 is_stmt 0 view .LVU334
 1077 0054 0AD0     		beq	.L88
 172:source/HvMessageQueue.c ****             currNode->next->prev = prevNode;
 1078              		.loc 1 172 13 is_stmt 1 view .LVU335
 172:source/HvMessageQueue.c ****             currNode->next->prev = prevNode;
 1079              		.loc 1 172 38 is_stmt 0 view .LVU336
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccRdbHuq.s 			page 31


 1080 0056 6368     		ldr	r3, [r4, #4]
 172:source/HvMessageQueue.c ****             currNode->next->prev = prevNode;
 1081              		.loc 1 172 28 view .LVU337
 1082 0058 6B60     		str	r3, [r5, #4]
 173:source/HvMessageQueue.c ****           }
 1083              		.loc 1 173 13 is_stmt 1 view .LVU338
 173:source/HvMessageQueue.c ****           }
 1084              		.loc 1 173 34 is_stmt 0 view .LVU339
 1085 005a 6368     		ldr	r3, [r4, #4]
 1086 005c 1D60     		str	r5, [r3]
 1087              	.L69:
 175:source/HvMessageQueue.c ****           currNode->prev = NULL;
 1088              		.loc 1 175 11 is_stmt 1 view .LVU340
 175:source/HvMessageQueue.c ****           currNode->prev = NULL;
 1089              		.loc 1 175 26 is_stmt 0 view .LVU341
 1090 005e B268     		ldr	r2, [r6, #8]
 176:source/HvMessageQueue.c ****           q->pool = currNode;
 1091              		.loc 1 176 26 view .LVU342
 1092 0060 0023     		movs	r3, #0
 178:source/HvMessageQueue.c ****         }
 1093              		.loc 1 178 18 view .LVU343
 1094 0062 0120     		movs	r0, #1
 176:source/HvMessageQueue.c ****           q->pool = currNode;
 1095              		.loc 1 176 26 view .LVU344
 1096 0064 C4E90032 		strd	r3, r2, [r4]
 177:source/HvMessageQueue.c ****           return true;
 1097              		.loc 1 177 11 is_stmt 1 view .LVU345
 177:source/HvMessageQueue.c ****           return true;
 1098              		.loc 1 177 19 is_stmt 0 view .LVU346
 1099 0068 B460     		str	r4, [r6, #8]
 178:source/HvMessageQueue.c ****         }
 1100              		.loc 1 178 11 is_stmt 1 view .LVU347
 1101              	.LBE140:
 184:source/HvMessageQueue.c **** 
 1102              		.loc 1 184 1 is_stmt 0 view .LVU348
 1103 006a 70BD     		pop	{r4, r5, r6, pc}
 1104              	.LVL82:
 1105              	.L88:
 1106              	.LBB141:
 169:source/HvMessageQueue.c ****             q->tail = prevNode;
 1107              		.loc 1 169 13 is_stmt 1 view .LVU349
 169:source/HvMessageQueue.c ****             q->tail = prevNode;
 1108              		.loc 1 169 28 is_stmt 0 view .LVU350
 1109 006c 6B60     		str	r3, [r5, #4]
 170:source/HvMessageQueue.c ****           } else { // msg in middle node
 1110              		.loc 1 170 13 is_stmt 1 view .LVU351
 170:source/HvMessageQueue.c ****           } else { // msg in middle node
 1111              		.loc 1 170 21 is_stmt 0 view .LVU352
 1112 006e 7560     		str	r5, [r6, #4]
 1113 0070 F5E7     		b	.L69
 1114              	.LBE141:
 1115              		.cfi_endproc
 1116              	.LFE357:
 1118 0072 00BF     		.section	.text.mq_clear,"ax",%progbits
 1119              		.align	1
 1120              		.p2align 2,,3
 1121              		.global	mq_clear
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccRdbHuq.s 			page 32


 1122              		.syntax unified
 1123              		.thumb
 1124              		.thumb_func
 1126              	mq_clear:
 1127              	.LVL83:
 1128              	.LFB358:
 186:source/HvMessageQueue.c ****   while (mq_hasMessage(q)) {
 1129              		.loc 1 186 34 is_stmt 1 view -0
 1130              		.cfi_startproc
 1131              		@ args = 0, pretend = 0, frame = 0
 1132              		@ frame_needed = 0, uses_anonymous_args = 0
 187:source/HvMessageQueue.c ****     mq_pop(q);
 1133              		.loc 1 187 3 view .LVU354
 187:source/HvMessageQueue.c ****     mq_pop(q);
 1134              		.loc 1 187 9 view .LVU355
 1135              	.LBB149:
 1136              	.LBI149:
  63:source/HvMessageQueue.h ****   return (q->head != NULL);
 1137              		.loc 2 63 20 view .LVU356
 1138              	.LBB150:
 1139              		.loc 2 64 3 view .LVU357
 1140              	.LBE150:
 1141              	.LBE149:
 186:source/HvMessageQueue.c ****   while (mq_hasMessage(q)) {
 1142              		.loc 1 186 34 is_stmt 0 view .LVU358
 1143 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1144              		.cfi_def_cfa_offset 24
 1145              		.cfi_offset 3, -24
 1146              		.cfi_offset 4, -20
 1147              		.cfi_offset 5, -16
 1148              		.cfi_offset 6, -12
 1149              		.cfi_offset 7, -8
 1150              		.cfi_offset 14, -4
 1151              	.LBB154:
 1152              	.LBB151:
 1153              		.loc 2 64 12 view .LVU359
 1154 0002 0468     		ldr	r4, [r0]
 1155              	.LVL84:
 1156              		.loc 2 64 12 view .LVU360
 1157              	.LBE151:
 1158              	.LBE154:
 187:source/HvMessageQueue.c ****     mq_pop(q);
 1159              		.loc 1 187 9 view .LVU361
 1160 0004 C4B1     		cbz	r4, .L89
 1161 0006 0646     		mov	r6, r0
 1162              	.LBB155:
 1163              	.LBB156:
 128:source/HvMessageQueue.c ****     n->m = NULL;
 1164              		.loc 1 128 20 view .LVU362
 1165 0008 00F10C07 		add	r7, r0, #12
 129:source/HvMessageQueue.c **** 
 1166              		.loc 1 129 10 view .LVU363
 1167 000c 0025     		movs	r5, #0
 1168              	.LVL85:
 1169              	.L92:
 129:source/HvMessageQueue.c **** 
 1170              		.loc 1 129 10 view .LVU364
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccRdbHuq.s 			page 33


 1171              	.LBE156:
 1172              	.LBE155:
 1173              		.loc 1 188 5 is_stmt 1 view .LVU365
 1174              	.LBB159:
 1175              	.LBI155:
 124:source/HvMessageQueue.c ****   if (mq_hasMessage(q)) {
 1176              		.loc 1 124 6 view .LVU366
 1177              	.LBE159:
 125:source/HvMessageQueue.c ****     MessageNode *n = q->head;
 1178              		.loc 1 125 3 view .LVU367
 1179              		.loc 2 64 3 view .LVU368
 1180              	.LBB160:
 1181              	.LBB157:
 126:source/HvMessageQueue.c **** 
 1182              		.loc 1 126 5 view .LVU369
 128:source/HvMessageQueue.c ****     n->m = NULL;
 1183              		.loc 1 128 5 view .LVU370
 1184 000e A168     		ldr	r1, [r4, #8]
 1185 0010 3846     		mov	r0, r7
 1186 0012 FFF7FEFF 		bl	mp_freeMessage
 1187              	.LVL86:
 129:source/HvMessageQueue.c **** 
 1188              		.loc 1 129 5 view .LVU371
 138:source/HvMessageQueue.c ****     }
 1189              		.loc 1 138 7 view .LVU372
 134:source/HvMessageQueue.c ****     if (q->head == NULL) {
 1190              		.loc 1 134 16 is_stmt 0 view .LVU373
 1191 0016 6368     		ldr	r3, [r4, #4]
 129:source/HvMessageQueue.c **** 
 1192              		.loc 1 129 10 view .LVU374
 1193 0018 A560     		str	r5, [r4, #8]
 131:source/HvMessageQueue.c ****     n->sendMessage = NULL;
 1194              		.loc 1 131 5 is_stmt 1 view .LVU375
 140:source/HvMessageQueue.c ****     n->prev = NULL;
 1195              		.loc 1 140 13 is_stmt 0 view .LVU376
 1196 001a B268     		ldr	r2, [r6, #8]
 132:source/HvMessageQueue.c **** 
 1197              		.loc 1 132 20 view .LVU377
 1198 001c C4E90355 		strd	r5, r5, [r4, #12]
 134:source/HvMessageQueue.c ****     if (q->head == NULL) {
 1199              		.loc 1 134 5 is_stmt 1 view .LVU378
 134:source/HvMessageQueue.c ****     if (q->head == NULL) {
 1200              		.loc 1 134 13 is_stmt 0 view .LVU379
 1201 0020 3360     		str	r3, [r6]
 135:source/HvMessageQueue.c ****       q->tail = NULL;
 1202              		.loc 1 135 5 is_stmt 1 view .LVU380
 135:source/HvMessageQueue.c ****       q->tail = NULL;
 1203              		.loc 1 135 8 is_stmt 0 view .LVU381
 1204 0022 2BB1     		cbz	r3, .L97
 138:source/HvMessageQueue.c ****     }
 1205              		.loc 1 138 21 view .LVU382
 1206 0024 1D60     		str	r5, [r3]
 140:source/HvMessageQueue.c ****     n->prev = NULL;
 1207              		.loc 1 140 5 is_stmt 1 view .LVU383
 140:source/HvMessageQueue.c ****     n->prev = NULL;
 1208              		.loc 1 140 13 is_stmt 0 view .LVU384
 1209 0026 C4E90052 		strd	r5, r2, [r4]
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccRdbHuq.s 			page 34


 141:source/HvMessageQueue.c ****     q->pool = n;
 1210              		.loc 1 141 5 is_stmt 1 view .LVU385
 142:source/HvMessageQueue.c ****   }
 1211              		.loc 1 142 5 view .LVU386
 142:source/HvMessageQueue.c ****   }
 1212              		.loc 1 142 13 is_stmt 0 view .LVU387
 1213 002a B460     		str	r4, [r6, #8]
 1214              	.LVL87:
 142:source/HvMessageQueue.c ****   }
 1215              		.loc 1 142 13 view .LVU388
 1216              	.LBE157:
 1217              	.LBE160:
 187:source/HvMessageQueue.c ****     mq_pop(q);
 1218              		.loc 1 187 9 is_stmt 1 view .LVU389
 1219              	.LBB161:
  63:source/HvMessageQueue.h ****   return (q->head != NULL);
 1220              		.loc 2 63 20 view .LVU390
 1221              	.LBB152:
 1222              		.loc 2 64 3 view .LVU391
 1223              		.loc 2 64 3 is_stmt 0 view .LVU392
 1224              	.LBE152:
 1225              	.LBE161:
 1226              	.LBB162:
 1227              	.LBB158:
 142:source/HvMessageQueue.c ****   }
 1228              		.loc 1 142 13 view .LVU393
 1229 002c 1C46     		mov	r4, r3
 1230              	.LVL88:
 142:source/HvMessageQueue.c ****   }
 1231              		.loc 1 142 13 view .LVU394
 1232 002e EEE7     		b	.L92
 1233              	.LVL89:
 1234              	.L97:
 136:source/HvMessageQueue.c ****     } else {
 1235              		.loc 1 136 7 is_stmt 1 view .LVU395
 136:source/HvMessageQueue.c ****     } else {
 1236              		.loc 1 136 15 is_stmt 0 view .LVU396
 1237 0030 7360     		str	r3, [r6, #4]
 140:source/HvMessageQueue.c ****     n->prev = NULL;
 1238              		.loc 1 140 5 is_stmt 1 view .LVU397
 140:source/HvMessageQueue.c ****     n->prev = NULL;
 1239              		.loc 1 140 13 is_stmt 0 view .LVU398
 1240 0032 C4E90032 		strd	r3, r2, [r4]
 141:source/HvMessageQueue.c ****     q->pool = n;
 1241              		.loc 1 141 5 is_stmt 1 view .LVU399
 142:source/HvMessageQueue.c ****   }
 1242              		.loc 1 142 5 view .LVU400
 142:source/HvMessageQueue.c ****   }
 1243              		.loc 1 142 13 is_stmt 0 view .LVU401
 1244 0036 B460     		str	r4, [r6, #8]
 1245              	.LVL90:
 142:source/HvMessageQueue.c ****   }
 1246              		.loc 1 142 13 view .LVU402
 1247              	.LBE158:
 1248              	.LBE162:
 187:source/HvMessageQueue.c ****     mq_pop(q);
 1249              		.loc 1 187 9 is_stmt 1 view .LVU403
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccRdbHuq.s 			page 35


 1250              	.LBB163:
  63:source/HvMessageQueue.h ****   return (q->head != NULL);
 1251              		.loc 2 63 20 view .LVU404
 1252              	.LBB153:
 1253              		.loc 2 64 3 view .LVU405
 1254              	.L89:
 1255              		.loc 2 64 3 is_stmt 0 view .LVU406
 1256              	.LBE153:
 1257              	.LBE163:
 189:source/HvMessageQueue.c ****   }
 190:source/HvMessageQueue.c **** }
 1258              		.loc 1 190 1 view .LVU407
 1259 0038 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1260              		.cfi_endproc
 1261              	.LFE358:
 1263 003a 00BF     		.section	.text.mq_clearAfter,"ax",%progbits
 1264              		.align	1
 1265              		.p2align 2,,3
 1266              		.global	mq_clearAfter
 1267              		.syntax unified
 1268              		.thumb
 1269              		.thumb_func
 1271              	mq_clearAfter:
 1272              	.LVL91:
 1273              	.LFB359:
 191:source/HvMessageQueue.c **** 
 192:source/HvMessageQueue.c **** void mq_clearAfter(HvMessageQueue *q, const hv_uint32_t timestamp) {
 1274              		.loc 1 192 68 is_stmt 1 view -0
 1275              		.cfi_startproc
 1276              		@ args = 0, pretend = 0, frame = 0
 1277              		@ frame_needed = 0, uses_anonymous_args = 0
 193:source/HvMessageQueue.c ****   MessageNode *n = q->tail;
 1278              		.loc 1 193 3 view .LVU409
 192:source/HvMessageQueue.c ****   MessageNode *n = q->tail;
 1279              		.loc 1 192 68 is_stmt 0 view .LVU410
 1280 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1281              		.cfi_def_cfa_offset 24
 1282              		.cfi_offset 4, -24
 1283              		.cfi_offset 5, -20
 1284              		.cfi_offset 6, -16
 1285              		.cfi_offset 7, -12
 1286              		.cfi_offset 8, -8
 1287              		.cfi_offset 14, -4
 1288              		.loc 1 193 16 view .LVU411
 1289 0004 4468     		ldr	r4, [r0, #4]
 1290              	.LVL92:
 194:source/HvMessageQueue.c ****   while (n != NULL && timestamp <= msg_getTimestamp(n->m)) {
 1291              		.loc 1 194 3 is_stmt 1 view .LVU412
 1292              		.loc 1 194 9 view .LVU413
 192:source/HvMessageQueue.c ****   MessageNode *n = q->tail;
 1293              		.loc 1 192 68 is_stmt 0 view .LVU414
 1294 0006 0646     		mov	r6, r0
 1295              		.loc 1 194 9 view .LVU415
 1296 0008 E4B1     		cbz	r4, .L103
 1297 000a 0F46     		mov	r7, r1
 195:source/HvMessageQueue.c ****     // free the node's message
 196:source/HvMessageQueue.c ****     mp_freeMessage(&q->mp, n->m);
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccRdbHuq.s 			page 36


 1298              		.loc 1 196 20 view .LVU416
 1299 000c 00F10C08 		add	r8, r0, #12
 197:source/HvMessageQueue.c ****     n->m = NULL;
 1300              		.loc 1 197 10 view .LVU417
 1301 0010 0025     		movs	r5, #0
 1302 0012 0EE0     		b	.L99
 1303              	.LVL93:
 1304              	.L102:
 196:source/HvMessageQueue.c ****     n->m = NULL;
 1305              		.loc 1 196 5 view .LVU418
 1306 0014 FFF7FEFF 		bl	mp_freeMessage
 1307              	.LVL94:
 1308              		.loc 1 197 5 is_stmt 1 view .LVU419
 198:source/HvMessageQueue.c ****     n->let = 0;
 199:source/HvMessageQueue.c ****     n->sendMessage = NULL;
 200:source/HvMessageQueue.c **** 
 201:source/HvMessageQueue.c ****     // the tail points at the previous node
 202:source/HvMessageQueue.c ****     q->tail = n->prev;
 203:source/HvMessageQueue.c **** 
 204:source/HvMessageQueue.c ****     // put the node back in the pool
 205:source/HvMessageQueue.c ****     n->next = q->pool;
 206:source/HvMessageQueue.c ****     n->prev = NULL;
 207:source/HvMessageQueue.c ****     if (q->pool != NULL) q->pool->prev = n;
 1309              		.loc 1 207 26 view .LVU420
 208:source/HvMessageQueue.c ****     q->pool = n;
 1310              		.loc 1 208 5 view .LVU421
 205:source/HvMessageQueue.c ****     n->prev = NULL;
 1311              		.loc 1 205 16 is_stmt 0 view .LVU422
 1312 0018 B268     		ldr	r2, [r6, #8]
 202:source/HvMessageQueue.c **** 
 1313              		.loc 1 202 16 view .LVU423
 1314 001a 2368     		ldr	r3, [r4]
 197:source/HvMessageQueue.c ****     n->let = 0;
 1315              		.loc 1 197 10 view .LVU424
 1316 001c A560     		str	r5, [r4, #8]
 198:source/HvMessageQueue.c ****     n->sendMessage = NULL;
 1317              		.loc 1 198 5 is_stmt 1 view .LVU425
 199:source/HvMessageQueue.c **** 
 1318              		.loc 1 199 20 is_stmt 0 view .LVU426
 1319 001e C4E90355 		strd	r5, r5, [r4, #12]
 202:source/HvMessageQueue.c **** 
 1320              		.loc 1 202 5 is_stmt 1 view .LVU427
 202:source/HvMessageQueue.c **** 
 1321              		.loc 1 202 13 is_stmt 0 view .LVU428
 1322 0022 7360     		str	r3, [r6, #4]
 205:source/HvMessageQueue.c ****     n->prev = NULL;
 1323              		.loc 1 205 5 is_stmt 1 view .LVU429
 206:source/HvMessageQueue.c ****     if (q->pool != NULL) q->pool->prev = n;
 1324              		.loc 1 206 13 is_stmt 0 view .LVU430
 1325 0024 C4E90052 		strd	r5, r2, [r4]
 207:source/HvMessageQueue.c ****     q->pool = n;
 1326              		.loc 1 207 5 is_stmt 1 view .LVU431
 207:source/HvMessageQueue.c ****     q->pool = n;
 1327              		.loc 1 207 8 is_stmt 0 view .LVU432
 1328 0028 02B1     		cbz	r2, .L101
 207:source/HvMessageQueue.c ****     q->pool = n;
 1329              		.loc 1 207 40 discriminator 1 view .LVU433
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccRdbHuq.s 			page 37


 1330 002a 1460     		str	r4, [r2]
 1331              	.L101:
 1332              		.loc 1 208 13 view .LVU434
 1333 002c B460     		str	r4, [r6, #8]
 209:source/HvMessageQueue.c **** 
 210:source/HvMessageQueue.c ****     // update the tail node
 211:source/HvMessageQueue.c ****     n = q->tail;
 1334              		.loc 1 211 5 is_stmt 1 view .LVU435
 1335              	.LVL95:
 194:source/HvMessageQueue.c ****     // free the node's message
 1336              		.loc 1 194 9 view .LVU436
 1337 002e 1C46     		mov	r4, r3
 1338 0030 43B1     		cbz	r3, .L103
 1339              	.LVL96:
 1340              	.L99:
 196:source/HvMessageQueue.c ****     n->m = NULL;
 1341              		.loc 1 196 5 discriminator 1 view .LVU437
 194:source/HvMessageQueue.c ****     // free the node's message
 1342              		.loc 1 194 54 is_stmt 0 discriminator 1 view .LVU438
 1343 0032 A168     		ldr	r1, [r4, #8]
 1344              	.LVL97:
 1345              	.LBB164:
 1346              	.LBI164:
  82:source/HvMessage.h ****   return m->timestamp;
 1347              		.loc 3 82 27 is_stmt 1 discriminator 1 view .LVU439
 1348              	.LBB165:
 1349              		.loc 3 83 3 discriminator 1 view .LVU440
 1350              		.loc 3 83 3 is_stmt 0 discriminator 1 view .LVU441
 1351              	.LBE165:
 1352              	.LBE164:
 196:source/HvMessageQueue.c ****     n->m = NULL;
 1353              		.loc 1 196 5 discriminator 1 view .LVU442
 1354 0034 4046     		mov	r0, r8
 194:source/HvMessageQueue.c ****     // free the node's message
 1355              		.loc 1 194 20 discriminator 1 view .LVU443
 1356 0036 0B68     		ldr	r3, [r1]
 1357 0038 BB42     		cmp	r3, r7
 1358 003a EBD2     		bcs	.L102
 212:source/HvMessageQueue.c ****   }
 213:source/HvMessageQueue.c **** 
 214:source/HvMessageQueue.c ****   if (q->tail == NULL) q->head = NULL;
 1359              		.loc 1 214 3 is_stmt 1 view .LVU444
 1360              		.loc 1 214 6 is_stmt 0 view .LVU445
 1361 003c 7368     		ldr	r3, [r6, #4]
 1362 003e 0BB1     		cbz	r3, .L103
 215:source/HvMessageQueue.c **** }
 1363              		.loc 1 215 1 view .LVU446
 1364 0040 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1365              	.LVL98:
 1366              	.L103:
 214:source/HvMessageQueue.c **** }
 1367              		.loc 1 214 3 is_stmt 1 view .LVU447
 214:source/HvMessageQueue.c **** }
 1368              		.loc 1 214 24 view .LVU448
 214:source/HvMessageQueue.c **** }
 1369              		.loc 1 214 32 is_stmt 0 view .LVU449
 1370 0044 0023     		movs	r3, #0
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccRdbHuq.s 			page 38


 1371 0046 3360     		str	r3, [r6]
 1372              		.loc 1 215 1 view .LVU450
 1373 0048 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1374              		.loc 1 215 1 view .LVU451
 1375              		.cfi_endproc
 1376              	.LFE359:
 1378              		.section	.rodata.__func__.0,"a"
 1379              		.align	2
 1380              		.set	.LANCHOR0,. + 0
 1383              	__func__.0:
 1384 0000 6D715F67 		.ascii	"mq_getOrCreateNodeFromPool\000"
 1384      65744F72 
 1384      43726561 
 1384      74654E6F 
 1384      64654672 
 1385              		.section	.rodata.__func__.1,"a"
 1386              		.align	2
 1387              		.set	.LANCHOR1,. + 0
 1390              	__func__.1:
 1391 0000 6D715F69 		.ascii	"mq_initWithPoolSize\000"
 1391      6E697457 
 1391      69746850 
 1391      6F6F6C53 
 1391      697A6500 
 1392              		.text
 1393              	.Letext0:
 1394              		.file 4 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/machine/_default_types.h"
 1395              		.file 5 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/sys/_stdint.h"
 1396              		.file 6 "/Library/DaisyToolchain/0.2.0/arm/lib/gcc/arm-none-eabi/10.3.1/include/stddef.h"
 1397              		.file 7 "source/HvMessagePool.h"
 1398              		.file 8 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/stdlib.h"
 1399              		.file 9 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/assert.h"
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccRdbHuq.s 			page 39


DEFINED SYMBOLS
                            *ABS*:0000000000000000 HvMessageQueue.c
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccRdbHuq.s:19     .rodata.mq_getOrCreateNodeFromPool.part.0.str1.4:0000000000000000 $d
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccRdbHuq.s:26     .text.mq_getOrCreateNodeFromPool.part.0:0000000000000000 $t
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccRdbHuq.s:32     .text.mq_getOrCreateNodeFromPool.part.0:0000000000000000 mq_getOrCreateNodeFromPool.part.0
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccRdbHuq.s:56     .text.mq_getOrCreateNodeFromPool.part.0:0000000000000010 $d
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccRdbHuq.s:63     .rodata.mq_initWithPoolSize.str1.4:0000000000000000 $d
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccRdbHuq.s:67     .text.mq_initWithPoolSize:0000000000000000 $t
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccRdbHuq.s:74     .text.mq_initWithPoolSize:0000000000000000 mq_initWithPoolSize
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccRdbHuq.s:128    .text.mq_initWithPoolSize:0000000000000024 $d
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccRdbHuq.s:135    .text.mq_free:0000000000000000 $t
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccRdbHuq.s:142    .text.mq_free:0000000000000000 mq_free
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccRdbHuq.s:365    .text.mq_size:0000000000000000 $t
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccRdbHuq.s:372    .text.mq_size:0000000000000000 mq_size
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccRdbHuq.s:416    .text.mq_addMessage:0000000000000000 $t
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccRdbHuq.s:423    .text.mq_addMessage:0000000000000000 mq_addMessage
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccRdbHuq.s:565    .text.mq_addMessageByTimestamp:0000000000000000 $t
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccRdbHuq.s:572    .text.mq_addMessageByTimestamp:0000000000000000 mq_addMessageByTimestamp
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccRdbHuq.s:836    .text.mq_pop:0000000000000000 $t
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccRdbHuq.s:843    .text.mq_pop:0000000000000000 mq_pop
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccRdbHuq.s:933    .text.mq_removeMessage:0000000000000000 $t
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccRdbHuq.s:940    .text.mq_removeMessage:0000000000000000 mq_removeMessage
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccRdbHuq.s:1119   .text.mq_clear:0000000000000000 $t
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccRdbHuq.s:1126   .text.mq_clear:0000000000000000 mq_clear
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccRdbHuq.s:1264   .text.mq_clearAfter:0000000000000000 $t
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccRdbHuq.s:1271   .text.mq_clearAfter:0000000000000000 mq_clearAfter
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccRdbHuq.s:1379   .rodata.__func__.0:0000000000000000 $d
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccRdbHuq.s:1383   .rodata.__func__.0:0000000000000000 __func__.0
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccRdbHuq.s:1386   .rodata.__func__.1:0000000000000000 $d
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccRdbHuq.s:1390   .rodata.__func__.1:0000000000000000 __func__.1

UNDEFINED SYMBOLS
__assert_func
mp_init
mp_freeMessage
free
mp_free
mp_addMessage
malloc
