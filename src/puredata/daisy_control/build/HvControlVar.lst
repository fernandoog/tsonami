ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccntalC7.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 2
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"HvControlVar.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.rodata.msg_getType.part.0.str1.4,"aMS",%progbits,1
  19              		.align	2
  20              	.LC0:
  21 0000 696E6465 		.ascii	"index < msg_getNumElements(m)\000"
  21      78203C20 
  21      6D73675F 
  21      6765744E 
  21      756D456C 
  22 001e 0000     		.align	2
  23              	.LC1:
  24 0020 736F7572 		.ascii	"source/HvMessage.h\000"
  24      63652F48 
  24      764D6573 
  24      73616765 
  24      2E6800
  25              		.section	.text.msg_getType.part.0,"ax",%progbits
  26              		.align	1
  27              		.p2align 2,,3
  28              		.syntax unified
  29              		.thumb
  30              		.thumb_func
  32              	msg_getType.part.0:
  33              	.LFB403:
  34              		.file 1 "source/HvMessage.h"
   1:source/HvMessage.h **** /**
   2:source/HvMessage.h ****  * Copyright (c) 2014-2018 Enzien Audio Ltd.
   3:source/HvMessage.h ****  *
   4:source/HvMessage.h ****  * Permission to use, copy, modify, and/or distribute this software for any
   5:source/HvMessage.h ****  * purpose with or without fee is hereby granted, provided that the above
   6:source/HvMessage.h ****  * copyright notice and this permission notice appear in all copies.
   7:source/HvMessage.h ****  *
   8:source/HvMessage.h ****  * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
   9:source/HvMessage.h ****  * REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
  10:source/HvMessage.h ****  * AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
  11:source/HvMessage.h ****  * INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
  12:source/HvMessage.h ****  * LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
  13:source/HvMessage.h ****  * OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
  14:source/HvMessage.h ****  * PERFORMANCE OF THIS SOFTWARE.
  15:source/HvMessage.h ****  */
  16:source/HvMessage.h **** 
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccntalC7.s 			page 2


  17:source/HvMessage.h **** #ifndef _HEAVY_MESSAGE_H_
  18:source/HvMessage.h **** #define _HEAVY_MESSAGE_H_
  19:source/HvMessage.h **** 
  20:source/HvMessage.h **** #include "HvUtils.h"
  21:source/HvMessage.h **** 
  22:source/HvMessage.h **** #ifdef __cplusplus
  23:source/HvMessage.h **** extern "C" {
  24:source/HvMessage.h **** #endif
  25:source/HvMessage.h **** 
  26:source/HvMessage.h **** typedef enum ElementType {
  27:source/HvMessage.h ****   HV_MSG_BANG = 0,
  28:source/HvMessage.h ****   HV_MSG_FLOAT = 1,
  29:source/HvMessage.h ****   HV_MSG_SYMBOL = 2,
  30:source/HvMessage.h ****   HV_MSG_HASH = 3
  31:source/HvMessage.h **** } ElementType;
  32:source/HvMessage.h **** 
  33:source/HvMessage.h **** typedef struct Element {
  34:source/HvMessage.h ****   ElementType type;
  35:source/HvMessage.h ****   union {
  36:source/HvMessage.h ****     float f; // float
  37:source/HvMessage.h ****     const char *s; // symbol
  38:source/HvMessage.h ****     hv_uint32_t h; // hash
  39:source/HvMessage.h ****   } data;
  40:source/HvMessage.h **** } Element;
  41:source/HvMessage.h **** 
  42:source/HvMessage.h **** typedef struct HvMessage {
  43:source/HvMessage.h ****   hv_uint32_t timestamp; // the sample at which this message should be processed
  44:source/HvMessage.h ****   hv_uint16_t numElements;
  45:source/HvMessage.h ****   hv_uint16_t numBytes; // the total number of bytes that this message occupies in memory, includin
  46:source/HvMessage.h ****   Element elem;
  47:source/HvMessage.h **** } HvMessage;
  48:source/HvMessage.h **** 
  49:source/HvMessage.h **** typedef struct ReceiverMessagePair {
  50:source/HvMessage.h ****   hv_uint32_t receiverHash;
  51:source/HvMessage.h ****   HvMessage msg;
  52:source/HvMessage.h **** } ReceiverMessagePair;
  53:source/HvMessage.h **** 
  54:source/HvMessage.h **** #define HV_MESSAGE_ON_STACK(_x) (HvMessage *) hv_alloca(msg_getCoreSize(_x))
  55:source/HvMessage.h **** 
  56:source/HvMessage.h **** /** Returns the number of bytes that this message consumes in memory, not including strings. */
  57:source/HvMessage.h **** static inline hv_size_t msg_getCoreSize(hv_size_t numElements) {
  58:source/HvMessage.h ****   hv_assert(numElements > 0);
  59:source/HvMessage.h ****   return sizeof(HvMessage) + ((numElements-1) * sizeof(Element));
  60:source/HvMessage.h **** }
  61:source/HvMessage.h **** 
  62:source/HvMessage.h **** HvMessage *msg_copy(const HvMessage *m);
  63:source/HvMessage.h **** 
  64:source/HvMessage.h **** /** Copies the message into the given buffer. The buffer must be at least as large as msg_getNumHea
  65:source/HvMessage.h **** void msg_copyToBuffer(const HvMessage *m, char *buffer, hv_size_t len);
  66:source/HvMessage.h **** 
  67:source/HvMessage.h **** void msg_setElementToFrom(HvMessage *n, int indexN, const HvMessage *const m, int indexM);
  68:source/HvMessage.h **** 
  69:source/HvMessage.h **** /** Frees a message on the heap. Does nothing if argument is NULL. */
  70:source/HvMessage.h **** void msg_free(HvMessage *m);
  71:source/HvMessage.h **** 
  72:source/HvMessage.h **** HvMessage *msg_init(HvMessage *m, hv_size_t numElements, hv_uint32_t timestamp);
  73:source/HvMessage.h **** 
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccntalC7.s 			page 3


  74:source/HvMessage.h **** HvMessage *msg_initWithFloat(HvMessage *m, hv_uint32_t timestamp, float f);
  75:source/HvMessage.h **** 
  76:source/HvMessage.h **** HvMessage *msg_initWithBang(HvMessage *m, hv_uint32_t timestamp);
  77:source/HvMessage.h **** 
  78:source/HvMessage.h **** HvMessage *msg_initWithSymbol(HvMessage *m, hv_uint32_t timestamp, const char *s);
  79:source/HvMessage.h **** 
  80:source/HvMessage.h **** HvMessage *msg_initWithHash(HvMessage *m, hv_uint32_t timestamp, hv_uint32_t h);
  81:source/HvMessage.h **** 
  82:source/HvMessage.h **** static inline hv_uint32_t msg_getTimestamp(const HvMessage *m) {
  83:source/HvMessage.h ****   return m->timestamp;
  84:source/HvMessage.h **** }
  85:source/HvMessage.h **** 
  86:source/HvMessage.h **** static inline void msg_setTimestamp(HvMessage *m, hv_uint32_t timestamp) {
  87:source/HvMessage.h ****   m->timestamp = timestamp;
  88:source/HvMessage.h **** }
  89:source/HvMessage.h **** 
  90:source/HvMessage.h **** static inline int msg_getNumElements(const HvMessage *m) {
  91:source/HvMessage.h ****   return (int) m->numElements;
  92:source/HvMessage.h **** }
  93:source/HvMessage.h **** 
  94:source/HvMessage.h **** /** Returns the total number of bytes this message consumes in memory. */
  95:source/HvMessage.h **** static inline hv_uint32_t msg_getSize(const HvMessage *m) {
  96:source/HvMessage.h ****   return m->numBytes;
  97:source/HvMessage.h **** }
  98:source/HvMessage.h **** 
  99:source/HvMessage.h **** static inline ElementType msg_getType(const HvMessage *m, int index) {
  35              		.loc 1 99 27 view -0
  36              		.cfi_startproc
  37              		@ Volatile: function does not return.
  38              		@ args = 0, pretend = 0, frame = 0
  39              		@ frame_needed = 0, uses_anonymous_args = 0
  40              	.LVL0:
  41              		.loc 1 99 27 is_stmt 0 view .LVU1
  42 0000 08B5     		push	{r3, lr}
  43              		.cfi_def_cfa_offset 8
  44              		.cfi_offset 3, -8
  45              		.cfi_offset 14, -4
 100:source/HvMessage.h ****   hv_assert(index < msg_getNumElements(m)); // invalid index
  46              		.loc 1 100 3 view .LVU2
  47 0002 034A     		ldr	r2, .L4
  48 0004 6421     		movs	r1, #100
  49 0006 034B     		ldr	r3, .L4+4
  50 0008 0348     		ldr	r0, .L4+8
  51 000a FFF7FEFF 		bl	__assert_func
  52              	.LVL1:
  53              	.L5:
  54 000e 00BF     		.align	2
  55              	.L4:
  56 0010 00000000 		.word	.LANCHOR0
  57 0014 00000000 		.word	.LC0
  58 0018 20000000 		.word	.LC1
  59              		.cfi_endproc
  60              	.LFE403:
  62              		.section	.text.cVar_init_f,"ax",%progbits
  63              		.align	1
  64              		.p2align 2,,3
  65              		.global	cVar_init_f
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccntalC7.s 			page 4


  66              		.syntax unified
  67              		.thumb
  68              		.thumb_func
  70              	cVar_init_f:
  71              	.LVL2:
  72              	.LFB399:
  73              		.file 2 "source/HvControlVar.c"
   1:source/HvControlVar.c **** /**
   2:source/HvControlVar.c ****  * Copyright (c) 2014-2018 Enzien Audio Ltd.
   3:source/HvControlVar.c ****  *
   4:source/HvControlVar.c ****  * Permission to use, copy, modify, and/or distribute this software for any
   5:source/HvControlVar.c ****  * purpose with or without fee is hereby granted, provided that the above
   6:source/HvControlVar.c ****  * copyright notice and this permission notice appear in all copies.
   7:source/HvControlVar.c ****  *
   8:source/HvControlVar.c ****  * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
   9:source/HvControlVar.c ****  * REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
  10:source/HvControlVar.c ****  * AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
  11:source/HvControlVar.c ****  * INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
  12:source/HvControlVar.c ****  * LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
  13:source/HvControlVar.c ****  * OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
  14:source/HvControlVar.c ****  * PERFORMANCE OF THIS SOFTWARE.
  15:source/HvControlVar.c ****  */
  16:source/HvControlVar.c **** 
  17:source/HvControlVar.c **** #include "HvControlVar.h"
  18:source/HvControlVar.c **** 
  19:source/HvControlVar.c **** hv_size_t cVar_init_f(ControlVar *o, float k) {
  74              		.loc 2 19 47 is_stmt 1 view -0
  75              		.cfi_startproc
  76              		@ args = 0, pretend = 0, frame = 0
  77              		@ frame_needed = 0, uses_anonymous_args = 0
  78              		@ link register save eliminated.
  20:source/HvControlVar.c ****   o->e.type = HV_MSG_FLOAT;
  79              		.loc 2 20 3 view .LVU4
  19:source/HvControlVar.c ****   o->e.type = HV_MSG_FLOAT;
  80              		.loc 2 19 47 is_stmt 0 view .LVU5
  81 0000 0346     		mov	r3, r0
  82              		.loc 2 20 13 view .LVU6
  83 0002 0122     		movs	r2, #1
  21:source/HvControlVar.c ****   o->e.data.f = k;
  22:source/HvControlVar.c ****   return 0;
  23:source/HvControlVar.c **** }
  84              		.loc 2 23 1 view .LVU7
  85 0004 0020     		movs	r0, #0
  86              	.LVL3:
  20:source/HvControlVar.c ****   o->e.data.f = k;
  87              		.loc 2 20 13 view .LVU8
  88 0006 1A70     		strb	r2, [r3]
  21:source/HvControlVar.c ****   o->e.data.f = k;
  89              		.loc 2 21 3 is_stmt 1 view .LVU9
  21:source/HvControlVar.c ****   o->e.data.f = k;
  90              		.loc 2 21 15 is_stmt 0 view .LVU10
  91 0008 83ED010A 		vstr.32	s0, [r3, #4]
  22:source/HvControlVar.c **** }
  92              		.loc 2 22 3 is_stmt 1 view .LVU11
  93              		.loc 2 23 1 is_stmt 0 view .LVU12
  94 000c 7047     		bx	lr
  95              		.cfi_endproc
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccntalC7.s 			page 5


  96              	.LFE399:
  98 000e 00BF     		.section	.text.cVar_init_s,"ax",%progbits
  99              		.align	1
 100              		.p2align 2,,3
 101              		.global	cVar_init_s
 102              		.syntax unified
 103              		.thumb
 104              		.thumb_func
 106              	cVar_init_s:
 107              	.LVL4:
 108              	.LFB400:
  24:source/HvControlVar.c **** 
  25:source/HvControlVar.c **** hv_size_t cVar_init_s(ControlVar *o, const char *s) {
 109              		.loc 2 25 53 is_stmt 1 view -0
 110              		.cfi_startproc
 111              		@ args = 0, pretend = 0, frame = 0
 112              		@ frame_needed = 0, uses_anonymous_args = 0
  26:source/HvControlVar.c ****   o->e.type = HV_MSG_HASH;
 113              		.loc 2 26 3 view .LVU14
  25:source/HvControlVar.c ****   o->e.type = HV_MSG_HASH;
 114              		.loc 2 25 53 is_stmt 0 view .LVU15
 115 0000 10B5     		push	{r4, lr}
 116              		.cfi_def_cfa_offset 8
 117              		.cfi_offset 4, -8
 118              		.cfi_offset 14, -4
 119              		.loc 2 26 13 view .LVU16
 120 0002 0323     		movs	r3, #3
  25:source/HvControlVar.c ****   o->e.type = HV_MSG_HASH;
 121              		.loc 2 25 53 view .LVU17
 122 0004 0446     		mov	r4, r0
  27:source/HvControlVar.c ****   o->e.data.h = hv_string_to_hash(s);
 123              		.loc 2 27 17 view .LVU18
 124 0006 0846     		mov	r0, r1
 125              	.LVL5:
  26:source/HvControlVar.c ****   o->e.type = HV_MSG_HASH;
 126              		.loc 2 26 13 view .LVU19
 127 0008 2370     		strb	r3, [r4]
 128              		.loc 2 27 3 is_stmt 1 view .LVU20
 129              		.loc 2 27 17 is_stmt 0 view .LVU21
 130 000a FFF7FEFF 		bl	hv_string_to_hash
 131              	.LVL6:
 132              		.loc 2 27 17 view .LVU22
 133 000e 0346     		mov	r3, r0
  28:source/HvControlVar.c ****   return 0;
  29:source/HvControlVar.c **** }
 134              		.loc 2 29 1 view .LVU23
 135 0010 0020     		movs	r0, #0
  27:source/HvControlVar.c ****   o->e.data.h = hv_string_to_hash(s);
 136              		.loc 2 27 15 view .LVU24
 137 0012 6360     		str	r3, [r4, #4]
  28:source/HvControlVar.c ****   return 0;
 138              		.loc 2 28 3 is_stmt 1 view .LVU25
 139              		.loc 2 29 1 is_stmt 0 view .LVU26
 140 0014 10BD     		pop	{r4, pc}
 141              		.loc 2 29 1 view .LVU27
 142              		.cfi_endproc
 143              	.LFE400:
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccntalC7.s 			page 6


 145 0016 00BF     		.section	.text.cVar_free,"ax",%progbits
 146              		.align	1
 147              		.p2align 2,,3
 148              		.global	cVar_free
 149              		.syntax unified
 150              		.thumb
 151              		.thumb_func
 153              	cVar_free:
 154              	.LVL7:
 155              	.LFB401:
  30:source/HvControlVar.c **** 
  31:source/HvControlVar.c **** void cVar_free(ControlVar *o) {
 156              		.loc 2 31 31 is_stmt 1 view -0
 157              		.cfi_startproc
 158              		@ args = 0, pretend = 0, frame = 0
 159              		@ frame_needed = 0, uses_anonymous_args = 0
 160              		@ link register save eliminated.
  32:source/HvControlVar.c ****   // nothing to do
  33:source/HvControlVar.c **** }
 161              		.loc 2 33 1 view .LVU29
 162 0000 7047     		bx	lr
 163              		.cfi_endproc
 164              	.LFE401:
 166 0002 00BF     		.section	.text.cVar_onMessage,"ax",%progbits
 167              		.align	1
 168              		.p2align 2,,3
 169              		.global	cVar_onMessage
 170              		.syntax unified
 171              		.thumb
 172              		.thumb_func
 174              	cVar_onMessage:
 175              	.LVL8:
 176              	.LFB402:
  34:source/HvControlVar.c **** 
  35:source/HvControlVar.c **** void cVar_onMessage(HeavyContextInterface *_c, ControlVar *o, int letIn, const HvMessage *m,
  36:source/HvControlVar.c ****     void (*sendMessage)(HeavyContextInterface *, int, const HvMessage *)) {
 177              		.loc 2 36 75 view -0
 178              		.cfi_startproc
 179              		@ args = 4, pretend = 0, frame = 8
 180              		@ frame_needed = 1, uses_anonymous_args = 0
  37:source/HvControlVar.c ****   switch (letIn) {
 181              		.loc 2 37 3 view .LVU31
  36:source/HvControlVar.c ****   switch (letIn) {
 182              		.loc 2 36 75 is_stmt 0 view .LVU32
 183 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 184              		.cfi_def_cfa_offset 20
 185              		.cfi_offset 4, -20
 186              		.cfi_offset 5, -16
 187              		.cfi_offset 6, -12
 188              		.cfi_offset 7, -8
 189              		.cfi_offset 14, -4
 190 0002 83B0     		sub	sp, sp, #12
 191              		.cfi_def_cfa_offset 32
 192 0004 0D46     		mov	r5, r1
 193              		.loc 2 37 3 view .LVU33
 194 0006 1446     		mov	r4, r2
  36:source/HvControlVar.c ****   switch (letIn) {
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccntalC7.s 			page 7


 195              		.loc 2 36 75 view .LVU34
 196 0008 00AF     		add	r7, sp, #0
 197              		.cfi_def_cfa_register 7
 198              		.loc 2 37 3 view .LVU35
 199 000a A2B1     		cbz	r2, .L11
 200 000c 012A     		cmp	r2, #1
 201 000e 0FD1     		bne	.L10
  38:source/HvControlVar.c ****     case 0: {
  39:source/HvControlVar.c ****       switch (msg_getType(m,0)) {
  40:source/HvControlVar.c ****         case HV_MSG_BANG: {
  41:source/HvControlVar.c ****           HvMessage *n = HV_MESSAGE_ON_STACK(1);
  42:source/HvControlVar.c ****           if (o->e.type == HV_MSG_FLOAT) msg_initWithFloat(n, msg_getTimestamp(m), o->e.data.f);
  43:source/HvControlVar.c ****           else if (o->e.type == HV_MSG_HASH) msg_initWithHash(n, msg_getTimestamp(m), o->e.data.h);
  44:source/HvControlVar.c ****           else return;
  45:source/HvControlVar.c ****           sendMessage(_c, 0, n);
  46:source/HvControlVar.c ****           break;
  47:source/HvControlVar.c ****         }
  48:source/HvControlVar.c ****         case HV_MSG_FLOAT: {
  49:source/HvControlVar.c ****           o->e.type = HV_MSG_FLOAT;
  50:source/HvControlVar.c ****           o->e.data.f = msg_getFloat(m,0);
  51:source/HvControlVar.c ****           sendMessage(_c, 0, m);
  52:source/HvControlVar.c ****           break;
  53:source/HvControlVar.c ****         }
  54:source/HvControlVar.c ****         case HV_MSG_SYMBOL:
  55:source/HvControlVar.c ****         case HV_MSG_HASH: {
  56:source/HvControlVar.c ****           o->e.type = HV_MSG_HASH;
  57:source/HvControlVar.c ****           o->e.data.h = msg_getHash(m,0);
  58:source/HvControlVar.c ****           sendMessage(_c, 0, m);
  59:source/HvControlVar.c ****           break;
  60:source/HvControlVar.c ****         }
  61:source/HvControlVar.c ****         default: return;
  62:source/HvControlVar.c ****       }
  63:source/HvControlVar.c ****       break;
  64:source/HvControlVar.c ****     }
  65:source/HvControlVar.c ****     case 1: {
  66:source/HvControlVar.c ****       switch (msg_getType(m,0)) {
 202              		.loc 2 66 7 is_stmt 1 view .LVU36
 203              	.LVL9:
 204              	.LBB33:
 205              	.LBI33:
  99:source/HvMessage.h ****   hv_assert(index < msg_getNumElements(m)); // invalid index
 206              		.loc 1 99 27 view .LVU37
 207              	.LBB34:
 208              		.loc 1 100 3 view .LVU38
 209              	.LBB35:
 210              	.LBI35:
  90:source/HvMessage.h ****   return (int) m->numElements;
 211              		.loc 1 90 19 view .LVU39
 212              	.LBB36:
  91:source/HvMessage.h **** }
 213              		.loc 1 91 3 view .LVU40
  91:source/HvMessage.h **** }
 214              		.loc 1 91 3 is_stmt 0 view .LVU41
 215              	.LBE36:
 216              	.LBE35:
 217              		.loc 1 100 3 view .LVU42
 218 0010 9A88     		ldrh	r2, [r3, #4]
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccntalC7.s 			page 8


 219              	.LVL10:
 220              		.loc 1 100 3 view .LVU43
 221 0012 002A     		cmp	r2, #0
 222 0014 4BD0     		beq	.L20
 101:source/HvMessage.h ****   return (&(m->elem)+index)->type;
 223              		.loc 1 101 3 is_stmt 1 view .LVU44
 224              		.loc 1 101 28 is_stmt 0 view .LVU45
 225 0016 1A7A     		ldrb	r2, [r3, #8]	@ zero_extendqisi2
 226              	.LVL11:
 227              		.loc 1 101 28 view .LVU46
 228              	.LBE34:
 229              	.LBE33:
 230 0018 012A     		cmp	r2, #1
 231 001a 3AD0     		beq	.L21
 232 001c 023A     		subs	r2, r2, #2
 233 001e 012A     		cmp	r2, #1
 234 0020 06D8     		bhi	.L10
  67:source/HvControlVar.c ****         case HV_MSG_FLOAT: {
  68:source/HvControlVar.c ****           o->e.type = HV_MSG_FLOAT;
  69:source/HvControlVar.c ****           o->e.data.f = msg_getFloat(m,0);
  70:source/HvControlVar.c ****           break;
  71:source/HvControlVar.c ****         }
  72:source/HvControlVar.c ****         case HV_MSG_SYMBOL:
  73:source/HvControlVar.c ****         case HV_MSG_HASH: {
  74:source/HvControlVar.c ****           o->e.type = HV_MSG_HASH;
 235              		.loc 2 74 11 is_stmt 1 view .LVU47
 236              		.loc 2 74 21 is_stmt 0 view .LVU48
 237 0022 0322     		movs	r2, #3
  75:source/HvControlVar.c ****           o->e.data.h = msg_getHash(m,0);
 238              		.loc 2 75 25 view .LVU49
 239 0024 0021     		movs	r1, #0
 240              	.LVL12:
 241              		.loc 2 75 25 view .LVU50
 242 0026 1846     		mov	r0, r3
 243              	.LVL13:
  74:source/HvControlVar.c ****           o->e.data.h = msg_getHash(m,0);
 244              		.loc 2 74 21 view .LVU51
 245 0028 2A70     		strb	r2, [r5]
 246              		.loc 2 75 11 is_stmt 1 view .LVU52
 247              		.loc 2 75 25 is_stmt 0 view .LVU53
 248 002a FFF7FEFF 		bl	msg_getHash
 249              	.LVL14:
 250              		.loc 2 75 23 view .LVU54
 251 002e 6860     		str	r0, [r5, #4]
  76:source/HvControlVar.c ****           break;
 252              		.loc 2 76 11 is_stmt 1 view .LVU55
 253              	.LVL15:
 254              	.L10:
  77:source/HvControlVar.c ****         }
  78:source/HvControlVar.c ****         default: break;
  79:source/HvControlVar.c ****       }
  80:source/HvControlVar.c ****     }
  81:source/HvControlVar.c ****     default: return;
  82:source/HvControlVar.c ****   }
  83:source/HvControlVar.c **** }
 255              		.loc 2 83 1 is_stmt 0 view .LVU56
 256 0030 0C37     		adds	r7, r7, #12
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccntalC7.s 			page 9


 257              		.cfi_remember_state
 258              		.cfi_def_cfa_offset 20
 259 0032 BD46     		mov	sp, r7
 260              		.cfi_def_cfa_register 13
 261              		@ sp needed
 262 0034 F0BD     		pop	{r4, r5, r6, r7, pc}
 263              	.LVL16:
 264              	.L11:
 265              		.cfi_restore_state
  39:source/HvControlVar.c ****         case HV_MSG_BANG: {
 266              		.loc 2 39 7 is_stmt 1 view .LVU57
 267              	.LBB37:
 268              	.LBI37:
  99:source/HvMessage.h ****   hv_assert(index < msg_getNumElements(m)); // invalid index
 269              		.loc 1 99 27 view .LVU58
 270              	.LBB38:
 100:source/HvMessage.h ****   return (&(m->elem)+index)->type;
 271              		.loc 1 100 3 view .LVU59
 272              	.LBB39:
 273              	.LBI39:
  90:source/HvMessage.h ****   return (int) m->numElements;
 274              		.loc 1 90 19 view .LVU60
 275              	.LBB40:
  91:source/HvMessage.h **** }
 276              		.loc 1 91 3 view .LVU61
  91:source/HvMessage.h **** }
 277              		.loc 1 91 3 is_stmt 0 view .LVU62
 278              	.LBE40:
 279              	.LBE39:
 100:source/HvMessage.h ****   return (&(m->elem)+index)->type;
 280              		.loc 1 100 3 view .LVU63
 281 0036 9A88     		ldrh	r2, [r3, #4]
 282              	.LVL17:
 100:source/HvMessage.h ****   return (&(m->elem)+index)->type;
 283              		.loc 1 100 3 view .LVU64
 284 0038 002A     		cmp	r2, #0
 285 003a 38D0     		beq	.L20
 286              		.loc 1 101 3 is_stmt 1 view .LVU65
 287              		.loc 1 101 28 is_stmt 0 view .LVU66
 288 003c 1A7A     		ldrb	r2, [r3, #8]	@ zero_extendqisi2
 289              	.LVL18:
 290              		.loc 1 101 28 view .LVU67
 291              	.LBE38:
 292              	.LBE37:
 293 003e 012A     		cmp	r2, #1
 294 0040 2DD0     		beq	.L15
 295 0042 0646     		mov	r6, r0
 296 0044 11D8     		bhi	.L27
 297              	.LBB42:
  41:source/HvControlVar.c ****           if (o->e.type == HV_MSG_FLOAT) msg_initWithFloat(n, msg_getTimestamp(m), o->e.data.f);
 298              		.loc 2 41 11 is_stmt 1 view .LVU68
 299              	.LVL19:
  41:source/HvControlVar.c ****           if (o->e.type == HV_MSG_FLOAT) msg_initWithFloat(n, msg_getTimestamp(m), o->e.data.f);
 300              		.loc 2 41 11 is_stmt 0 view .LVU69
 301              	.LBE42:
  58:source/HvMessage.h ****   return sizeof(HvMessage) + ((numElements-1) * sizeof(Element));
 302              		.loc 1 58 3 is_stmt 1 view .LVU70
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccntalC7.s 			page 10


  59:source/HvMessage.h **** }
 303              		.loc 1 59 3 view .LVU71
 304              	.LBB47:
  42:source/HvControlVar.c ****           else if (o->e.type == HV_MSG_HASH) msg_initWithHash(n, msg_getTimestamp(m), o->e.data.h);
 305              		.loc 2 42 19 is_stmt 0 view .LVU72
 306 0046 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
  41:source/HvControlVar.c ****           if (o->e.type == HV_MSG_FLOAT) msg_initWithFloat(n, msg_getTimestamp(m), o->e.data.f);
 307              		.loc 2 41 26 view .LVU73
 308 0048 84B0     		sub	sp, sp, #16
  42:source/HvControlVar.c ****           else if (o->e.type == HV_MSG_HASH) msg_initWithHash(n, msg_getTimestamp(m), o->e.data.h);
 309              		.loc 2 42 14 view .LVU74
 310 004a 012A     		cmp	r2, #1
  41:source/HvControlVar.c ****           if (o->e.type == HV_MSG_FLOAT) msg_initWithFloat(n, msg_getTimestamp(m), o->e.data.f);
 311              		.loc 2 41 26 view .LVU75
 312 004c 6C46     		mov	r4, sp
 313              	.LVL20:
  42:source/HvControlVar.c ****           else if (o->e.type == HV_MSG_HASH) msg_initWithHash(n, msg_getTimestamp(m), o->e.data.h);
 314              		.loc 2 42 11 is_stmt 1 view .LVU76
  42:source/HvControlVar.c ****           else if (o->e.type == HV_MSG_HASH) msg_initWithHash(n, msg_getTimestamp(m), o->e.data.h);
 315              		.loc 2 42 14 is_stmt 0 view .LVU77
 316 004e 30D0     		beq	.L28
  43:source/HvControlVar.c ****           else return;
 317              		.loc 2 43 16 is_stmt 1 view .LVU78
  43:source/HvControlVar.c ****           else return;
 318              		.loc 2 43 19 is_stmt 0 view .LVU79
 319 0050 032A     		cmp	r2, #3
 320 0052 EDD1     		bne	.L10
  43:source/HvControlVar.c ****           else return;
 321              		.loc 2 43 46 is_stmt 1 view .LVU80
 322              	.LVL21:
 323              	.LBB43:
 324              	.LBI43:
  82:source/HvMessage.h ****   return m->timestamp;
 325              		.loc 1 82 27 view .LVU81
 326              	.LBB44:
  83:source/HvMessage.h **** }
 327              		.loc 1 83 3 view .LVU82
  83:source/HvMessage.h **** }
 328              		.loc 1 83 3 is_stmt 0 view .LVU83
 329              	.LBE44:
 330              	.LBE43:
  43:source/HvControlVar.c ****           else return;
 331              		.loc 2 43 46 view .LVU84
 332 0054 4A68     		ldr	r2, [r1, #4]
 333 0056 2046     		mov	r0, r4
 334              	.LVL22:
  43:source/HvControlVar.c ****           else return;
 335              		.loc 2 43 46 view .LVU85
 336 0058 1968     		ldr	r1, [r3]
 337              	.LVL23:
  43:source/HvControlVar.c ****           else return;
 338              		.loc 2 43 46 view .LVU86
 339 005a FFF7FEFF 		bl	msg_initWithHash
 340              	.LVL24:
 341              	.L19:
  45:source/HvControlVar.c ****           break;
 342              		.loc 2 45 11 is_stmt 1 view .LVU87
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccntalC7.s 			page 11


 343 005e 2246     		mov	r2, r4
 344 0060 0021     		movs	r1, #0
 345 0062 3046     		mov	r0, r6
 346 0064 3B6A     		ldr	r3, [r7, #32]
 347 0066 9847     		blx	r3
 348              	.LVL25:
  46:source/HvControlVar.c ****         }
 349              		.loc 2 46 11 view .LVU88
 350 0068 E2E7     		b	.L10
 351              	.LVL26:
 352              	.L27:
  46:source/HvControlVar.c ****         }
 353              		.loc 2 46 11 is_stmt 0 view .LVU89
 354              	.LBE47:
 355 006a 023A     		subs	r2, r2, #2
 356 006c 012A     		cmp	r2, #1
 357 006e DFD8     		bhi	.L10
  56:source/HvControlVar.c ****           o->e.data.h = msg_getHash(m,0);
 358              		.loc 2 56 11 is_stmt 1 view .LVU90
  56:source/HvControlVar.c ****           o->e.data.h = msg_getHash(m,0);
 359              		.loc 2 56 21 is_stmt 0 view .LVU91
 360 0070 0322     		movs	r2, #3
  57:source/HvControlVar.c ****           sendMessage(_c, 0, m);
 361              		.loc 2 57 25 view .LVU92
 362 0072 2146     		mov	r1, r4
 363              	.LVL27:
  57:source/HvControlVar.c ****           sendMessage(_c, 0, m);
 364              		.loc 2 57 25 view .LVU93
 365 0074 1846     		mov	r0, r3
 366              	.LVL28:
  57:source/HvControlVar.c ****           sendMessage(_c, 0, m);
 367              		.loc 2 57 25 view .LVU94
 368 0076 7B60     		str	r3, [r7, #4]
  56:source/HvControlVar.c ****           o->e.data.h = msg_getHash(m,0);
 369              		.loc 2 56 21 view .LVU95
 370 0078 2A70     		strb	r2, [r5]
  57:source/HvControlVar.c ****           sendMessage(_c, 0, m);
 371              		.loc 2 57 11 is_stmt 1 view .LVU96
  57:source/HvControlVar.c ****           sendMessage(_c, 0, m);
 372              		.loc 2 57 25 is_stmt 0 view .LVU97
 373 007a FFF7FEFF 		bl	msg_getHash
 374              	.LVL29:
  58:source/HvControlVar.c ****           break;
 375              		.loc 2 58 11 view .LVU98
 376 007e 7B68     		ldr	r3, [r7, #4]
  57:source/HvControlVar.c ****           sendMessage(_c, 0, m);
 377              		.loc 2 57 25 view .LVU99
 378 0080 8446     		mov	ip, r0
  58:source/HvControlVar.c ****           break;
 379              		.loc 2 58 11 view .LVU100
 380 0082 2146     		mov	r1, r4
 381 0084 1A46     		mov	r2, r3
 382 0086 3046     		mov	r0, r6
 383 0088 3B6A     		ldr	r3, [r7, #32]
  57:source/HvControlVar.c ****           sendMessage(_c, 0, m);
 384              		.loc 2 57 23 view .LVU101
 385 008a C5F804C0 		str	ip, [r5, #4]
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccntalC7.s 			page 12


  58:source/HvControlVar.c ****           break;
 386              		.loc 2 58 11 is_stmt 1 view .LVU102
 387 008e 9847     		blx	r3
 388              	.LVL30:
  59:source/HvControlVar.c ****         }
 389              		.loc 2 59 11 view .LVU103
 390 0090 CEE7     		b	.L10
 391              	.LVL31:
 392              	.L21:
  68:source/HvControlVar.c ****           o->e.data.f = msg_getFloat(m,0);
 393              		.loc 2 68 11 view .LVU104
  68:source/HvControlVar.c ****           o->e.data.f = msg_getFloat(m,0);
 394              		.loc 2 68 21 is_stmt 0 view .LVU105
 395 0092 0A70     		strb	r2, [r1]
  69:source/HvControlVar.c ****           break;
 396              		.loc 2 69 11 is_stmt 1 view .LVU106
 397              	.LVL32:
 398              	.LBB48:
 399              	.LBI48:
 102:source/HvMessage.h **** }
 103:source/HvMessage.h **** 
 104:source/HvMessage.h **** static inline void msg_setBang(HvMessage *m, int index) {
 105:source/HvMessage.h ****   hv_assert(index < msg_getNumElements(m)); // invalid index
 106:source/HvMessage.h ****   (&(m->elem)+index)->type = HV_MSG_BANG;
 107:source/HvMessage.h ****   (&(m->elem)+index)->data.s = NULL;
 108:source/HvMessage.h **** }
 109:source/HvMessage.h **** 
 110:source/HvMessage.h **** static inline bool msg_isBang(const HvMessage *m, int index) {
 111:source/HvMessage.h ****   return (index < msg_getNumElements(m)) ? (msg_getType(m,index) == HV_MSG_BANG) : false;
 112:source/HvMessage.h **** }
 113:source/HvMessage.h **** 
 114:source/HvMessage.h **** static inline void msg_setFloat(HvMessage *m, int index, float f) {
 115:source/HvMessage.h ****   hv_assert(index < msg_getNumElements(m)); // invalid index
 116:source/HvMessage.h ****   (&(m->elem)+index)->type = HV_MSG_FLOAT;
 117:source/HvMessage.h ****   (&(m->elem)+index)->data.f = f;
 118:source/HvMessage.h **** }
 119:source/HvMessage.h **** 
 120:source/HvMessage.h **** static inline float msg_getFloat(const HvMessage *const m, int index) {
 400              		.loc 1 120 21 view .LVU107
 401              	.LBB49:
 121:source/HvMessage.h ****   hv_assert(index < msg_getNumElements(m)); // invalid index
 402              		.loc 1 121 3 view .LVU108
 403              		.loc 1 121 3 is_stmt 0 view .LVU109
 404              	.LBE49:
 405              	.LBE48:
  91:source/HvMessage.h **** }
 406              		.loc 1 91 3 is_stmt 1 view .LVU110
 407              	.LBB52:
 408              	.LBB50:
 122:source/HvMessage.h ****   return (&(m->elem)+index)->data.f;
 409              		.loc 1 122 3 view .LVU111
 410              	.LBE50:
 411              	.LBE52:
 412              		.loc 2 83 1 is_stmt 0 view .LVU112
 413 0094 0C37     		adds	r7, r7, #12
 414              		.cfi_remember_state
 415              		.cfi_def_cfa_offset 20
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccntalC7.s 			page 13


 416              	.LBB53:
 417              	.LBB51:
 418              		.loc 1 122 34 view .LVU113
 419 0096 DB68     		ldr	r3, [r3, #12]	@ float
 420              	.LVL33:
 421              		.loc 1 122 34 view .LVU114
 422              	.LBE51:
 423              	.LBE53:
  69:source/HvControlVar.c ****           break;
 424              		.loc 2 69 23 view .LVU115
 425 0098 4B60     		str	r3, [r1, #4]	@ float
  70:source/HvControlVar.c ****         }
 426              		.loc 2 70 11 is_stmt 1 view .LVU116
 427              		.loc 2 83 1 is_stmt 0 view .LVU117
 428 009a BD46     		mov	sp, r7
 429              		.cfi_def_cfa_register 13
 430              		@ sp needed
 431 009c F0BD     		pop	{r4, r5, r6, r7, pc}
 432              	.LVL34:
 433              	.L15:
 434              		.cfi_restore_state
  49:source/HvControlVar.c ****           o->e.data.f = msg_getFloat(m,0);
 435              		.loc 2 49 11 is_stmt 1 view .LVU118
  49:source/HvControlVar.c ****           o->e.data.f = msg_getFloat(m,0);
 436              		.loc 2 49 21 is_stmt 0 view .LVU119
 437 009e 0A70     		strb	r2, [r1]
  50:source/HvControlVar.c ****           sendMessage(_c, 0, m);
 438              		.loc 2 50 11 is_stmt 1 view .LVU120
 439              	.LVL35:
 440              	.LBB54:
 441              	.LBI54:
 120:source/HvMessage.h ****   hv_assert(index < msg_getNumElements(m)); // invalid index
 442              		.loc 1 120 21 view .LVU121
 443              	.LBB55:
 121:source/HvMessage.h ****   return (&(m->elem)+index)->data.f;
 444              		.loc 1 121 3 view .LVU122
 121:source/HvMessage.h ****   return (&(m->elem)+index)->data.f;
 445              		.loc 1 121 3 is_stmt 0 view .LVU123
 446              	.LBE55:
 447              	.LBE54:
  91:source/HvMessage.h **** }
 448              		.loc 1 91 3 is_stmt 1 view .LVU124
 449              	.LBB58:
 450              	.LBB56:
 451              		.loc 1 122 3 view .LVU125
 452              	.LBE56:
 453              	.LBE58:
  51:source/HvControlVar.c ****           break;
 454              		.loc 2 51 11 is_stmt 0 view .LVU126
 455 00a0 1A46     		mov	r2, r3
 456              	.LBB59:
 457              	.LBB57:
 458              		.loc 1 122 34 view .LVU127
 459 00a2 DE68     		ldr	r6, [r3, #12]	@ float
 460              	.LVL36:
 461              		.loc 1 122 34 view .LVU128
 462              	.LBE57:
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccntalC7.s 			page 14


 463              	.LBE59:
  51:source/HvControlVar.c ****           break;
 464              		.loc 2 51 11 view .LVU129
 465 00a4 2146     		mov	r1, r4
 466              	.LVL37:
  51:source/HvControlVar.c ****           break;
 467              		.loc 2 51 11 view .LVU130
 468 00a6 3B6A     		ldr	r3, [r7, #32]
 469              	.LVL38:
  50:source/HvControlVar.c ****           sendMessage(_c, 0, m);
 470              		.loc 2 50 23 view .LVU131
 471 00a8 6E60     		str	r6, [r5, #4]	@ float
  51:source/HvControlVar.c ****           break;
 472              		.loc 2 51 11 is_stmt 1 view .LVU132
 473 00aa 9847     		blx	r3
 474              	.LVL39:
  52:source/HvControlVar.c ****         }
 475              		.loc 2 52 11 view .LVU133
 476 00ac C0E7     		b	.L10
 477              	.LVL40:
 478              	.L20:
 479              	.LBB60:
 480              	.LBB41:
  52:source/HvControlVar.c ****         }
 481              		.loc 2 52 11 is_stmt 0 view .LVU134
 482 00ae FFF7FEFF 		bl	msg_getType.part.0
 483              	.LVL41:
 484              	.L28:
  52:source/HvControlVar.c ****         }
 485              		.loc 2 52 11 view .LVU135
 486              	.LBE41:
 487              	.LBE60:
 488              	.LBB61:
  42:source/HvControlVar.c ****           else if (o->e.type == HV_MSG_HASH) msg_initWithHash(n, msg_getTimestamp(m), o->e.data.h);
 489              		.loc 2 42 42 is_stmt 1 view .LVU136
 490              	.LBB45:
 491              	.LBI45:
  82:source/HvMessage.h ****   return m->timestamp;
 492              		.loc 1 82 27 view .LVU137
 493              	.LBB46:
  83:source/HvMessage.h **** }
 494              		.loc 1 83 3 view .LVU138
  83:source/HvMessage.h **** }
 495              		.loc 1 83 3 is_stmt 0 view .LVU139
 496              	.LBE46:
 497              	.LBE45:
  42:source/HvControlVar.c ****           else if (o->e.type == HV_MSG_HASH) msg_initWithHash(n, msg_getTimestamp(m), o->e.data.h);
 498              		.loc 2 42 42 view .LVU140
 499 00b2 91ED010A 		vldr.32	s0, [r1, #4]
 500 00b6 2046     		mov	r0, r4
 501              	.LVL42:
  42:source/HvControlVar.c ****           else if (o->e.type == HV_MSG_HASH) msg_initWithHash(n, msg_getTimestamp(m), o->e.data.h);
 502              		.loc 2 42 42 view .LVU141
 503 00b8 1968     		ldr	r1, [r3]
 504              	.LVL43:
  42:source/HvControlVar.c ****           else if (o->e.type == HV_MSG_HASH) msg_initWithHash(n, msg_getTimestamp(m), o->e.data.h);
 505              		.loc 2 42 42 view .LVU142
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccntalC7.s 			page 15


 506 00ba FFF7FEFF 		bl	msg_initWithFloat
 507              	.LVL44:
  42:source/HvControlVar.c ****           else if (o->e.type == HV_MSG_HASH) msg_initWithHash(n, msg_getTimestamp(m), o->e.data.h);
 508              		.loc 2 42 42 view .LVU143
 509 00be CEE7     		b	.L19
 510              	.LBE61:
 511              		.cfi_endproc
 512              	.LFE402:
 514              		.section	.rodata.__func__.1,"a"
 515              		.align	2
 516              		.set	.LANCHOR0,. + 0
 519              	__func__.1:
 520 0000 6D73675F 		.ascii	"msg_getType\000"
 520      67657454 
 520      79706500 
 521              		.text
 522              	.Letext0:
 523              		.file 3 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/machine/_default_types.h"
 524              		.file 4 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/sys/_stdint.h"
 525              		.file 5 "/Library/DaisyToolchain/0.2.0/arm/lib/gcc/arm-none-eabi/10.3.1/include/stddef.h"
 526              		.file 6 "source/HvHeavy.h"
 527              		.file 7 "source/HvControlVar.h"
 528              		.file 8 "source/HvUtils.h"
 529              		.file 9 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/assert.h"
ARM GAS  /var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccntalC7.s 			page 16


DEFINED SYMBOLS
                            *ABS*:0000000000000000 HvControlVar.c
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccntalC7.s:19     .rodata.msg_getType.part.0.str1.4:0000000000000000 $d
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccntalC7.s:26     .text.msg_getType.part.0:0000000000000000 $t
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccntalC7.s:32     .text.msg_getType.part.0:0000000000000000 msg_getType.part.0
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccntalC7.s:56     .text.msg_getType.part.0:0000000000000010 $d
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccntalC7.s:63     .text.cVar_init_f:0000000000000000 $t
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccntalC7.s:70     .text.cVar_init_f:0000000000000000 cVar_init_f
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccntalC7.s:99     .text.cVar_init_s:0000000000000000 $t
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccntalC7.s:106    .text.cVar_init_s:0000000000000000 cVar_init_s
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccntalC7.s:146    .text.cVar_free:0000000000000000 $t
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccntalC7.s:153    .text.cVar_free:0000000000000000 cVar_free
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccntalC7.s:167    .text.cVar_onMessage:0000000000000000 $t
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccntalC7.s:174    .text.cVar_onMessage:0000000000000000 cVar_onMessage
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccntalC7.s:515    .rodata.__func__.1:0000000000000000 $d
/var/folders/fb/yfxt3z4538j6z0vjt03w70vc0000gn/T//ccntalC7.s:519    .rodata.__func__.1:0000000000000000 __func__.1

UNDEFINED SYMBOLS
__assert_func
hv_string_to_hash
msg_getHash
msg_initWithHash
msg_initWithFloat
